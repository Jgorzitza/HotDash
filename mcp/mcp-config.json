{
  "mcpServers": {
    "github-official": {
      "description": "Official GitHub MCP server for repository operations, issues, PRs, and more",
      "command": "docker",
      "args": [
        "run",
        "-i",
        "--rm",
        "-e",
        "GITHUB_PERSONAL_ACCESS_TOKEN",
        "ghcr.io/github/github-mcp-server"
      ],
      "env": {
        "GITHUB_PERSONAL_ACCESS_TOKEN": "[REDACTED]"
      },
      "capabilities": [
        "repository_management",
        "issue_tracking",
        "pull_requests",
        "code_search",
        "workflows"
      ]
    },
    "context7": {
      "description": "Context7 MCP server for enhanced context management",
      "type": "http",
      "url": "http://localhost:3001/mcp",
      "capabilities": [
        "context_management",
        "semantic_search",
        "code_understanding"
      ]
    },
    "supabase": {
      "description": "Supabase MCP server for database operations and backend services",
      "command": "npx",
      "args": [
        "-y",
        "@supabase/mcp-server-supabase",
        "--project-ref",
        "mmbjiyhsvniqxibzgyvx"
      ],
      "env": {
        "SUPABASE_ACCESS_TOKEN": "[REDACTED]"
      },
      "capabilities": [
        "database_operations",
        "authentication",
        "storage",
        "edge_functions",
        "realtime"
      ]
    },
    "fly": {
      "description": "Fly.io MCP server for deployment and infrastructure management",
      "type": "http",
      "url": "http://127.0.0.1:8080/mcp",
      "capabilities": [
        "deployment",
        "infrastructure",
        "monitoring",
        "scaling"
      ]
    },
    "shopify": {
      "description": "Shopify MCP server for e-commerce operations and Liquid templates",
      "command": "npx",
      "args": [
        "-y",
        "@shopify/dev-mcp@latest"
      ],
      "env": {
        "LIQUID_VALIDATION_MODE": "partial"
      },
      "capabilities": [
        "shopify_api",
        "liquid_templates",
        "product_management",
        "order_management",
        "theme_development"
      ]
    },
    "google-analytics": {
      "description": "Google Analytics MCP server for analytics data and reporting",
      "command": "pipx",
      "args": [
        "run",
        "analytics-mcp"
      ],
      "env": {
        "GOOGLE_APPLICATION_CREDENTIALS": "/home/justin/HotDash/hot-dash/vault/occ/google/analytics-service-account.json",
        "GOOGLE_PROJECT_ID": "hotrodan-seo-reports"
      },
      "capabilities": [
        "analytics_reporting",
        "metrics_tracking",
        "user_behavior_analysis",
        "conversion_tracking"
      ]
    },
    "chrome-devtools": {
      "description": "Chrome DevTools MCP server",
      "command": "npx",
      "args": ["-y", "chrome-devtools-mcp@latest", "--browserUrl", "http://127.0.0.1:9222"]
    }
  },
  "usage_guidelines": {
    "github-official": {
      "when_to_use": [
        "Creating or managing GitHub issues",
        "Working with pull requests",
        "Searching code across repositories",
        "Managing GitHub Actions workflows",
        "Repository administration tasks"
      ],
      "examples": [
        "Create an issue for bug tracking",
        "List open pull requests",
        "Search for specific code patterns",
        "Trigger workflow runs"
      ]
    },
    "context7": {
      "when_to_use": [
        "Enhanced semantic code search",
        "Building context for complex tasks",
        "Understanding code relationships",
        "Cross-file dependency analysis"
      ],
      "examples": [
        "Find all usages of a specific pattern",
        "Understand component relationships",
        "Build context for refactoring"
      ]
    },
    "supabase": {
      "when_to_use": [
        "Database schema operations",
        "Running queries or migrations",
        "Managing authentication",
        "Working with storage buckets",
        "Deploying edge functions"
      ],
      "examples": [
        "Create a new database table",
        "Query user data",
        "Upload files to storage",
        "Deploy a serverless function"
      ]
    },
    "fly": {
      "when_to_use": [
        "Deploying applications",
        "Managing infrastructure",
        "Monitoring application health",
        "Scaling resources",
        "Viewing logs"
      ],
      "examples": [
        "Deploy the latest version",
        "Check application status",
        "Scale to more instances",
        "View recent logs"
      ]
    },
    "shopify": {
      "when_to_use": [
        "Developing Shopify themes",
        "Working with Liquid templates",
        "Managing products or orders",
        "Testing Shopify integrations",
        "Validating Liquid syntax"
      ],
      "examples": [
        "Validate Liquid template syntax",
        "Create product listings",
        "Test theme components",
        "Query Shopify API"
      ]
    },
    "google-analytics": {
      "when_to_use": [
        "Fetching analytics data",
        "Generating reports",
        "Analyzing user behavior",
        "Tracking conversions",
        "Monitoring traffic metrics"
      ],
      "examples": [
        "Get page view statistics",
        "Generate conversion report",
        "Analyze user demographics",
        "Track campaign performance"
      ]
    }
,
    "chrome-devtools": {
      "when_to_use": [
        "Inspecting live browser console/network logs during development",
        "Profiling performance (timeline, CPU, memory) for SPA/SSR issues",
        "Auditing accessibility and Lighthouse from an automated agent",
        "Automating DOM inspection and element state collection"
      ],
      "examples": [
        "Capture console errors from a failing route load",
        "Record a performance trace around dashboard render",
        "Collect network HAR for an API call sequence",
        "Evaluate selectors and extract DOM state for a bug report"
      ]
    }
  }
}

