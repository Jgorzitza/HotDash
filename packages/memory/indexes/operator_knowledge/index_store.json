{"docstore/data":{"ce19078e-8736-4023-9405-980e956d8d06":{"indexId":"ce19078e-8736-4023-9405-980e956d8d06","nodesDict":{"3be081c6-a56a-4005-a41a-d459e5ec5b85":{"id_":"3be081c6-a56a-4005-a41a-d459e5ec5b85","metadata":{"source":"docs/runbooks/agent_launch_checklist.md","lastModified":"2025-10-11T00:18:41.387Z"},"excludedEmbedMetadataKeys":[],"excludedLlmMetadataKeys":[],"relationships":{"SOURCE":{"nodeId":"docs/runbooks/agent_launch_checklist.md","metadata":{"source":"docs/runbooks/agent_launch_checklist.md","lastModified":"2025-10-11T00:18:41.387Z"},"hash":"hBRTWFapVpkCXMsr+RrsX+MvHSILEFmgtin7ALx4ZF0="}},"text":"---\nepoch: 2025.10.E1\ndoc: docs/runbooks/agent_launch_checklist.md\nowner: manager\nlast_reviewed: 2025-10-12\nexpires: 2025-10-19\n---\n# Agent Launch Checklist\n\nRun this checklist before starting any automation or human agent. Skip nothing—every item ensures the agent has the tools, secrets, and context to execute end-to-end.\n\n## 1. Canon Review\n- [ ] Confirm the agent has read:\n  - `docs/NORTH_STAR.md`\n  - `docs/git_protocol.md`\n  - `docs/directions/README.md`\n  - Their role file under `docs/directions/<role>.md`\n  - `docs/ops/credential_index.md`\n\n## 2. Credential Readiness\n- [ ] Source vault secrets required for the role (refer to `docs/ops/credential_index.md`).\n- [ ] Verify CLI auth for required tools:\n  - `gh auth status`\n  - `/home/justin/.fly/bin/fly auth status` (after sourcing `vault/occ/fly/api_token.env`)\n- [ ] Document the confirmation (command + timestamp) in the agent’s feedback file before launch.\n\n## 3. Evidence Gate Reminder\n- [ ] Reiterate: every feedback update must include command, timestamp, output path.\n- [ ] Confirm the agent has access to `artifacts/` directory to store logs/screenshots.\n\n## 4. Blocker Sweep\n- [ ] Review recent feedback for unresolved blockers tied to this role.\n- [ ] Ensure direction docs reflect latest decisions; if not, update before launch.\n\n## 5. Launch Approval\n- [ ] Manager signs off in `feedback/manager.md` with:\n  - Agent name\n  - Launch time\n  - Checklist confirmation\n- [ ] Notify the agent to begin, pointing them to their direction file and relevant runbooks.\n\nOnly after this checklist is complete may the agent start work. This process prevents stack drift, missing secrets, and ambiguous ownership.","textTemplate":"","endCharIdx":1675,"metadataSeparator":"\n","type":"TEXT","hash":"R7PczAawNSuUdPRa4BMeitSwrkwirFn4f7vXhhv+B3k="},"71c1f55f-1e55-4814-8ebf-1fa9fd64883d":{"id_":"71c1f55f-1e55-4814-8ebf-1fa9fd64883d","metadata":{"source":"docs/runbooks/backup-restore-week3.md","lastModified":"2025-10-11T02:52:09.274Z"},"excludedEmbedMetadataKeys":[],"excludedLlmMetadataKeys":[],"relationships":{"SOURCE":{"nodeId":"docs/runbooks/backup-restore-week3.md","metadata":{"source":"docs/runbooks/backup-restore-week3.md","lastModified":"2025-10-11T02:52:09.274Z"},"hash":"XW9JoORIivu9Gt4xv/oH1IUUioFiqOAOhInAPDNCk/8="}},"text":"# Week 3 Backup/Restore Runbook\n\n## Overview\nThis runbook covers backup and restore procedures for HotDash infrastructure during Week 3 operations.\n\n## Prerequisites\n- Access to vault credentials: `vault/occ/supabase/`, `vault/occ/fly/`\n- Local Supabase CLI installed and configured\n- psql client available\n- Database credentials exported\n\n## Backup Procedures\n\n### 1. Supabase Database Backup\n```bash\n# Set connection variables\nexport DATABASE_URL=\"postgresql://postgres:postgres@127.0.0.1:54322/postgres\"\n\n# Create backup directory\nmkdir -p backups/$(date +%Y-%m-%d)\n\n# Generate backup\npg_dump \"$DATABASE_URL\" > \"backups/$(date +%Y-%m-%d)/hotdash-backup-$(date +%H%M%S).sql\"\n\n# Verify backup file size and contents\nls -lh \"backups/$(date +%Y-%m-%d)/\"\nhead -n 20 \"backups/$(date +%Y-%m-%d)/hotdash-backup-$(date +%H%M%S).sql\"\n```\n\n### 2. Configuration Backup\n```bash\n# Backup critical config files\ntar -czf \"backups/$(date +%Y-%m-%d)/config-backup-$(date +%H%M%S).tar.gz\" \\\n  fly.toml \\\n  supabase/config.toml \\\n  .env.example \\\n  .env.staging.example \\\n  package.json \\\n  prisma/schema.prisma\n```\n\n## Restore Procedures\n\n### 1. Database Restore to Local Supabase\n```bash\n# Ensure Supabase is running\nsupabase start\n\n# Set connection variables  \nexport DATABASE_URL=\"postgresql://postgres:postgres@127.0.0.1:54322/postgres\"\n\n# Verify connection\npsql \"$DATABASE_URL\" -c \"SELECT current_database(), current_user;\"\n\n# Restore from backup (adjust path as needed)\n# For SQL dump:\npsql \"$DATABASE_URL\" < backups/YYYY-MM-DD/hotdash-backup-HHMMSS.sql\n\n# For pg_dump format:\n# pg_restore --no-owner --no-privileges --clean --if-exists -d \"$DATABASE_URL\" backups/YYYY-MM-DD/backup.dump\n```\n\n### 2. Post-Restore Verification\n```bash\n# Check database connectivity and basic tables\npsql \"$DATABASE_URL\" -c \"SELECT now(), version();\"\n\n# Verify key tables exist\npsql \"$DATABASE_URL\" -c \"SELECT table_name FROM information_schema.tables WHERE table_schema='public' ORDER BY 1 LIMIT 25;\"\n\n# Check decision_sync_events view\npsql \"$DATABASE_URL\" -c \"SELECT count(*) FROM public.decision_sync_events;\"\n\n# Test application connectivity\nnpm run setup\n```\n\n### 3. Service Health Verification\n```bash\n# Check Supabase services\nsupabase status\n\n# Verify edge functions\ncurl -sS \"http://127.0.0.1:54321/functions/v1/occ-log\" \\\n  -H \"apikey: sb_publishable_ACJWlzQHlZjBrEguHvfOxg_3BJgxAaH\" \\\n  -H \"Content-Type: application/json\" \\\n  -d '{\"ping\":\"restore-test\"}'\n\n# Check REST API access\ncurl -sS \"http://127.0.0.1:54321/rest/v1/decision_sync_events?limit=1\" \\\n  -H \"apikey: sb_publishable_ACJWlzQHlZjBrEguHvfOxg_3BJgxAaH\"\n```\n\n## Recovery Time Objectives (RTO)\n- Database restore: < 15 minutes for local environment\n- Configuration restore: < 5 minutes\n- Full service verification: < 10 minutes\n- Total RTO: < 30 minutes\n\n## Recovery Point Objectives (RPO)\n- Database: 1 hour (hourly backups)\n- Configuration: 24 hours (daily backups)\n\n## Escalation\nIf restore fails after 2 attempts:\n1. Document exact error messages and commands used\n2. Escalate to manager with evidence\n3. Consider alternative restore methods or rollback procedures\n\n## Evidence Requirements\n- Capture all command outputs with timestamps\n- Document any deviations from procedure\n- Log restore times and verification results\n- Redact sensitive values in documentation\n\n## Last Tested\n- Date: TBD\n- Operator: TBD  \n- Results: TBD\n- Issues Found: TBD\n- Resolution Time: TBD","textTemplate":"","endCharIdx":3415,"metadataSeparator":"\n","type":"TEXT","hash":"zLiLZW3QusF0/q7ybu5k71/82Ln3prBa2pHKUaOOm+E="},"1b975544-1bae-49a0-a6e4-c6ad48d03c63":{"id_":"1b975544-1bae-49a0-a6e4-c6ad48d03c63","metadata":{"source":"docs/runbooks/cx_escalations.md","lastModified":"2025-10-11T00:18:41.327Z"},"excludedEmbedMetadataKeys":[],"excludedLlmMetadataKeys":[],"relationships":{"SOURCE":{"nodeId":"docs/runbooks/cx_escalations.md","metadata":{"source":"docs/runbooks/cx_escalations.md","lastModified":"2025-10-11T00:18:41.327Z"},"hash":"wo96zq4LXCQMvcIiVNPaILGpgYMOjQ/nRW9alc2o39c="},"NEXT":{"nodeId":"c0581c2e-8cbc-4979-9c8d-e84e8fd5663f","metadata":{},"hash":"Mgx5mC35OZ41ogdB6x7EpBdSNLnkX3sUfZoMoE81nk8="}},"text":"---\nepoch: 2025.10.E1\ndoc: docs/runbooks/cx_escalations.md\nowner: support\nlast_reviewed: 2025-10-08\ndoc_hash: TBD\nexpires: 2025-10-20\n---\n# CX Escalations Runbook — Operator Control Center\n\n## Purpose\nMap each CX Escalations tile action to internal Standard Operating Procedures (SOPs) and escalation ladders. This runbook enables operators to handle customer conversations efficiently while maintaining quality and SLA compliance.\n\n**Support Inbox:** customer.support@hotrodan.com — archive escalations, smoke test evidence, and Chatwoot deployment updates here.\n\n---\n\n## Dashboard Actions & SOPs\n\n### Modal Screenshots (Mock Mode)\n![CX Escalation modal default state](images/cx_escalation_modal_overview.svg)\n![Success toast after approval](images/cx_escalation_modal_toast.svg)\n\n### 1. View Escalated Conversation\n**Dashboard UI:** CX Escalations tile displays list of conversations with SLA breach indicators\n\n**Operator Action:**\n- Click conversation in tile to open the CX Escalation modal\n- Review customer name, status, breach time, last message timestamp\n\n**SOP Mapping:**\n- **SOP-CX-001:** Conversation Triage Protocol\n  - Priority 1: SLA breached >2 hours → Immediate response required\n  - Priority 2: SLA breached <2 hours → Response within 30 minutes\n  - Priority 3: Tagged \"escalation\" but within SLA → Review within 1 hour\n\n**Escalation Ladder:**\n- L1: CX Agent (first response, template selection)\n- L2: CX Lead (escalation tag or complex issue)\n- L3: Operations Manager (refund >$500, policy exception)\n\n---\n\n### 2. Approve & Send Reply (AI Suggestion)\n**Dashboard UI:** Conversation detail modal with \"Suggested Reply (AI-generated)\" card\n\n**Operator Action:**\n- Review the AI-generated suggestion surfaced in the modal.\n- Confirm the greeting reflects the customer name (defaults to \"Customer\" if Chatwoot lacks profile data).\n- Edit the \"Operator Note\" field if extra context should be captured in the audit trail.\n- Click \"Approve & Send Reply\" → sends the suggestion to Chatwoot and logs the decision.\n\n**SOP Mapping:**\n- **SOP-CX-002:** Template Response Guidelines\n  - AI suggestion currently mirrors the `ack_delay` template; confirm tone and promise match the customer issue before approving.\n  - If the suggestion is not appropriate, escalate the conversation or handle directly in Chatwoot.\n- **Fallback:** When no suggestion is shown (missing `suggestedReply`), do **not** approve; escalate or reply in Chatwoot until template selector is available.\n\n**Decision Logging:**\n- Action: `chatwoot.approve_send`\n- Scope: `ops`\n- Metadata: conversationId, replyBody, operatorEmail, optional note\n\n**Escalation Criteria:**\n- Approved reply but no customer acknowledgement in 24h → Re-escalate to L2\n- Suggestion missing or customer requests manager → Escalate to L3 immediately\n\n---\n\n### 3. Tag Conversation for Escalation\n**Dashboard UI:** Modal action button \"Escalate to Manager\"\n\n**Operator Action:**\n- Click \"Escalate to Manager\" button\n- Conversation tagged in Chatwoot with \"escalation\" tag\n- Decision logged in HotDash\n\n**SOP Mapping:**\n- **SOP-CX-003:** Manager Escalation Protocol\n  - Valid reasons: Policy exception, refund >$500, legal/fraud concern, abusive language\n  - Notification: CX Lead notified via # (future integration)\n  - Handoff: Add internal note summarizing issue + customer expectation\n\n**Escalation SLA:**\n- Manager must acknowledge within 2 hours\n- Manager must resolve or provide update within 24 hours\n\n**Decision Logging:**\n- Action: `chatwoot.escalate`\n- Scope: `ops`\n- Metadata: conversationId, note (if provided), operatorEmail\n- Chatwoot label applied: `escalation`\n\n---\n\n### 4.","textTemplate":"","endCharIdx":3637,"metadataSeparator":"\n","type":"TEXT","hash":"UHbu5UpVEfJi4zuvsZGTXzEGqC/EIy9gSthRrl+b0vw="},"c0581c2e-8cbc-4979-9c8d-e84e8fd5663f":{"id_":"c0581c2e-8cbc-4979-9c8d-e84e8fd5663f","metadata":{"source":"docs/runbooks/cx_escalations.md","lastModified":"2025-10-11T00:18:41.327Z"},"excludedEmbedMetadataKeys":[],"excludedLlmMetadataKeys":[],"relationships":{"SOURCE":{"nodeId":"docs/runbooks/cx_escalations.md","metadata":{"source":"docs/runbooks/cx_escalations.md","lastModified":"2025-10-11T00:18:41.327Z"},"hash":"wo96zq4LXCQMvcIiVNPaILGpgYMOjQ/nRW9alc2o39c="},"PREVIOUS":{"nodeId":"1b975544-1bae-49a0-a6e4-c6ad48d03c63","metadata":{"source":"docs/runbooks/cx_escalations.md","lastModified":"2025-10-11T00:18:41.327Z"},"hash":"b1znRMud/cNmdteeJHRRzTYiA+rk0wNLIy/Qz2RRpMs="},"NEXT":{"nodeId":"9f4c1a00-0994-43a9-a1d9-69df1e4a4a75","metadata":{},"hash":"S+sE07wTs4B8zEl5LIfq2XnP9M2d6KGxm/q0h6XA1Qk="}},"text":"escalate`\n- Scope: `ops`\n- Metadata: conversationId, note (if provided), operatorEmail\n- Chatwoot label applied: `escalation`\n\n---\n\n### 4. Mark Conversation as Resolved\n**Dashboard UI:** Modal action button \"Mark Resolved\"\n\n**Operator Action:**\n- After customer satisfaction confirmed, click \"Mark Resolved\"\n- Conversation status updated in Chatwoot\n- Removed from CX Escalations tile\n\n**SOP Mapping:**\n- **SOP-CX-004:** Resolution Verification\n  - Customer explicitly confirms issue resolved OR\n  - 48 hours since last customer message after resolution offered\n  - Do NOT mark resolved if: refund pending, return in progress, follow-up promised\n\n**Decision Logging:**\n- Action: `chatwoot.mark_resolved`\n- Scope: `ops`\n- Metadata: conversationId, optional note, operatorEmail\n\n---\n\n## Chatwoot Template Library\n\nCurrent templates (app/services/chatwoot/templates.ts):\n\n> **Note:** Suggested replies now map to templates via heuristics: shipping/delivery cues → `ship_update`, refund/return cues → `refund_offer`, otherwise `ack_delay`. Operators should still confirm tone before approving.\n\n## Chatwoot Fly Deployment Validation (Pre-Launch)\n\nWhen reliability signals the Fly deployment window, execute the following to confirm Chatwoot connectivity and dashboard handoffs:\n\n1. **Pre-Deployment Checklist**\n   - Confirm deployment notice in `#occ-reliability` and log the window in `feedback/support.md`.\n   - Download latest deployment playbook from reliability; note new Fly app hostname.\n   - Notify enablement + marketing via customer.support@hotrodan.com so comms and macros pause during the cutover.\n   - Update the smoke script `scripts/ops/chatwoot-fly-smoke.sh` with the announced Fly hostname and any refreshed API tokens (use `--env staging` to pull from vault defaults); record the values in `feedback/support.md` for audit.\n\n2. **During Deployment**\n   - Run `scripts/ops/chatwoot-fly-smoke.sh --env staging --host <fly-host>` (or pass `--token-file` with the deployment bundle) to capture recurring API probes; archive logs under `artifacts/support/chatwoot-fly-deploy/`.\n   - Validate OCC API proxy: launch CX Escalations tile in staging (`?mock=1`) and ensure conversation list responds within SLA (<2s). Log timestamp + request ID.\n   - Attempt modal actions (approve, escalate) in mock conversation; confirm decision logs write to Supabase without errors. If failures occur, escalate immediately via reliability bridge call.\n\n3. **Post-Deployment Smoke**\n   - Re-run tile load and modal actions against live conversation (if available) to ensure Chatwoot webhook responses succeed.\n   - Update escalation SOPs to reference the new Fly host (Chatwoot admin links, troubleshooting flow) and distribute summary through customer.support@hotrodan.com.\n   - Attach evidence (curl logs, screenshots, decision IDs) to `feedback/support.md` and notify manager once validation passes.\n\n### Template: `ack_delay`\n**Label:** Acknowledge delay\n**Body:**\n```\nHi {{name}}, thanks for your patience. I'm checking on your order now and will follow up with an update shortly.\n```\n**Use cases:** Order status questions, general inquiry delays, investigation needed\n\n---\n\n### Template: `ship_update`\n**Label:** Shipping updated\n**Body:**\n```\nAppreciate you reaching out, {{name}}. Your order is with our carrier and I'm expediting a status check right away.\n```\n**Use cases:** Shipping delays, tracking issues, carrier questions\n\n---\n\n### Template: `refund_offer`\n**Label:** Refund offer\n**Body:**\n```\nI'm sorry for the trouble, {{name}}. I can refund this immediately or offer store credit—let me know what works best.\n```\n**Use cases:** Product defects, wrong item shipped, customer dissatisfaction, quality issues\n\n---\n\n## Mock Mode Transcript Snippets & Edge Cases\n\n> Pull these reference conversations from Playwright staging artefact `artifacts/playwright/shopify/playwright-staging-2025-10-10T04-20-37Z.log` while `?mock=0` remains blocked. Use them to rehearse tone, notes, and escalation decisions.\n\n### Scenario Gallery\n\n#### Shipping Delay Reassurance (`ship_update`)\n```\nCustomer (Evergreen Outfitters — #PWA-4092):\n\"Hey team, my order still says processing. Do you have an update?\"\n\nSupport AI Suggestion:\n\"Appreciate you reaching out, Alex.","textTemplate":"","startCharIdx":3499,"endCharIdx":7751,"metadataSeparator":"\n","type":"TEXT","hash":"dXL6XZAeyOlzuAshoCCwqJTor28VY0VmPGVhN365gmE="},"9f4c1a00-0994-43a9-a1d9-69df1e4a4a75":{"id_":"9f4c1a00-0994-43a9-a1d9-69df1e4a4a75","metadata":{"source":"docs/runbooks/cx_escalations.md","lastModified":"2025-10-11T00:18:41.327Z"},"excludedEmbedMetadataKeys":[],"excludedLlmMetadataKeys":[],"relationships":{"SOURCE":{"nodeId":"docs/runbooks/cx_escalations.md","metadata":{"source":"docs/runbooks/cx_escalations.md","lastModified":"2025-10-11T00:18:41.327Z"},"hash":"wo96zq4LXCQMvcIiVNPaILGpgYMOjQ/nRW9alc2o39c="},"PREVIOUS":{"nodeId":"c0581c2e-8cbc-4979-9c8d-e84e8fd5663f","metadata":{"source":"docs/runbooks/cx_escalations.md","lastModified":"2025-10-11T00:18:41.327Z"},"hash":"Mgx5mC35OZ41ogdB6x7EpBdSNLnkX3sUfZoMoE81nk8="},"NEXT":{"nodeId":"f7c85a0b-9703-4729-89cc-49ee28568a75","metadata":{},"hash":"1+IDSoktjHy9lX2kM1EV3/+LsdCev1ylycXk2NRGa0s="}},"text":"I can refund this immediately or offer store credit—let me know what works best.\n```\n**Use cases:** Product defects, wrong item shipped, customer dissatisfaction, quality issues\n\n---\n\n## Mock Mode Transcript Snippets & Edge Cases\n\n> Pull these reference conversations from Playwright staging artefact `artifacts/playwright/shopify/playwright-staging-2025-10-10T04-20-37Z.log` while `?mock=0` remains blocked. Use them to rehearse tone, notes, and escalation decisions.\n\n### Scenario Gallery\n\n#### Shipping Delay Reassurance (`ship_update`)\n```\nCustomer (Evergreen Outfitters — #PWA-4092):\n\"Hey team, my order still says processing. Do you have an update?\"\n\nSupport AI Suggestion:\n\"Appreciate you reaching out, Alex. Your order is with our carrier and I'm expediting a status check right away.\"\n```\n- Approve AI reply, append operator note: \"Requested UPS BOL via #occ-reliability @ 09:12 UTC\" for audit trail.\n- If tracking ID missing, add manual sentence with link before approving; follow SOP-CX-002 for promise tracking.\n\n#### Refund Offer With Guardrails (`refund_offer`)\n```\nCustomer (Peak Performance Gear — #PWA-4103):\n\"The zipper broke on first use. Can you just refund me?\"\n\nSupport AI Suggestion:\n\"I'm sorry for the trouble, Jamie. I can refund this immediately or offer store credit—let me know what works best.\"\n```\n- Approve suggestion, then verify refund amount; escalate if >$500 or customer mentions \"chargeback\".\n- Log Linear ticket (INC-SUPPORT-###) in operator note so L2/L3 can monitor reimbursement completion.\n\n#### Backlog Queue Check-In (`ack_delay`)\n```\nCustomer (Atelier Belle Maison — #PWA-4110):\n\"Just checking—did you get my earlier message about the wrong color?\"\n\nSupport AI Suggestion:\n\"Hi Pat, thanks for your patience. I'm checking on your order now and will follow up with an update shortly.\"\n```\n- Approve reply, set Chatwoot reminder for 45 min follow-up, and document SLA timer in note.\n- If conversation already tagged `escalation`, skip approval and confirm manager action before responding.\n\n### Edge Case Checklist\n- **Missing AI Draft:** If `suggestedReply` is null, do not approve. Escalate via `Escalate to Manager`, capture console log, and file in `feedback/engineering.md`.\n- **Name Placeholder Fallback:** Templates default to \"Customer\" when Chatwoot lacks profile data; personalize manually or update contact record prior to approval.\n- **High-Risk Language:** Terms like \"legal\", \"fraud\", \"chargeback\", or threats require immediate escalation even if the draft appears suitable.\n- **Rapid Reopen:** If customer responds within 30 min after `chatwoot.mark_resolved`, the tile will re-surface with SLA breach 0. Reassess before marking resolved again.\n- **Rate Limit Toast:** Should the modal emit a Shopify rate-limit error, switch to `docs/runbooks/shopify_rate_limit_recovery.md` and log the incident (timestamp + request ID) in `feedback/support.md`.\n\n---\n\n## Integration Monitoring & Alerts\n\n**Health Checks:**\n- Chatwoot API response time: <500ms (alert if >1000ms sustained)\n- SLA breach count: Monitor daily trend (alert if >20% increase WoW)\n- Template send failures: Alert reliability if error rate >5%\n\n**Alert Channels:**\n- Critical errors → Reliability team (#incidents) (internal channel)\n- SLA threshold breaches → Support lead + Ops manager\n- Integration downtime → Immediate escalation per docs/runbooks/incident_response.md (pending)\n\n## QA Verification Evidence\n- 2025-10-10 Playwright staging run (`artifacts/playwright/shopify/playwright-staging-2025-10-10T04-20-37Z.log`) validated approve/escalate/resolve flows against Fly host `https://hotdash-stag{{ABBREV_6}}fly.dev` using mock data.\n- Synthetic check `artifacts/monitoring/synthetic-check-2025-10-10T06-36-48.923Z.json` confirms dashboard load within 284 ms post-Playwright run; use these artifacts during operator rehearsals to demonstrate live readiness.\n\n---\n\n## Operator Training & Q&A\n\n**Training Agenda:** See docs/runbooks/operator_training_agenda.","textTemplate":"","metadataSeparator":"\n","type":"TEXT","hash":"1VkcoYZXo1bb5oMx60c3K+u85bvyk1qIe/P/d8xKkWk="},"f7c85a0b-9703-4729-89cc-49ee28568a75":{"id_":"f7c85a0b-9703-4729-89cc-49ee28568a75","metadata":{"source":"docs/runbooks/cx_escalations.md","lastModified":"2025-10-11T00:18:41.327Z"},"excludedEmbedMetadataKeys":[],"excludedLlmMetadataKeys":[],"relationships":{"SOURCE":{"nodeId":"docs/runbooks/cx_escalations.md","metadata":{"source":"docs/runbooks/cx_escalations.md","lastModified":"2025-10-11T00:18:41.327Z"},"hash":"wo96zq4LXCQMvcIiVNPaILGpgYMOjQ/nRW9alc2o39c="},"PREVIOUS":{"nodeId":"9f4c1a00-0994-43a9-a1d9-69df1e4a4a75","metadata":{"source":"docs/runbooks/cx_escalations.md","lastModified":"2025-10-11T00:18:41.327Z"},"hash":"S+sE07wTs4B8zEl5LIfq2XnP9M2d6KGxm/q0h6XA1Qk="}},"text":"md (pending)\n\n## QA Verification Evidence\n- 2025-10-10 Playwright staging run (`artifacts/playwright/shopify/playwright-staging-2025-10-10T04-20-37Z.log`) validated approve/escalate/resolve flows against Fly host `https://hotdash-stag{{ABBREV_6}}fly.dev` using mock data.\n- Synthetic check `artifacts/monitoring/synthetic-check-2025-10-10T06-36-48.923Z.json` confirms dashboard load within 284 ms post-Playwright run; use these artifacts during operator rehearsals to demonstrate live readiness.\n\n---\n\n## Operator Training & Q&A\n\n**Training Agenda:** See docs/runbooks/operator_training_agenda.md\n\n**Common Confusing States:**\n- Q: Conversation shows \"SLA breached\" but was already replied to?\n  - A: Breach timestamp calculated from conversation creation, not last reply. Check `breachedAt` metadata.\n\n- Q: Template variable {{name}} shows \"Customer\" instead of real name?\n  - A: Chatwoot contact data incomplete. Add customer name in Chatwoot admin or use manual reply.\n\n- Q: Decision log not showing after clicking \"Send Reply\"?\n  - A: Check browser console for errors. File ticket with screenshot + conversationId.\n\n**File Tickets:** Use Linear with label `support-feedback`, attach screenshots + timestamps\n\n---\n\n## Related Documentation\n- Chatwoot service implementation: app/services/chatwoot/escalations.ts\n- Template definitions: app/services/chatwoot/templates.ts\n- Decision logging: app/services/decisions.server.ts\n- Copy deck (English): docs/design/copy_deck.md\n- Accessibility criteria: docs/design/accessibility_criteria.md\n\n---\n\n## Revision History\n| Date | Author | Change |\n|------|--------|--------|\n| 2025-10-12 | support | Clarified smoke script usage with new --env/--token-file options and deployment handoff |\n| 2025-10-10 | support | Added support inbox contact, Chatwoot Fly deployment validation checklist, and smoke script reference |\n| 2025-10-10 | support | Documented host/token refresh requirement for Chatwoot Fly smoke script |\n| 2025-10-10 | support | Added mock-mode transcript gallery and edge case checklist for operator rehearsal while live data blocked. |\n| 2025-10-10 | support | Added QA staging evidence references for modal verification |\n| 2025-10-08 | support | Added template heuristics, rendered customer names, aligned escalation label |\n| 2025-10-07 | support | Validated modal implementation, added screenshots, updated decision logging |\n| 2025-10-06 | support | Initial runbook skeleton created per manager sprint focus |\n\n---\n\n## Next Steps\n- [ ] Pair with engineer to validate modal flows against production data\n- [x] Add annotated screenshots for modal default and success states (2025-10-07)\n- [ ] Expand template library/AI suggestions beyond `ack_delay`\n- [x] Align Chatwoot escalation label with SOP terminology (2025-10-08)\n- [x] Draft incident_response.md for integration outages (see docs/runbooks/incident_response_supabase.md)\n\n## Pending Validation — 2025-10-09\n- [ ] Capture updated modal screenshots once staging seed is live (Owner: Support)\n- [ ] Verify template heuristics against staged conversations and document edge cases (Owner: Support + Product)\n- [ ] Re-run decision log export to confirm `chatwoot.*` events land in analytics with Supabase credentials (Owner: Support + Reliability)\n\n## Validation Notes — 2025-10-08\n- Modal launched with `FEATURE_MODAL_APPROVALS`; confirm flag enabled before training operators.\n- `Approve & Send Reply` renders customer name into the template; operators must still confirm promise before sending.\n- Decision logs emit actions `chatwoot.approve_send`, `chatwoot.escalate`, `chatwoot.mark_resolved`; audit dashboards should be updated to reflect these identifiers.\n- Chatwoot escalation label now standardised to `escalation`; caches still accept legacy `escalated` tag for backwards compatibility.","textTemplate":"","metadataSeparator":"\n","type":"TEXT","hash":"I8ciDbjKEK7AEAeC9F1SV7Hm9HXTJQnz9tKWK4nlWM8="},"71aea694-5827-44ff-8241-61347f3ad36a":{"id_":"71aea694-5827-44ff-8241-61347f3ad36a","metadata":{"source":"docs/runbooks/incident_response_breach.md","lastModified":"2025-10-11T00:18:41.327Z"},"excludedEmbedMetadataKeys":[],"excludedLlmMetadataKeys":[],"relationships":{"SOURCE":{"nodeId":"docs/runbooks/incident_response_breach.md","metadata":{"source":"docs/runbooks/incident_response_breach.md","lastModified":"2025-10-11T00:18:41.327Z"},"hash":"NxsZmlSDzthXRv5Kj4V8Ciz6qKrihdbGRGZJo6PVH5s="},"NEXT":{"nodeId":"8a341079-3636-4b20-b122-8fff14cfef4a","metadata":{},"hash":"exf5Om6Ftk2U07RshL7Fr+oVyz4LbdMZzmy8B+jdEzs="}},"text":"---\nepoch: 2025.10.E1\ndoc: docs/runbooks/incident_response_breach.md\nowner: compliance\nlast_reviewed: 2025-10-07\ndoc_hash: TBD\nexpires: 2025-10-14\n---\n# Incident Response Runbook — Data Breach & Privacy Events\n\n## Purpose\nProvide a step-by-step playbook for detecting, containing, and notifying stakeholders about security or privacy incidents impacting HotDash data (Shopify, Chatwoot, Supabase, Google Analytics MCP, OpenAI). This runbook aligns with GDPR/CCPA timelines and manager direction requiring evidence of drills in `docs/runbooks/`.\n\n## Scope\n- Unauthorized access, exfiltration, or modification of personal data (operator emails, Chatwoot transcripts, Shopify data, Supabase decision logs).\n- Credential exposures (Shopify, Supabase, Chatwoot, GA MCP, OpenAI) with evidence of misuse or high risk.\n- Third-party processor incidents reported via vendor status pages or contracts.\n\n---\n\n## Roles & Contacts\n- **IR Lead (Compliance agent)** — Owns coordination, documentation, regulatory determinations, and customer/merchant notifications.\n- **Reliability On-Call** — Executes containment steps (secret rotation, service isolation, backup validation). Refer to `docs/runbooks/secret_rotation.md` and `docs/runbooks/backup_restore.md` for procedures.\n- **Engineering Lead** — Provides forensic support, log extraction, and patches.\n- **Support Lead** — Handles operator/internal communications and customer inquiries.\n- **Marketing/Comms** — Approves external messaging once compliance signs off.\n- **Vendors** — Supabase support, Shopify Partner Support, Chatwoot success, OpenAI enterprise support, GA MCP contact (see vendor sheet in progress).\n\nDocument contact list in `docs/compliance/vendor_contacts.md` (placeholder) before production launch.\n\n---\n\n## Detection & Triage (T+0 - T+30 minutes)\n1. **Trigger Sources**\n   - Supabase sync logs (`supabase.decisionSync`, `supabase.analyticsSync`) emitting failures/anomalies.\n   - Prisma access logs, Shopify webhook alerts, Chatwoot admin notifications, GA MCP status updates.\n   - External vulnerability advisories (CVE, upstream notifications).\n2. **Initial Assessment**\n   - Open incident ticket in `feedback/compliance.md` (`## Incident YYYY-MM-DD`) with timestamp.\n   - Capture current evidence: log excerpts, screenshots, vendor emails. Store under `docs/compliance/evidence/INCIDENT_ID/`.\n   - Determine if personal data or confidential business data is involved.\n3. **Classification**\n   - Use severity matrix:\n     - **P0**: Confirmed exfiltration of PD/SPD.\n     - **P1**: Credential exposure with suspected misuse.\n     - **P2**: Potential issue pending validation.\n   - If Sev P0/P1, escalate to Manager immediately via designated channel.\n\n---\n\n## Containment (T+30 - T+90 minutes)\n1. Assign Reliability On-Call to rotate affected secrets (`docs/runbooks/secret_rotation.md`).\n2. Disable compromised integrations:\n   - Revoke Shopify app credentials in Partner dashboard.\n   - Regenerate Supabase service key; restrict RLS to read-only until validated.\n   - Disable Chatwoot tokens via admin UI; revoke OpenAI key (via LlamaIndex service config) if prompts leaked.\n3. Block access to affected tiles/features by toggling feature flags (`app/config/featureFlags.ts`) or environment variables.\n4. Snapshot current databases (Prisma + Supabase) for forensics before modifications.\n\n---\n\n## Investigation & Impact Analysis (T+90 minutes - T+6 hours)\n1. Pull relevant logs:\n   - Prisma query logs, Supabase audit trails, Chatwoot conversation audit, Shopify Admin API logs, GA MCP request logs.\n2. Identify data subjects affected (shop domains, operator emails, customer names).\n3. Quantify scope (records, time window, systems).\n4. Determine regulatory notification requirement (GDPR 72h, CCPA timely consumer notice).\n5. Draft summary in `docs/compliance/evidence/INCIDENT_ID/impact.md` covering who/what/when/how.\n\n---\n\n## Notification & Communication (T+6 - T+24 hours)\n1. **Internal**\n   - Provide hourly updates in incident ticket and append to `feedback/compliance.md`.\n   - Brief leadership with impact summary + containment status.\n2.","textTemplate":"","endCharIdx":4113,"metadataSeparator":"\n","type":"TEXT","hash":"ODBQFkSZTrnJ1CDxm3S2YkDtjFS5VCaJLiK1Vr9c9ko="},"8a341079-3636-4b20-b122-8fff14cfef4a":{"id_":"8a341079-3636-4b20-b122-8fff14cfef4a","metadata":{"source":"docs/runbooks/incident_response_breach.md","lastModified":"2025-10-11T00:18:41.327Z"},"excludedEmbedMetadataKeys":[],"excludedLlmMetadataKeys":[],"relationships":{"SOURCE":{"nodeId":"docs/runbooks/incident_response_breach.md","metadata":{"source":"docs/runbooks/incident_response_breach.md","lastModified":"2025-10-11T00:18:41.327Z"},"hash":"NxsZmlSDzthXRv5Kj4V8Ciz6qKrihdbGRGZJo6PVH5s="},"PREVIOUS":{"nodeId":"71aea694-5827-44ff-8241-61347f3ad36a","metadata":{"source":"docs/runbooks/incident_response_breach.md","lastModified":"2025-10-11T00:18:41.327Z"},"hash":"jXOnJd9jf3OznPbCQ78dolRKsfGKC00Rc8wj3QNrixQ="}},"text":"---\n\n## Investigation & Impact Analysis (T+90 minutes - T+6 hours)\n1. Pull relevant logs:\n   - Prisma query logs, Supabase audit trails, Chatwoot conversation audit, Shopify Admin API logs, GA MCP request logs.\n2. Identify data subjects affected (shop domains, operator emails, customer names).\n3. Quantify scope (records, time window, systems).\n4. Determine regulatory notification requirement (GDPR 72h, CCPA timely consumer notice).\n5. Draft summary in `docs/compliance/evidence/INCIDENT_ID/impact.md` covering who/what/when/how.\n\n---\n\n## Notification & Communication (T+6 - T+24 hours)\n1. **Internal**\n   - Provide hourly updates in incident ticket and append to `feedback/compliance.md`.\n   - Brief leadership with impact summary + containment status.\n2. **External**\n   - Draft customer/operator notice including incident nature, data affected, mitigation steps, contact info.\n   - Obtain approvals: Compliance → Manager → Legal → Marketing.\n   - Send via approved channels (email, in-app banner, Chatwoot broadcast).\n3. **Regulators**\n   - File report with relevant authority if required (GDPR DPA, CCPA AG if thresholds met).\n   - Document submission timestamp/reference numbers in evidence folder.\n4. **Vendors**\n   - If vendor caused incident, request written post-mortem and remediation commitments.\n\n---\n\n## Eradication & Recovery (T+24 - T+48 hours)\n1. Patch vulnerabilities/config gaps (upgrade dependencies, adjust IAM).\n2. Restore clean data if tampering detected (`docs/runbooks/backup_restore.md`).\n3. Validate systems:\n   - Run regression tests (Vitest/Playwright) with sanitized data snapshots.\n   - Confirm Supabase/Prisma row parity and audit logs show no residual anomalies.\n4. Re-enable disabled tiles/integrations with manager approval.\n\n---\n\n## Post-Incident Review (Within 5 business days)\n1. Schedule retrospective (Compliance, Reliability, Engineering, Support).\n2. Produce post-incident report in `docs/compliance/evidence/INCIDENT_ID/postmortem.md` covering timeline, root cause, detection effectiveness, remediation tasks.\n3. Update relevant runbooks, data inventory, and privacy notices.\n4. Track action items in `feedback/compliance.md` until closure.\n\n---\n\n## Preparedness Checklist (Quarterly)\n- [ ] Tabletop exercise covering Supabase breach scenario. Store findings in `docs/compliance/evidence/tabletop-YYYYMMDD.md`.\n- [ ] Verify vendor contact sheet current.\n- [ ] Confirm backups & restores tested (`docs/runbooks/backup_drill_plan.md`).\n- [ ] Validate secret rotation cadence executed; archive evidence.\n- [ ] Review Supabase/Prisma access logs for anomalies.\n\nFailure to complete checklist must be escalated to Manager with remediation plan.","textTemplate":"","startCharIdx":3354,"endCharIdx":6038,"metadataSeparator":"\n","type":"TEXT","hash":"wLEvxNexatsVnCxvqkjeGwg+WBhc1qeTUY81Sa3+OtI="},"84315e03-5179-4ca7-bf9a-264c17d61b57":{"id_":"84315e03-5179-4ca7-bf9a-264c17d61b57","metadata":{"source":"docs/runbooks/incident_response_supabase.md","lastModified":"2025-10-11T00:18:41.327Z"},"excludedEmbedMetadataKeys":[],"excludedLlmMetadataKeys":[],"relationships":{"SOURCE":{"nodeId":"docs/runbooks/incident_response_supabase.md","metadata":{"source":"docs/runbooks/incident_response_supabase.md","lastModified":"2025-10-11T00:18:41.327Z"},"hash":"tpgqDOLEsYjbJu3XW3TSjPukMqUNgxfABW7DLPBHIV4="},"NEXT":{"nodeId":"6a0e0049-a5f8-4e65-be20-3051d8393ae1","metadata":{},"hash":"h5OkUo5KQcFqvEQGz86sJXWwfOUpGewwD7vAl4ze5OQ="}},"text":"---\nepoch: 2025.10.E1\ndoc: docs/runbooks/incident_response_supabase.md\nowner: compliance\nlast_reviewed: 2025-10-08\ndoc_hash: TBD\nexpires: 2025-10-15\n---\n# Incident Response Runbook — Supabase Decision Logging\n\n## Purpose\nProvide a dedicated playbook for outages, integrity failures, or breaches affecting the Supabase-backed decision logging service. Align response with HotDash privacy commitments, GDPR/CCPA timelines, and operator control center audit requirements.\n\n## Scope\n- Supabase database storing decision logs and analytics mirrors for Operator Control Center.\n- Service key leakage, RLS misconfiguration, or unauthorized access to decision log tables.\n- Data loss or replication failures that compromise audit completeness or retention obligations.\n- Backup/cron purge automation failures impacting regulatory retention timelines.\n\n---\n\n## Current Exposure Summary — 2025-10-15\n- 2025-10-15T19:45Z — Re-verified pg_cron evidence bundle (`docs/compliance/evidence/retention_runs/2025-10-13_pg_cron/`) with SHA256 hashes logged in `pg_cron_hash_register_2025-10-13.md`.\n- 2025-10-15T19:00Z — Completed incident tabletop; summary + action items stored under `docs/compliance/evidence/supabase/tabletop_20251015/`.\n- 2025-10-10T19:26Z — Analyzer rerun on restored DecisionLog export (`artifacts/logs/supabase_decision_log_export_2025-10-10T14-50-23Z.ndjson`); summary archived at `artifacts/monitoring/supabase-sync-summary-2025-10-10T19-26-50-307Z.json` (0 records, failure rate 0, awaiting Supabase repopulation).\n- 2025-10-10T19:27Z — `npx -y tsx scripts/ops/check-dashboard-analytics-parity.ts` succeeded (0% deltas) with staging credentials; parity evidence stored at `artifacts/monitoring/supabase-parity-2025-10-10T19-27-30Z.json`.\n- 2025-10-12T09:42Z — Repository scan (`git grep postgresql://`) surfaced only canonical placeholders in direction, runbook, and feedback docs plus `prisma/seeds/README.md`; no live Supabase DSN remains post-sanitization.\n- 2025-10-12T10:03Z — Resumed analyzer pipeline; `scripts/ops/analyze-supabase-logs.ts` processed `artifacts/logs/supabase_decision_export_2025-10-10T07-29-39Z.ndjson` (4 records, 25 % timeout rate, decisionId 103 still outlier) confirming exports remain reproducible.\n- 2025-10-12T10:05Z — `npm run ops:check-analytics-parity` failed (`Invalid API key`); Supabase parity remains blocked until a valid `SUPABASE_SERVICE_KEY`/`SUPABASE_URL` bundle is loaded locally.\n- 2025-10-12T10:12Z — Loaded existing Supabase credentials from vault (`vault/occ/supabase/service_key_staging.env`) and reran `npm run ops:check-analytics-parity`; parity succeeded (0% diff, 0 deltas).\n- 2025-10-12T14:49Z — REST export against `decision_sync_events` still returns `PGRST205` (table missing); failure output stored at `artifacts/logs/supabase_decision_sync_events_2025-10-10T14-49-42Z.ndjson`.\n- 2025-10-12T14:50Z — `DecisionLog` mirror reachable; export saved to `artifacts/logs/supabase_decision_log_export_2025-10-10T14-50-23Z.ndjson`, analyzer summary `artifacts/monitoring/supabase-sync-summary-2025-10-10T14-50-40Z.json` confirms 0 records (latest probe `artifacts/logs/supabase_decision_log_raw_2025-10-10T15-34-48Z.json` still empty).\n- 2025-10-12T15:59Z — Analyzer rerun (legacy export `supabase_decision_export_2025-10-10T07-29-39Z.","textTemplate":"","endCharIdx":3294,"metadataSeparator":"\n","type":"TEXT","hash":"BjCsGWV2IXC4qFUnTnUQ213NNCNd3hL7IlbGcJckqoo="},"6a0e0049-a5f8-4e65-be20-3051d8393ae1":{"id_":"6a0e0049-a5f8-4e65-be20-3051d8393ae1","metadata":{"source":"docs/runbooks/incident_response_supabase.md","lastModified":"2025-10-11T00:18:41.327Z"},"excludedEmbedMetadataKeys":[],"excludedLlmMetadataKeys":[],"relationships":{"SOURCE":{"nodeId":"docs/runbooks/incident_response_supabase.md","metadata":{"source":"docs/runbooks/incident_response_supabase.md","lastModified":"2025-10-11T00:18:41.327Z"},"hash":"tpgqDOLEsYjbJu3XW3TSjPukMqUNgxfABW7DLPBHIV4="},"PREVIOUS":{"nodeId":"84315e03-5179-4ca7-bf9a-264c17d61b57","metadata":{"source":"docs/runbooks/incident_response_supabase.md","lastModified":"2025-10-11T00:18:41.327Z"},"hash":"+fM6EZVRwO/wQ++iNmutwXIX1sRY6AyW60pHFJz3X0w="},"NEXT":{"nodeId":"1da442f3-71e6-4b03-8ab5-441c0f8d969d","metadata":{},"hash":"KCUjXokZeyz2yOaEnAURsy46j1hLPslu6Ru7gRW1VSA="}},"text":"ndjson`.\n- 2025-10-12T14:50Z — `DecisionLog` mirror reachable; export saved to `artifacts/logs/supabase_decision_log_export_2025-10-10T14-50-23Z.ndjson`, analyzer summary `artifacts/monitoring/supabase-sync-summary-2025-10-10T14-50-40Z.json` confirms 0 records (latest probe `artifacts/logs/supabase_decision_log_raw_2025-10-10T15-34-48Z.json` still empty).\n- 2025-10-12T15:59Z — Analyzer rerun (legacy export `supabase_decision_export_2025-10-10T07-29-39Z.ndjson`) captured at `artifacts/monitoring/supabase-sync-summary-2025-10-10T15-59-25Z.json`; parity artifact `artifacts/monitoring/supabase-parity-2025-10-10T16-00-12Z.json` holds 0/0 counts pending restored exports.\n- 2025-10-12T18:20Z — Latest `/rest/v1/decision_sync_events` attempt still returns `PGRST205`; failure recorded at `artifacts/logs/supabase_decision_sync_events_2025-10-10T18-20-11Z.ndjson`.\n- Analyzer/parity refreshed for continuity (`artifacts/monitoring/supabase-sync-summary-2025-10-10T18-20-26Z.json`, `artifacts/monitoring/supabase-parity-2025-10-10T18-20-37Z.json`).\n- Follow-ups: Maintain current Supabase credential bundle; rerun analyzer/parity after each NDJSON export and archive evidence in `artifacts/monitoring/` + incident folder. No rotation required.\n\n---\n\n## Response Team & Contacts\n- **Compliance Lead (Incident Manager)** — Owns regulatory assessment, evidence capture, and stakeholder comms (`docs/directions/compliance.md`).\n- **Reliability On-Call** — Executes key rotation, access lockdown, and restoration tasks (`docs/directions/reliability.md`).\n- **Support Liaison** — Coordinates operator/merchant messaging and tracks inbound reports (`docs/directions/support.md`).\n- **Deployment Owner** — Confirms secret propagation across environments and rollback strategy (`docs/directions/deployment.md`).\n\nStore contact rotation and escalation order in the shared on-call sheet; update links here when assignments change.\n\n---\n\n## Prerequisites & Reference Docs\n- Architecture overview: `docs/compliance/data_inventory.md` (Supabase section) and `docs/runbooks/prisma_staging_postgres.md` (connection handling).\n- Retention plan + cron design: `docs/compliance/retention_automation_plan.md`.\n- Purge tooling: `scripts/ops/purge-dashboard-data.ts`, npm script `ops:purge-dashboard-data`.\n- Evidence locations: `docs/compliance/evidence/retention_runs/`, `docs/compliance/evidence/vendor_dpa_status.md`, vendor contact sheets (pending).\n- Secret rotation steps: `docs/runbooks/secret_rotation.md` (when published).\n\n---\n\n## Detection & Triage (T+0 – T+30 minutes)\n1. **Trigger Sources**\n   - Reliability alerts from Supabase (status page, webhook, or Grafana).\n   - Application logs surfacing sync failures (`supabase.decisionSync`, `supabase.analyticsSync`).\n   - Operator reports of stale or missing decisions in dashboard tiles.\n   - Security tooling (Vault audit, GitHub secret scans) indicating credential exposure.\n2. **Immediate Actions**\n   - Log incident start in `feedback/compliance.md` with timestamp and short description; ping reliability + support on-call channels.\n   - Create evidence folder `docs/compliance/evidence/supabase/incidents/<YYYYMMDD>/` and capture:\n     - Supabase status screenshot or JSON export.\n     - Log snippets, error IDs, and impacted shop/operator identifiers.\n   - Classify severity:\n     - **P0** – Confirmed unauthorized access or data exfiltration.\n     - **P1** – Service degradation causing audit gaps beyond SLA (>1h) or suspected credential leak.\n     - **P2** – Transient sync failure within recovery window, no exposure.\n   - If severity P0/P1, page manager + reliability immediately.","textTemplate":"","startCharIdx":2837,"endCharIdx":6467,"metadataSeparator":"\n","type":"TEXT","hash":"ANVDWV2UOdeCh1ZWiaM/LwwFd+p+NByTXdGekzI4TzI="},"1da442f3-71e6-4b03-8ab5-441c0f8d969d":{"id_":"1da442f3-71e6-4b03-8ab5-441c0f8d969d","metadata":{"source":"docs/runbooks/incident_response_supabase.md","lastModified":"2025-10-11T00:18:41.327Z"},"excludedEmbedMetadataKeys":[],"excludedLlmMetadataKeys":[],"relationships":{"SOURCE":{"nodeId":"docs/runbooks/incident_response_supabase.md","metadata":{"source":"docs/runbooks/incident_response_supabase.md","lastModified":"2025-10-11T00:18:41.327Z"},"hash":"tpgqDOLEsYjbJu3XW3TSjPukMqUNgxfABW7DLPBHIV4="},"PREVIOUS":{"nodeId":"6a0e0049-a5f8-4e65-be20-3051d8393ae1","metadata":{"source":"docs/runbooks/incident_response_supabase.md","lastModified":"2025-10-11T00:18:41.327Z"},"hash":"h5OkUo5KQcFqvEQGz86sJXWwfOUpGewwD7vAl4ze5OQ="},"NEXT":{"nodeId":"55c4d326-072b-4c24-a749-ad1936b02dd4","metadata":{},"hash":"UruV15PcyvuT6tjitA9Mcw98Ffzxt4RxXApZyqpAe0Q="}},"text":"- Security tooling (Vault audit, GitHub secret scans) indicating credential exposure.\n2. **Immediate Actions**\n   - Log incident start in `feedback/compliance.md` with timestamp and short description; ping reliability + support on-call channels.\n   - Create evidence folder `docs/compliance/evidence/supabase/incidents/<YYYYMMDD>/` and capture:\n     - Supabase status screenshot or JSON export.\n     - Log snippets, error IDs, and impacted shop/operator identifiers.\n   - Classify severity:\n     - **P0** – Confirmed unauthorized access or data exfiltration.\n     - **P1** – Service degradation causing audit gaps beyond SLA (>1h) or suspected credential leak.\n     - **P2** – Transient sync failure within recovery window, no exposure.\n   - If severity P0/P1, page manager + reliability immediately.\n\n---\n\n## Containment (T+30 – T+90 minutes)\n1. **Secure Credentials**\n   - Reliability rotates Supabase service key + anon key; update GitHub `SUPABASE_SERVICE_KEY` secret and workstation `.env` where stored.\n   - Regenerate JWT secret if compromised; document rotation evidence in incident folder.\n2. **Restrict Access**\n   - Enable read-only mode in decision logging microservice (toggle `FEATURE_DECISION_LOG_WRITE=0`) to halt new writes until integrity confirmed.\n   - Apply temporary RLS tightening to permit compliance-only access for forensics.\n3. **Snapshot State**\n   - Export affected tables (`decision_log`, `facts`, retention audit tables) using `supabase db export` or `pg_dump` for offline review.\n4. **Preserve Logs**\n   - Archive Supabase audit trails and application logs to `docs/compliance/evidence/supabase/incidents/<YYYYMMDD>/logs/`.\n\n---\n\n## Investigation & Impact Analysis (T+90 minutes – T+6 hours)\n1. **Data Integrity Review**\n   - Run differential queries comparing Prisma primary DB and Supabase mirror to identify missing or altered rows.\n   - Validate purge cron job evidence to ensure retention windows were honored.\n2. **Access Trace**\n   - Review Supabase auth logs, `pg_stat_activity`, and storage access to pinpoint unauthorized actors.\n   - Check Vault/GitHub audit logs for credential downloads.\n3. **Scope Assessment**\n   - Enumerate impacted merchants/operators and data categories (PII, decision metadata).\n   - Determine regulatory thresholds for breach notification.\n4. **Root Cause Draft**\n   - Document hypotheses, affected components, and preliminary remediation plan in `analysis.md` within incident folder.\n\n---\n\n## Communication (T+6 – T+24 hours)\n1. **Internal**\n   - Hourly updates in incident log; include containment status and outstanding actions.\n   - Brief manager + leadership with summary, severity, and ETA to recovery.\n2. **External**\n   - If data exposure confirmed, prepare merchant/operator notice referencing impacted data, timeline, and recommended actions.\n   - Coordinate with marketing/comms for messaging; compliance retains approval authority.\n3. **Vendor Coordination**\n   - File ticket with Supabase support requesting incident details, recovery ETA, and security assurances.\n   - Capture vendor correspondence and attach to evidence folder.\n4. **Regulatory**\n   - Evaluate GDPR/CCPA reporting obligations; if triggered, file within mandated windows and archive submission receipts.\n\n---\n\n## Recovery (T+24 – T+48 hours)\n1. Restore service writes after:\n   - Integrity verification queries pass.\n   - Rotated credentials deployed across environments.\n   - Retention cron jobs validated to run post-incident (trigger manual run and store log in `docs/compliance/evidence/retention_runs/`).\n2. Re-run purge script (`npm run ops:purge-dashboard-data`) in dry-run mode first; archive audit output.\n3. Execute regression tests (Vitest, Playwright, Supabase integration smoke) with sanitized data to confirm behavior.\n4. Remove temporary restrictions and document go-forward monitoring plan.\n\n---\n\n## Post-Incident (Within 5 business days)\n1. Produce postmortem in incident evidence folder summarizing timeline, root cause, remediation, and lessons learned.\n2. Update relevant artifacts:\n   - Data inventory + retention plan for any schema or process changes.\n   - Vendor DPA tracker with Supabase commitments or gaps.\n   - Purge script documentation/testing if defects found.\n3. Schedule tabletop exercise follow-up if response deviated from expectations.\n4. Track remediation tasks in `feedback/compliance.md` until closure.","textTemplate":"","startCharIdx":5667,"endCharIdx":10058,"metadataSeparator":"\n","type":"TEXT","hash":"lLNSyFwDQC6KlA/UTnS55mltxrt1G8jdiISppVNSQLc="},"55c4d326-072b-4c24-a749-ad1936b02dd4":{"id_":"55c4d326-072b-4c24-a749-ad1936b02dd4","metadata":{"source":"docs/runbooks/incident_response_supabase.md","lastModified":"2025-10-11T00:18:41.327Z"},"excludedEmbedMetadataKeys":[],"excludedLlmMetadataKeys":[],"relationships":{"SOURCE":{"nodeId":"docs/runbooks/incident_response_supabase.md","metadata":{"source":"docs/runbooks/incident_response_supabase.md","lastModified":"2025-10-11T00:18:41.327Z"},"hash":"tpgqDOLEsYjbJu3XW3TSjPukMqUNgxfABW7DLPBHIV4="},"PREVIOUS":{"nodeId":"1da442f3-71e6-4b03-8ab5-441c0f8d969d","metadata":{"source":"docs/runbooks/incident_response_supabase.md","lastModified":"2025-10-11T00:18:41.327Z"},"hash":"KCUjXokZeyz2yOaEnAURsy46j1hLPslu6Ru7gRW1VSA="}},"text":"2. Re-run purge script (`npm run ops:purge-dashboard-data`) in dry-run mode first; archive audit output.\n3. Execute regression tests (Vitest, Playwright, Supabase integration smoke) with sanitized data to confirm behavior.\n4. Remove temporary restrictions and document go-forward monitoring plan.\n\n---\n\n## Post-Incident (Within 5 business days)\n1. Produce postmortem in incident evidence folder summarizing timeline, root cause, remediation, and lessons learned.\n2. Update relevant artifacts:\n   - Data inventory + retention plan for any schema or process changes.\n   - Vendor DPA tracker with Supabase commitments or gaps.\n   - Purge script documentation/testing if defects found.\n3. Schedule tabletop exercise follow-up if response deviated from expectations.\n4. Track remediation tasks in `feedback/compliance.md` until closure.\n\n---\n\n## Preparedness Checklist (Weekly)\n- [ ] Confirm Supabase cron jobs succeeded; file logs in `docs/compliance/evidence/retention_runs/`.\n- [ ] Validate backups (`pg_dump`, object storage) and restore samples quarterly.\n- [ ] Review Supabase role/RLS configuration for least privilege.\n- [ ] Verify service key rotation cadence (<90 days) with evidence.\n- [ ] Ensure purge script dry-run test harness executed and results stored.\n\nEscalate any unchecked item to manager with remediation ETA.","textTemplate":"","startCharIdx":9227,"endCharIdx":10554,"metadataSeparator":"\n","type":"TEXT","hash":"8rtGhFQeLTHVbzrtZcosiWqs3RMd9Y5bjZV7nm7za18="},"0be8f6da-748b-4f54-b812-5032a4b16346":{"id_":"0be8f6da-748b-4f54-b812-5032a4b16346","metadata":{"source":"docs/runbooks/llamaindex_workflow.md","lastModified":"2025-10-11T01:05:01.999Z"},"excludedEmbedMetadataKeys":[],"excludedLlmMetadataKeys":[],"relationships":{"SOURCE":{"nodeId":"docs/runbooks/llamaindex_workflow.md","metadata":{"source":"docs/runbooks/llamaindex_workflow.md","lastModified":"2025-10-11T01:05:01.999Z"},"hash":"0A17AEHdkpznqNUuCweyQ/749lovgjHGXcm71FRiqZM="},"NEXT":{"nodeId":"9bfd6288-985d-494f-a493-2508d4bf3026","metadata":{},"hash":"ra3Z/TpAzjT0e1Y8VAmtKcwoPqdMebx9eUFYCjitmCI="}},"text":"---\nepoch: 2025.10.E1\ndoc: docs/runbooks/llamaindex_workflow.md\nowner: ai\nlast_reviewed: 2025-10-11\ndoc_hash: TBD\nexpires: 2025-10-18\n---\n\n# LlamaIndex Workflow — Pipeline & Operations\n\n## Overview and Goals\n\nThis runbook documents the LlamaIndex-based AI workflow for HotDash, implementing automated knowledge ingestion, indexing, and query capabilities. The system ingests content from approved sources, builds searchable vector indexes, and provides MCP tools for other agents to query support knowledge.\n\n**Primary Goals:**\n- Automated nightly ingestion of web content, decision logs, and curated support replies\n- Vector search capabilities over all knowledge sources\n- MCP-compliant tools for agent integration\n- Evaluation and quality monitoring with BLEU/ROUGE metrics\n- Rollback and recovery procedures for operational stability\n\n## Approved Ingestion Sources\n\nThe workflow ingests from three approved sources:\n\n1. **Web Content (hotrodan.com)**\n   - Primary: Sitemap-based crawling of https://hotrodan.com/sitemap.xml\n   - Fallback: Manual seed page crawling (home, blog, pricing, docs)\n   - Output: `packages/memory/logs/build/ingestion/web/YYYYMMDD-HHMM/`\n\n2. **Supabase Decision Log & Telemetry**\n   - Tables: `decision_log`, `telemetry_events`\n   - Read-only access with RLS protection\n   - Output: `packages/memory/logs/build/ingestion/supabase/YYYYMMDD-HHMM/`\n\n3. **Chatwoot Curated Replies**\n   - Table: `support_curated_replies` (maintained by Support team)\n   - Fields: id, question, answer, tags, updated_at\n   - Output: `packages/memory/logs/build/ingestion/curated/YYYYMMDD-HHMM/`\n\n## Secrets and Configuration\n\n**Environment File:** `.env.local` (repo root, not committed)\n\nRequired environment variables:\n```bash\nOPENAI_API_KEY=sk-...\nSUPABASE_URL=https://...supabase.co\nSUPABASE_ANON_KEY=eyJ... \n# OR for enhanced security:\nSUPABASE_READONLY_KEY=eyJ...\nCHATWOOT_SPACE=hotrodan\nLOG_DIR=packages/memory/logs/build\n```\n\n**Configuration Management:**\n- Config loader: `scripts/ai/llama-workflow/src/config.ts`\n- Zod validation for all environment variables\n- Defaults: LOG_DIR → `packages/memory/logs/build`\n\n## Nightly Cadence and Scheduling\n\n**Preferred: GitHub Actions**\n- Workflow: `.github/workflows/ai_nightly.yml`\n- Schedule: 02:30 UTC daily (`cron: \"30 2 * * *\"`)\n- Manual trigger: `workflow_dispatch`\n\n**Fallback: Local Cron**\n```bash\n# crontab entry\n45 2 * * * cd /home/justin/HotDash/hot-dash && /usr/bin/env -S bash -lc 'source ~/.profile; corepack enable; npm run ai:refresh && npm run ai:eval' >> packages/memory/logs/build/cron.log 2>&1\n```\n\n**Execution Flow:**\n1. `npm run ai:refresh` - Build index from all sources\n2. `npm run ai:eval` - Run evaluation against golden dataset\n3. Upload logs as build artifacts\n\n## Build and Storage Locations\n\n**Directory Structure:**\n```\npackages/memory/logs/build/\n├── ingestion/\n│   ├── web/YYYYMMDD-HHMM/\n│   ├── supabase/YYYYMMDD-HHMM/\n│   └── curated/YYYYMMDD-HHMM/\n├── indexes/\n│   ├── YYYYMMDD-HHMM/          # Timestamped builds\n│   ├── latest -> YYYYMMDD-HHMM/ # Symlink to current\n│   └── prev -> YYYYMMDD-HHMM/   # Symlink to previous (rollback)\n├── eval/\n│   └── YYYYMMDD-HHMM/\n└── logs/\n    ├── last_refresh.log\n    └── last_eval.log\n```\n\n**Storage Details:**\n- Vector store: Local persistent JSON-based SimpleVectorStore\n- Chunking: 1024 tokens with 128 overlap\n- Metadata: Source attribution, timestamps, table origins\n- Manifest: `manifest.json` with counts, timing, source tallies per run\n\n## Logging and Observability\n\n**Log Outputs:**\n- All stdout captured via `tee` to `last_refresh.log` and `last_eval.log`\n- Per-run directories contain `errors.","textTemplate":"","endCharIdx":3638,"metadataSeparator":"\n","type":"TEXT","hash":"uR6vbgBuCQR285TEhclxIQEs/BUCNH7i2CS+v6N/9xU="},"9bfd6288-985d-494f-a493-2508d4bf3026":{"id_":"9bfd6288-985d-494f-a493-2508d4bf3026","metadata":{"source":"docs/runbooks/llamaindex_workflow.md","lastModified":"2025-10-11T01:05:01.999Z"},"excludedEmbedMetadataKeys":[],"excludedLlmMetadataKeys":[],"relationships":{"SOURCE":{"nodeId":"docs/runbooks/llamaindex_workflow.md","metadata":{"source":"docs/runbooks/llamaindex_workflow.md","lastModified":"2025-10-11T01:05:01.999Z"},"hash":"0A17AEHdkpznqNUuCweyQ/749lovgjHGXcm71FRiqZM="},"PREVIOUS":{"nodeId":"0be8f6da-748b-4f54-b812-5032a4b16346","metadata":{"source":"docs/runbooks/llamaindex_workflow.md","lastModified":"2025-10-11T01:05:01.999Z"},"hash":"PqERs0XMi3kNaSuN8Dk27ALBHTcMsRX6HVwkcwQuZsY="},"NEXT":{"nodeId":"a7abf677-05d6-47d1-bb62-d4a9eef9b3d0","metadata":{},"hash":"eqNErKhwgs9L8zIJyeKrPqNcixxW/2bHEivfdV2pvwY="}},"text":"log\n    └── last_eval.log\n```\n\n**Storage Details:**\n- Vector store: Local persistent JSON-based SimpleVectorStore\n- Chunking: 1024 tokens with 128 overlap\n- Metadata: Source attribution, timestamps, table origins\n- Manifest: `manifest.json` with counts, timing, source tallies per run\n\n## Logging and Observability\n\n**Log Outputs:**\n- All stdout captured via `tee` to `last_refresh.log` and `last_eval.log`\n- Per-run directories contain `errors.log` for failures\n- Manifest files track ingestion counts and processing times\n- Sample outputs written for validation\n\n**Monitoring Points:**\n- Document counts by source type\n- Index build duration\n- Evaluation metrics (BLEU, ROUGE-L, citation accuracy)\n- Error rates and failure modes\n\n## Rollback and Recovery\n\n**Rollback Procedure:**\n```bash\n# 1. Switch to previous index\ncd packages/memory/logs/build\nln -sfn indexes/prev indexes/latest\n\n# 2. Verify rollback\nnpm run ai:eval\n\n# 3. Check evaluation results\ncat eval/latest/summary.md\n```\n\n**Recovery Checklist:**\n- [ ] Previous index symlink exists and is valid\n- [ ] Evaluation passes with acceptable metrics\n- [ ] MCP tools respond correctly to test queries\n- [ ] No critical errors in logs\n\n**Prevention:**\n- Always keep `prev` symlink before updating `latest`\n- Automated evaluation must pass before deployment\n- Manual verification for production-critical changes\n\n## Validation and Evaluations\n\n**Golden Dataset:** `scripts/ai/llama-workflow/eval/data.jsonl`\n- Format: `{\"q\": \"question\", \"ref\": \"reference_answer\", \"must_cite\": [\"source-id\"]}`\n- Test cases cover key integration points and support scenarios\n\n**Metrics Computed:**\n- BLEU score (n-gram overlap with reference answers)\n- ROUGE-L (longest common subsequence)\n- Citation sanity (required sources properly attributed)\n\n**Quality Gates:**\n- BLEU > 0.3 (acceptable overlap)\n- ROUGE-L > 0.4 (structural similarity)  \n- Citation accuracy > 80% (source attribution)\n\n**Evaluation Process:**\n1. Load latest index\n2. Execute test queries\n3. Compute metrics against references\n4. Generate report: `LOG_DIR/eval/YYYYMMDD-HHMM/report.json`\n5. Create summary: `LOG_DIR/eval/YYYYMMDD-HHMM/summary.md`\n\n## MCP Tools and Usage\n\n**Available Tools:** `docs/mcp/tools/llamaindex.json`\n\n1. **refresh_index**\n   - **Purpose:** Rebuild knowledge index from approved sources\n   - **Input:** `{\"sources\": \"all|web|supabase|curated\", \"full\": true}`\n   - **CLI Mapping:** `scripts/ai/llama-workflow/dist/cli.js refresh --sources=all --full`\n\n2. **query_support** \n   - **Purpose:** Query knowledge base with citations\n   - **Input:** `{\"q\": \"How do I integrate HotDash?\", \"topK\": 5}`\n   - **CLI Mapping:** `scripts/ai/llama-workflow/dist/cli.js query -q \"...\" --topK 5`\n   - **Constraints:** topK ≤ 20\n\n3. **insight_report**\n   - **Purpose:** Generate insights from telemetry and curated data  \n   - **Input:** `{\"window\": \"7d\", \"format\": \"md\"}`\n   - **CLI Mapping:** `scripts/ai/llama-workflow/dist/cli.js insight --window 7d --format md`\n   - **Constraints:** window ≤ 30d, format in [md, txt, json]\n\n**Integration Notes:**\n- All tools return JSON responses with structured data\n- Citations include source metadata for verification\n- Error handling includes retry logic and fallback responses\n- Rate limiting respects OpenAI API constraints\n\n## Safety and Compliance\n\n**Security Measures:**\n- Read-only Supabase keys with RLS protection\n- PII sanitization for emails, phone numbers, tokens\n- No direct production writes (read-only operations)\n- Robots.","textTemplate":"","startCharIdx":3193,"endCharIdx":6690,"metadataSeparator":"\n","type":"TEXT","hash":"FNZ8yU34YpnpTeC4DAh7EhwSwi9DlUyCvxqR66uShv4="},"a7abf677-05d6-47d1-bb62-d4a9eef9b3d0":{"id_":"a7abf677-05d6-47d1-bb62-d4a9eef9b3d0","metadata":{"source":"docs/runbooks/llamaindex_workflow.md","lastModified":"2025-10-11T01:05:01.999Z"},"excludedEmbedMetadataKeys":[],"excludedLlmMetadataKeys":[],"relationships":{"SOURCE":{"nodeId":"docs/runbooks/llamaindex_workflow.md","metadata":{"source":"docs/runbooks/llamaindex_workflow.md","lastModified":"2025-10-11T01:05:01.999Z"},"hash":"0A17AEHdkpznqNUuCweyQ/749lovgjHGXcm71FRiqZM="},"PREVIOUS":{"nodeId":"9bfd6288-985d-494f-a493-2508d4bf3026","metadata":{"source":"docs/runbooks/llamaindex_workflow.md","lastModified":"2025-10-11T01:05:01.999Z"},"hash":"ra3Z/TpAzjT0e1Y8VAmtKcwoPqdMebx9eUFYCjitmCI="}},"text":"--topK 5`\n   - **Constraints:** topK ≤ 20\n\n3. **insight_report**\n   - **Purpose:** Generate insights from telemetry and curated data  \n   - **Input:** `{\"window\": \"7d\", \"format\": \"md\"}`\n   - **CLI Mapping:** `scripts/ai/llama-workflow/dist/cli.js insight --window 7d --format md`\n   - **Constraints:** window ≤ 30d, format in [md, txt, json]\n\n**Integration Notes:**\n- All tools return JSON responses with structured data\n- Citations include source metadata for verification\n- Error handling includes retry logic and fallback responses\n- Rate limiting respects OpenAI API constraints\n\n## Safety and Compliance\n\n**Security Measures:**\n- Read-only Supabase keys with RLS protection\n- PII sanitization for emails, phone numbers, tokens\n- No direct production writes (read-only operations)\n- Robots.txt compliance for web crawling\n\n**Data Protection:**\n- Telemetry data sanitized before indexing\n- Support replies reviewed by curation process\n- No sensitive credentials in logs or outputs\n- GDPR compliance through data minimization\n\n**Rate Limiting:**\n- Web requests throttled to respect site policies\n- OpenAI API calls managed within usage tiers\n- Supabase queries use connection pooling\n- Graceful degradation on API failures\n\n---\n\n## Command Reference\n\n```bash\n# Build and test workflow\ncd scripts/ai/llama-workflow\nnpm run build\nnpm run ingest:test\n\n# Manual operations  \nnpm run ai:refresh    # Full index rebuild\nnpm run ai:eval       # Run evaluation suite\nnpm run dev           # Development mode\n\n# Individual CLI commands\nnode dist/cli.js refresh --sources=all --full\nnode dist/cli.js query -q \"integration help\" --topK 10\nnode dist/cli.js insight --window 1d --format json\n```\n\n## Troubleshooting\n\n**Common Issues:**\n- **Index build failures:** Check `.env.local` credentials and network access\n- **Low evaluation scores:** Review golden dataset and update test cases\n- **MCP tool errors:** Verify CLI paths and argument formats\n- **Storage issues:** Check disk space and directory permissions\n\n**Debug Commands:**\n```bash\n# Check latest logs\ntail -f packages/memory/logs/build/last_refresh.log\n\n# Validate configuration\nnode -e \"require('./scripts/ai/llama-workflow/dist/config.js').validateConfig()\"\n\n# Test individual loaders\nnpm --prefix scripts/ai/llama-workflow run ingest:test\n```","textTemplate":"","startCharIdx":5896,"endCharIdx":8191,"metadataSeparator":"\n","type":"TEXT","hash":"KLW9RJ/42ODk49pQrWsP1/DwI3JV2NKvHoIUZddusIQ="},"297fbe8b-68cf-4276-b792-df47ef524648":{"id_":"297fbe8b-68cf-4276-b792-df47ef524648","metadata":{"source":"docs/runbooks/operator_training_agenda.md","lastModified":"2025-10-11T01:20:40.652Z"},"excludedEmbedMetadataKeys":[],"excludedLlmMetadataKeys":[],"relationships":{"SOURCE":{"nodeId":"docs/runbooks/operator_training_agenda.md","metadata":{"source":"docs/runbooks/operator_training_agenda.md","lastModified":"2025-10-11T01:20:40.652Z"},"hash":"BwmZUMta4qEmCZCa64ZJTJpPXitJJ5pWLH9cIFouFAA="},"NEXT":{"nodeId":"4e518178-b58a-459a-8bb6-6493b7ab2626","metadata":{},"hash":"9Zua73cmYL9kDgYGClfEr2/CsM0xnZ1XBM0u3rti+2U="}},"text":"---\nepoch: 2025.10.E1\ndoc: docs/runbooks/operator_training_agenda.md\nowner: support\nlast_reviewed: 2025-10-08\ndoc_hash: TBD\nexpires: 2025-10-20\n---\n# Operator Training Agenda — HotDash Dashboard\n\n## Session Overview\n**Duration:** 90 minutes\n**Format:** Live walkthrough + hands-on practice with mock data\n**Prerequisites:** Shopify admin access, Chatwoot familiarity (basic)\n**Materials:** Dashboard URL with `?mock=1`, copy of this agenda, Q&A capture template, support escalation inbox `customer.support@hotrodan.com`\n**Support Inbox:** customer.support@hotrodan.com — send dry-run comms, evidence screenshots, and operator questions here for tracking.\n**Current Status:** Rehearsals paused pending QA green `?mock=0` evidence and Chatwoot Fly cut-over smoke; continue prep work only and complete asynchronous modules listed in `docs/enablement/dry_run_training_materials.md`.\n\n---\n\n## Session Outline\n\n### 1. Introduction (10 minutes)\n**Objective:** Understand dashboard purpose and north star\n\n**Topics:**\n- Operator Control Center vision: single source of truth across CX, sales, inventory, SEO\n- Approval workflow paradigm: every action requires explicit operator decision\n- Decision logging: all actions tracked for audit trail (decision_log table)\n- Staging install overview: Operator Control Center lives inside Shopify Admin (`Apps -> HotDash`). Support briefs participants on staging credentials (see `docs/integrations/shopify_readiness.md`) and verifies feature flags (`FEATURE_MODAL_APPROVALS`, `FEATURE_AI_ESCALATIONS`) before kickoff.\n\n**Key Points:**\n- Dashboard reduces tab fatigue by consolidating Shopify, Chatwoot, GA data\n- Mock mode vs. live mode: Start training in mock mode (`?mock=1`)\n- Evidence-based operations: every tile shows data source + refresh timestamp\n- Staging access verification: load `https://hotdash-stag{{ABBREV_2}}fly.dev/app?mock=1` ahead of the session; a 200 OK (or 302 to Shopify auth) is required. If you receive HTTP 410 or a network error, escalate to deployment/reliability immediately and document the outcome in `feedback/enablement.md`.\n- Staging evidence table: Supabase NDJSON entry is live (`artifacts/logs/supabase_decision_export_2025-10-10T07-29-39Z.ndjson`); monitor for the first green `?mock=0` run to swap in fresh curl + synthetic evidence (latest log `artifacts/integrations/shopify/2025-10-10/curl_mock0_2025-10-10T07-57-48Z.log` is still 410). Until QA posts the green run, keep rehearsals paused and only iterate on prep docs. Once evidence lands, refresh this agenda’s links and broadcast updates via customer.support@hotrodan.com.\n- Chatwoot Fly migration: monitor reliability announcements, keep `scripts/ops/chatwoot-fly-smoke.sh --env staging` ready with the latest host/token, and review `docs/runbooks/cx_escalations.md#chatwoot-fly-deployment-validation-pre-launch` so facilitators can brief operators the moment the new host goes live.\n\n---\n\n### 2. Dashboard Navigation (15 minutes)\n**Objective:** Tour the interface and understand tile layout\n\n**Walkthrough:**\n- Header: \"Operator Control Center\" heading, mock mode notice\n- Tile grid: 6 tiles in responsive layout (1280px desktop, 768px tablet)\n- Tile anatomy: Title, status indicator, metadata line, content area, action buttons (future)\n\n**Tiles Overview:**\n1. **Ops Pulse** — Activation rate, SLA resolution metrics (meta tile)\n2. **Sales Pulse** — Revenue, order count, top SKUs\n3. **Fulfillment Health** — Orders stuck in pending/processing, blockers\n4. **Inventory Heatmap** — Low stock alerts, days of cover\n5. **CX Escalations** — SLA breached conversations, escalation tags\n6. **SEO & Content Watch** — Landing pages with WoW session drops\n\n**Practice:**\n- Operators click through each tile\n- Identify status indicators (healthy, attention, error, unconfigured)\n- Confirm staging environment readiness: support lead walks through Shopify Admin login flow and staging credentials pre-check (demo shop domain, OCC staging URL with `?mock=1`, Supabase decision log access). Document confirmation in the Q&A template.","textTemplate":"","metadataSeparator":"\n","type":"TEXT","hash":"0AW+biKfxytT3CYSop+IxH4UBEsGhAYlIlCp1FHWEq8="},"4e518178-b58a-459a-8bb6-6493b7ab2626":{"id_":"4e518178-b58a-459a-8bb6-6493b7ab2626","metadata":{"source":"docs/runbooks/operator_training_agenda.md","lastModified":"2025-10-11T01:20:40.652Z"},"excludedEmbedMetadataKeys":[],"excludedLlmMetadataKeys":[],"relationships":{"SOURCE":{"nodeId":"docs/runbooks/operator_training_agenda.md","metadata":{"source":"docs/runbooks/operator_training_agenda.md","lastModified":"2025-10-11T01:20:40.652Z"},"hash":"BwmZUMta4qEmCZCa64ZJTJpPXitJJ5pWLH9cIFouFAA="},"PREVIOUS":{"nodeId":"297fbe8b-68cf-4276-b792-df47ef524648","metadata":{"source":"docs/runbooks/operator_training_agenda.md","lastModified":"2025-10-11T01:20:40.652Z"},"hash":"0AW+biKfxytT3CYSop+IxH4UBEsGhAYlIlCp1FHWEq8="},"NEXT":{"nodeId":"1ae5c60e-12ff-42fe-a1bc-1744c6237d99","metadata":{},"hash":"lmQ4Wb86IHMWyfv7s4LPuTOMjNcbx3FhT8Xk+bzYOQQ="}},"text":"**Ops Pulse** — Activation rate, SLA resolution metrics (meta tile)\n2. **Sales Pulse** — Revenue, order count, top SKUs\n3. **Fulfillment Health** — Orders stuck in pending/processing, blockers\n4. **Inventory Heatmap** — Low stock alerts, days of cover\n5. **CX Escalations** — SLA breached conversations, escalation tags\n6. **SEO & Content Watch** — Landing pages with WoW session drops\n\n**Practice:**\n- Operators click through each tile\n- Identify status indicators (healthy, attention, error, unconfigured)\n- Confirm staging environment readiness: support lead walks through Shopify Admin login flow and staging credentials pre-check (demo shop domain, OCC staging URL with `?mock=1`, Supabase decision log access). Document confirmation in the Q&A template.\n- If Supabase telemetry is still syncing, rehearse using the sample IDs (`artifacts/logs/supabase_decision_export_2025-10-10T07-29-39Z.ndjson`, IDs 101–104) so facilitators can validate success, retry, and timeout scenarios before live data lands.\n\n**Q&A Capture:**\n- Any tile unclear or confusing?\n- What information is missing?\n- Any visual hierarchy issues?\n\n---\n\n### 3. CX Escalations Deep Dive (25 minutes)\n**Objective:** Master conversation triage and templated replies\n\n**Walkthrough:**\n- Tile shows list of conversations: customer name, status, SLA breach indicator\n- Click conversation name to open modal (if `FEATURE_MODAL_APPROVALS=true`)\n- Modal displays: customer name, conversation ID, created/breached timestamps, last message preview\n\n**Template Selection:**\n- Review 3 current templates: ack_delay, ship_update, refund_offer\n- Explain use cases per docs/runbooks/cx_escalations.md\n- Show variable interpolation: {{name}} → customer name\n\n**Approval Flow (Automated):**\n- AI automatically suggests appropriate template based on conversation analysis\n- Review AI-suggested reply in modal (pre-filled with customer name)\n- Verify template matches customer issue (shipping → ship_update, refund → refund_offer, general → ack_delay)\n- Add optional operator note for audit trail\n- Click \"Approve & Send Reply\" → logs decision + sends to Chatwoot\n- Toast confirmation: \"Reply sent to [Customer Name]\"\n\n**Manual Override Instructions:**\n- If AI suggestion is inappropriate, click \"Escalate to Manager\" instead of approving\n- If no AI suggestion appears (blank suggestedReply), do NOT approve - escalate instead\n- For complex issues or high-risk language (\"legal\", \"fraud\", \"chargeback\"), always escalate\n- Manual Chatwoot access: Use direct Chatwoot interface for custom replies not covered by templates\n- All manual replies should still be logged via decision logging for audit trail\n\n**Escalation Actions:**\n- \"Escalate to Manager\" button → tags conversation, logs decision\n- Escalation SLA: Manager acknowledges within 2 hours\n\n**Practice Scenarios:**\n1. Customer asking about shipping delay → Use `ship_update` template\n2. Customer reports product defect → Use `refund_offer` template\n3. Customer requests policy exception → Escalate to manager\n\n**Q&A Capture:**\n- Is template selection clear?\n- Do operators understand when to escalate vs. reply?\n- Any confusion about SLA breach indicators?\n\n---\n\n### 4. Sales & Inventory Workflows (20 minutes)\n**Objective:** Understand sales tracking and inventory alerts\n\n**Sales Pulse Tile:**\n- Shows order count, revenue for current window\n- Top SKUs list with units sold\n- Open fulfillment count (future: drill-in modal)\n- QA readiness evidence: Playwright staging run `artifacts/playwright/shopify/playwright-staging-2025-10-10T04-20-37Z.log` covers modal open/close and decision logging paths.\n\n**Inventory Heatmap Tile:**\n- Low stock alerts with SKU, units left, days of cover\n- Color coding: red (<7 days), yellow (7-14 days), green (>14 days) — future enhancement\n- Actions (future): Create draft PO, adjust quantity, mark intentional\n\n**Practice:**\n- Operators review mock inventory alerts\n- Identify which SKUs need reorder vs. intentional low stock\n\n**Q&A Capture:**\n- Is \"days of cover\" calculation clear?\n- What additional inventory data would be helpful?\n- Any confusion about fulfillment blockers?\n\n---\n\n### 5.","textTemplate":"","startCharIdx":3286,"endCharIdx":7422,"metadataSeparator":"\n","type":"TEXT","hash":"TxZvjJCcRyxvCxErdi4KPKikh/rc8VgOdmWB4ajod1E="},"1ae5c60e-12ff-42fe-a1bc-1744c6237d99":{"id_":"1ae5c60e-12ff-42fe-a1bc-1744c6237d99","metadata":{"source":"docs/runbooks/operator_training_agenda.md","lastModified":"2025-10-11T01:20:40.652Z"},"excludedEmbedMetadataKeys":[],"excludedLlmMetadataKeys":[],"relationships":{"SOURCE":{"nodeId":"docs/runbooks/operator_training_agenda.md","metadata":{"source":"docs/runbooks/operator_training_agenda.md","lastModified":"2025-10-11T01:20:40.652Z"},"hash":"BwmZUMta4qEmCZCa64ZJTJpPXitJJ5pWLH9cIFouFAA="},"PREVIOUS":{"nodeId":"4e518178-b58a-459a-8bb6-6493b7ab2626","metadata":{"source":"docs/runbooks/operator_training_agenda.md","lastModified":"2025-10-11T01:20:40.652Z"},"hash":"9Zua73cmYL9kDgYGClfEr2/CsM0xnZ1XBM0u3rti+2U="},"NEXT":{"nodeId":"d11414f8-1660-4a93-a525-7d4aaee0e50c","metadata":{},"hash":"EU69Ps40dPOtny75B4EK2jvTbtUqsijwtzW458ODXh0="}},"text":"log` covers modal open/close and decision logging paths.\n\n**Inventory Heatmap Tile:**\n- Low stock alerts with SKU, units left, days of cover\n- Color coding: red (<7 days), yellow (7-14 days), green (>14 days) — future enhancement\n- Actions (future): Create draft PO, adjust quantity, mark intentional\n\n**Practice:**\n- Operators review mock inventory alerts\n- Identify which SKUs need reorder vs. intentional low stock\n\n**Q&A Capture:**\n- Is \"days of cover\" calculation clear?\n- What additional inventory data would be helpful?\n- Any confusion about fulfillment blockers?\n\n---\n\n### 5. Decision Logging & Audit Trail (10 minutes)\n**Objective:** Understand how actions are tracked\n\n**Concepts:**\n- Every approval action creates decision_log entry\n- Decision includes: shopDomain, action type, operatorEmail, timestamp, payload\n- Decisions sync to Supabase for analytics (scope: `ops`)\n\n**Viewing Decisions:**\n- Future: Audit trail view in dashboard\n- Current: Decisions viewable in database (support/admin only)\n\n**Privacy & Compliance:**\n- Operator email logged for accountability\n- Customer data (names, emails) stored per Shopify/Chatwoot policies\n- Decision logs retained for 90 days (configurable)\n\n**Q&A Capture:**\n- Any privacy concerns about decision logging?\n- What audit reports would be useful?\n\n---\n\n### 6. Error Handling & Integration Monitoring (10 minutes)\n**Objective:** Recognize errors and know escalation paths\n\n**Error States:**\n- Tile shows \"Error\" status → Integration failure (Shopify API down, Chatwoot unreachable)\n- \"Configuration required\" status → Missing credentials or setup incomplete\n- Empty state: \"No SLA breaches detected\" (normal, not an error)\n- Shopify banner \"API rate limit exceeded.\" → Reference `docs/enablement/job_aids/shopify_sync_rate_limit_coaching.md` and the support playbook `docs/runbooks/shopify_rate_limit_recovery.md`\n\n**Escalation Paths:**\n- Integration errors → Alert reliability team (#incidents) (internal channel)\n- Shopify rate-limit persists after two retries → Capture headers and escalate to reliability via # `#occ-reliability` using the playbook\n- Data discrepancies → File Linear ticket with screenshots + timestamps\n- Persistent failures → Escalate to support lead\n\n**Practice:**\n- Show mock error state in tile\n- Role-play the Shopify rate-limit coaching script (first-hit reassurance + escalation) and document notes in the Q&A template\n- Operators practice filing ticket with evidence (screenshot + description)\n\n**Q&A Capture:**\n- Is error messaging clear?\n- Do operators know who to contact for each issue type?\n\n---\n\n### 7. Hands-On Practice Session (15 minutes)\n**Objective:** Operators complete realistic scenarios independently\n\n**Scenarios:**\n1. **CX Escalation:** Customer \"Alex Rivera\" conversation SLA breached, use `ack_delay` template\n2. **Inventory Alert:** SKU \"HOODIE-BLK-M\" at 15 units, 5 days of cover → identify as reorder needed\n3. **Manager Escalation:** Customer \"Jordan Lee\" requests refund >$500 → escalate to manager\n4. **Error Handling:** Chatwoot tile shows error → file ticket with screenshot\n\n**Evidence Reference:** QA staging validation log `artifacts/playwright/shopify/playwright-staging-2025-10-10T04-20-37Z.log` demonstrates CX Escalations modal approve/escalate/resolve flows on Fly staging.\n\n**Trainer Observation:**\n- Note any confusion, hesitation, or incorrect actions\n- Capture in Q&A template for follow-up\n\n---\n\n### 8. Q&A & Feedback Collection (5 minutes)\n**Objective:** Gather operator feedback for product/engineering\n\n**Questions:**\n- What dashboard features are most valuable?\n- What's confusing or needs improvement?\n- What additional data or actions would help daily workflows?\n\n**Feedback Capture:**\n- Use docs/runbooks/operator_training_qa_template.md\n- Support agent files Linear tickets for each improvement opportunity\n- Evidence: screenshots, exact quotes, timestamps\n\n---\n\n## Q&A Capture Template\n\nSee: docs/runbooks/operator_training_qa_template.md\n\n---\n\n## Training Materials Checklist\n- [ ] Dashboard access with mock mode enabled (`?","textTemplate":"","startCharIdx":6839,"endCharIdx":10899,"metadataSeparator":"\n","type":"TEXT","hash":"cLb/YRuWXOBUmy/Yg91B8wl3Ipj4b8AfTQ5VkSYmeuU="},"d11414f8-1660-4a93-a525-7d4aaee0e50c":{"id_":"d11414f8-1660-4a93-a525-7d4aaee0e50c","metadata":{"source":"docs/runbooks/operator_training_agenda.md","lastModified":"2025-10-11T01:20:40.652Z"},"excludedEmbedMetadataKeys":[],"excludedLlmMetadataKeys":[],"relationships":{"SOURCE":{"nodeId":"docs/runbooks/operator_training_agenda.md","metadata":{"source":"docs/runbooks/operator_training_agenda.md","lastModified":"2025-10-11T01:20:40.652Z"},"hash":"BwmZUMta4qEmCZCa64ZJTJpPXitJJ5pWLH9cIFouFAA="},"PREVIOUS":{"nodeId":"1ae5c60e-12ff-42fe-a1bc-1744c6237d99","metadata":{"source":"docs/runbooks/operator_training_agenda.md","lastModified":"2025-10-11T01:20:40.652Z"},"hash":"lmQ4Wb86IHMWyfv7s4LPuTOMjNcbx3FhT8Xk+bzYOQQ="}},"text":"log` demonstrates CX Escalations modal approve/escalate/resolve flows on Fly staging.\n\n**Trainer Observation:**\n- Note any confusion, hesitation, or incorrect actions\n- Capture in Q&A template for follow-up\n\n---\n\n### 8. Q&A & Feedback Collection (5 minutes)\n**Objective:** Gather operator feedback for product/engineering\n\n**Questions:**\n- What dashboard features are most valuable?\n- What's confusing or needs improvement?\n- What additional data or actions would help daily workflows?\n\n**Feedback Capture:**\n- Use docs/runbooks/operator_training_qa_template.md\n- Support agent files Linear tickets for each improvement opportunity\n- Evidence: screenshots, exact quotes, timestamps\n\n---\n\n## Q&A Capture Template\n\nSee: docs/runbooks/operator_training_qa_template.md\n\n---\n\n## Training Materials Checklist\n- [ ] Dashboard access with mock mode enabled (`?mock=1`)\n- [ ] Copy of this agenda (printed or digital)\n- [ ] Q&A capture template\n- [ ] Screenshot/screen recording tools\n- [ ] Linear project access for ticket filing\n- [ ] #incidents (internal channel) channel access\n\n---\n\n## Dry Run Coordination — 2025-10-08\n- **Primary proposal:** Wednesday, 2025-10-16 @ 13:00 ET (aligns with marketing's launch prep window)\n- **Owner:** Riley Chen (Product) — confirmation requested in `feedback/product.md`\n- **Support prep:** Send agenda + Q&A template by 2025-10-14, verify `FEATURE_MODAL_APPROVALS=1` in staging, confirm Chatwoot seed data covers shipping + refund scenarios.\n- **Dependencies:** Latest English copy deck alignment (`docs/design/copy_deck.md`), Sales Pulse/CX Escalations job aids staged in `docs/enablement/job_aids/`, staging shop access package from product (OCC-214).\n- **Comms Sync:** Coordinate enablement/marketing resend once QA posts green evidence; share updated materials via customer.support@hotrodan.com and archive announcements in `feedback/support.md`.\n\n---\n\n## Post-Training Follow-Up\n- [ ] Support lead reviews Q&A capture and files tickets\n- [ ] Share feedback summary with product + engineer (via feedback/support.md)\n- [ ] Schedule follow-up training for modal workflows (post-M2 deployment)\n- [ ] Update training agenda based on operator feedback\n\n---\n\n## Related Documentation\n- CX Escalations Runbook: docs/runbooks/cx_escalations.md\n- Copy Deck (English): docs/design/copy_deck.md\n- Accessibility Criteria: docs/design/accessibility_criteria.md\n- North Star: docs/NORTH_STAR.md\n\n---\n\n## Revision History\n| Date | Author | Change |\n|------|--------|--------|\n| 2025-10-10 | support | Added support inbox contact, QA evidence hold status, refresh workflow, and comms sync instructions |\n| 2025-10-10 | support | Added staging install readiness steps and environment checks |\n| 2025-10-12 | support | Updated hold status to include Chatwoot Fly cut-over and smoke script readiness |\n| 2025-10-08 | support | Added dry run coordination details and ownership |\n| 2025-10-06 | support | Initial training agenda created per manager sprint focus |","textTemplate":"","startCharIdx":10047,"endCharIdx":13024,"metadataSeparator":"\n","type":"TEXT","hash":"+d5XUqXvEsV83A3Hw5QrCraR22Pz0qfn3lEmbba5sDI="},"5bb4e573-9426-4415-9575-53a69b789d8e":{"id_":"5bb4e573-9426-4415-9575-53a69b789d8e","metadata":{"source":"docs/runbooks/operator_training_qa_template.md","lastModified":"2025-10-11T01:20:59.024Z"},"excludedEmbedMetadataKeys":[],"excludedLlmMetadataKeys":[],"relationships":{"SOURCE":{"nodeId":"docs/runbooks/operator_training_qa_template.md","metadata":{"source":"docs/runbooks/operator_training_qa_template.md","lastModified":"2025-10-11T01:20:59.024Z"},"hash":"W+5gkWyJUZMsdMziX4NCZ/LVJg7GtAbwfE5ZGyUqz/Q="},"NEXT":{"nodeId":"9bd6e659-3743-4a5a-90e3-10edfe093a79","metadata":{},"hash":"hL974mr/0NHcPnt7QtPff7UGX6iOWTZ3OAhBKXUMW/U="}},"text":"---\nepoch: 2025.10.E1\ndoc: docs/runbooks/operator_training_qa_template.md\nowner: support\nlast_reviewed: 2025-10-10\ndoc_hash: TBD\nexpires: 2025-10-17\n---\n# Operator Training Q&A Capture Template\n\n## Usage\n- Open this document during dry runs and live trainings to log operator questions, confusing states, and follow-up actions.\n- Each entry should include supporting evidence (timestamp, screenshot link, decision log ID) and an owner + due date.\n- After the session, copy relevant items into `feedback/support.md`, `feedback/enablement.md`, and Memory (`scope=\"ops\"`) so stakeholders can track resolution.\n- Send updated logs and attachments to customer.support@hotrodan.com so the support inbox maintains the audit trail.\n- While staging is paused, collect operator questions via #/email and pre-fill draft responses so facilitators can address them immediately once rehearsals resume.\n\n## Session Details\n- **Session:** Shopify Dry Run Rehearsal (QA evidence hold — credentials stable)\n- **Status:** Credentials validated 2025-10-10 15:45 UTC; hold distribution until QA posts green `?mock=0` evidence **and** Chatwoot Fly smoke passes. Use `customer.support@hotrodan.com` for operator escalations.\n- **Date / Time:** 2025-10-16 13:00 ET\n- **Facilitators:** Product — Justin; Support — Morgan Patel; Enablement — Justin (acting enablement agent)\n- **Attendees:** See `docs/strategy/operator_dry_run_pre_read_draft.md` — invites queued pending QA evidence drop\n- **Environment:** OCC staging `https://hotdash-stag{{ABBREV_0}}fly.dev/app` (`?mock=1` default), feature flags `FEATURE_MODAL_APPROVALS`, `FEATURE_AI_ESCALATIONS`\n\n## Question Log\n| # | Timestamp | Participant | Question / Observation | Context (Tile / Feature) | Immediate Answer | Owner | Follow-up Due |\n|---|-----------|-------------|------------------------|---------------------------|------------------|-------|---------------|\n| 1 | 2025-10-10T03:00Z | Support | Need deployment to confirm Shopify staging credential bundle drop (DEPLOY-147) for rehearsal install steps | Shopify staging install | Closed — bundle validated; tracking QA evidence gate | Deployment | 2025-10-10 |\n| 2 | 2025-10-10T03:00Z | Support | Confirm when reliability expects sustained green synthetic check for `https://hotdash-stag{{ABBREV_1}}fly.dev/app?mock=0` | Shopify validation queue | Pending — rerun curl after reliability update; share output via customer.support@hotrodan.com | Reliability | 2025-10-10 |\n| 3 | 2025-10-10T03:00Z | Enablement | Clarify facilitator assignments and note-taking owners before invites send | Dry run logistics | In progress — waiting on support to publish final roster | Enablement | 2025-10-12 |\n| 4 | 2025-10-10T14:20Z | Support | Confirm revised invite send timeline + comms owners while hold persists | Dry run logistics | In progress — enablement/marketing targeting resend within 2h of QA + Chatwoot green light (tentative 2025-10-14 15:00 UTC) | Enablement ↔ Marketing ↔ Support | 2025-10-14 |\n| 5 | 2025-10-10T16:10Z | Enablement ↔ Support ↔ Product | Ensure new support alias shared with facilitators before packet distribution | Dry run logistics | Done — alias sent 2025-10-10 16:10 UTC | Enablement | 2025-10-10 |\n| 6 | 2025-10-10T17:15Z | Support | Operator asked how Chatwoot Fly host switch affects OCC access during rehearsal pause | Chatwoot integration | Draft answer: OCC proxy continues using staging URL; share Fly host + smoke status in pre-session briefing once QA clears hold | Support | QA evidence + Fly green light |\n\n|| 7 | 2025-10-11T01:15Z | Support | When should operators use manual override vs AI-suggested replies? | Chatwoot automation | Draft answer: Use manual override when AI suggestion is inappropriate, missing, or for high-risk language. Always escalate complex issues to manager.","textTemplate":"","metadataSeparator":"\n","type":"TEXT","hash":"ydGgo+oXuRyHrovzR8lDdgzMHmJPWLUCqA3rr+uUmO4="},"9bd6e659-3743-4a5a-90e3-10edfe093a79":{"id_":"9bd6e659-3743-4a5a-90e3-10edfe093a79","metadata":{"source":"docs/runbooks/operator_training_qa_template.md","lastModified":"2025-10-11T01:20:59.024Z"},"excludedEmbedMetadataKeys":[],"excludedLlmMetadataKeys":[],"relationships":{"SOURCE":{"nodeId":"docs/runbooks/operator_training_qa_template.md","metadata":{"source":"docs/runbooks/operator_training_qa_template.md","lastModified":"2025-10-11T01:20:59.024Z"},"hash":"W+5gkWyJUZMsdMziX4NCZ/LVJg7GtAbwfE5ZGyUqz/Q="},"PREVIOUS":{"nodeId":"5bb4e573-9426-4415-9575-53a69b789d8e","metadata":{"source":"docs/runbooks/operator_training_qa_template.md","lastModified":"2025-10-11T01:20:59.024Z"},"hash":"ydGgo+oXuRyHrovzR8lDdgzMHmJPWLUCqA3rr+uUmO4="}},"text":"| Chatwoot automation | Draft answer: Use manual override when AI suggestion is inappropriate, missing, or for high-risk language. Always escalate complex issues to manager. | Support | 2025-10-14 |\n|| 8 | 2025-10-11T01:15Z | Support | How do operators access Chatwoot directly for custom replies? | Chatwoot automation | Draft answer: Direct Chatwoot access at hotdash-chatwoot.fly.dev, log all manual replies via decision logging, coordinate with support lead for training. | Support | 2025-10-14 |\n|| 9 | 2025-10-11T01:15Z | Support | What happens if AI suggestion doesn't match customer issue category? | Chatwoot automation | Draft answer: Verify template appropriateness before approving. If mismatch, escalate to manager rather than approving inappropriate template. | Support | 2025-10-14 |\n\n> Add rows as needed. Use ISO timestamps (e.g., `2025-10-16T13:27Z`).\n\n## Action Items\n| # | Task | Owner | Due Date | Status |\n|---|------|-------|----------|--------|\n| 1 | Publish finalized facilitator roster + note-taking owners in agenda | Enablement ↔ Support | 2025-10-12 | ☐ Support drafting (due 2025-10-11 EOD) |\n| 2 | Capture curl/screenshot evidence for Shopify validation queue once `?mock=0` responds | Support | 2025-10-11 | ☐ Pending QA rerun |\n| 3 | Distribute credential bundle summary and guardrails to operators after DEPLOY-147 closes | Deployment ↔ Support | 2025-10-10 | ☑ Completed — credentials stable |\n| 4 | Issue revised invite send timeline immediately after QA + Chatwoot green signal | Enablement ↔ Marketing ↔ Support | 2025-10-14 | ☐ Blocked — waiting on QA `?mock=0` + Chatwoot smoke |\n| 5 | Prep comms + invite drafts (email + #) for rapid resend once hold lifts | Marketing ↔ Support | Draft by 2025-10-10 20:00 UTC | ☑ Drafted; ready to send on evidence drop |\n| 6 | Gather operator questions asynchronously and draft responses while staging hold persists | Support | Daily through QA all-clear | ☐ In progress — updates logged in template |\n\n## Evidence Links\n- Screenshots:\n- Decision Logs / Supabase IDs:\n- # Threads:\n- Other Artifacts:\n\n## Summary Notes\n- Key takeaways:\n  - Credentials confirmed stable; rehearsals remain paused until QA delivers green `?mock=0` evidence. Unified support inbox (`customer.support@hotrodan.com`) now live for operator escalations and prep updates.\n- Outstanding risks:\n  - QA latency evidence delayed beyond 2025-10-11 compresses distribution window — prepare rapid send once artifacts land.\n  - Operator questions may accumulate during pause; ensure async responses stay updated in template to avoid backlog.\n- Recommended updates to runbooks/job aids:\n  - Ensure packet/job aids highlight credential stability, QA hold status, and updated support contact.\n\n## Change Log\n| Date | Author | Change |\n|------|--------|--------|\n| 2025-10-10 | enablement | Updated QA hold details, support contact, and action items post credential validation |\n| 2025-10-10 | support | Added support inbox routing and updated comms status guidance |\n| 2025-10-10 | support | Pre-filled dry run session metadata and open questions |\n| 2025-10-12 | support | Extended hold status to include Chatwoot Fly smoke and revised invite timelines |","textTemplate":"","startCharIdx":3618,"endCharIdx":6813,"metadataSeparator":"\n","type":"TEXT","hash":"u27X0v+LoKYQE7nN9qH/3DF0/u5IBWNHPh0WFEz7CiU="},"55559cef-bc16-4bf1-b970-1d1bc0fe17c3":{"id_":"55559cef-bc16-4bf1-b970-1d1bc0fe17c3","metadata":{"source":"docs/runbooks/prisma_staging_postgres.md","lastModified":"2025-10-11T00:18:41.331Z"},"excludedEmbedMetadataKeys":[],"excludedLlmMetadataKeys":[],"relationships":{"SOURCE":{"nodeId":"docs/runbooks/prisma_staging_postgres.md","metadata":{"source":"docs/runbooks/prisma_staging_postgres.md","lastModified":"2025-10-11T00:18:41.331Z"},"hash":"9X6Ext0TAWQHMTVoDB2fctBPx7oq4DWB/O+LD4ZVmdw="}},"text":"---\nrunbook: Prisma Supabase Postgres\nowner: engineering\nlast_exercised: TBD\nnext_window: TBD\n---\n\n# Prisma + Supabase Postgres Runbook\n\n## Overview\nHotDash uses a single Prisma schema (`prisma/schema.prisma`) targeting Postgres. Developers work against the local Supabase containers, while staging/production use managed Supabase projects. This runbook documents the workflows for applying migrations, validating rollbacks, and mirroring secrets across environments.\n\n## Local Development\n1. Start the services:\n   ```bash\n   supabase start\n   ```\n2. Export your environment:\n   ```bash\n   export $(grep -v '^#' .env.local | xargs)\n   ```\n3. Apply migrations and generate the Prisma client:\n   ```bash\n   npm run setup\n   ```\n   Evidence: attach the command output to your feedback entry.\n\n## Staging / Production\n1. Mirror credentials from vault to GitHub (`DATABASE_URL`, `SUPABASE_URL`, `SUPABASE_SERVICE_KEY`).\n2. From a privileged terminal (with the staging `.env` sourced), run:\n   ```bash\n   npm run setup\n   ```\n   - `prisma generate` uses `DATABASE_URL` automatically.\n   - `prisma migrate deploy` applies `prisma/migrations/*` to the target database.\n3. Record the output and any schema changes in `feedback/deployment.md` and `docs/deployment/env_matrix.md`.\n\n## Rollback / Forward Validation\nUse Prisma’s CLI directly:\n```bash\nprisma migrate status\nprisma migrate resolve --rolled-back <migration-id>\nprisma migrate deploy\n```\n- Always pass `--schema prisma/schema.prisma` if executing from outside the repo root.\n- Never use SQLite helpers; the Postgres datasource is canonical.\n\n## Resetting a Sandbox Database\n```bash\nprisma migrate reset --force --skip-seed --schema prisma/schema.prisma\n```\nOnly run inside disposable environments (local dev or QA sandboxes). Capture before/after table counts and log them in `feedback/qa.md`.\n\n## Supabase Specific Tasks\n- Run `supabase/sql/observability_logs.sql` to provision the logging table when creating new projects.\n- Tail live activity with `scripts/ops/tail-supabase-logs.sh <project-ref>` during deploys.\n- Deploy edge functions (e.g., `occ-log`) alongside DB changes using the Supabase CLI commands documented in `docs/runbooks/supabase_local.md`.\n\n## Evidence Checklist\n- `npm run setup` output (local + staging)\n- Supabase log snippet (`scripts/ops/tail-supabase-logs.sh`)\n- Prisma `migrate status` or `migrate resolve` output when rolling back\n- Updated env matrix (`docs/deployment/env_matrix.md`)","textTemplate":"","endCharIdx":2466,"metadataSeparator":"\n","type":"TEXT","hash":"sKv32UAx7cCnBqWO/bcfCMUxYnZIFkkgYLqJXKR5Dns="},"6df85ef7-2869-447d-9e25-5ab1d6a732f9":{"id_":"6df85ef7-2869-447d-9e25-5ab1d6a732f9","metadata":{"source":"docs/runbooks/qa_playwright_plan.md","lastModified":"2025-10-09T01:10:45.017Z"},"excludedEmbedMetadataKeys":[],"excludedLlmMetadataKeys":[],"relationships":{"SOURCE":{"nodeId":"docs/runbooks/qa_playwright_plan.md","metadata":{"source":"docs/runbooks/qa_playwright_plan.md","lastModified":"2025-10-09T01:10:45.017Z"},"hash":"pGXv/vhchKZwPKN9GPpVpuWHq97LC8NY8JCsWIyFKQc="}},"text":"# Playwright Coverage Plan — CX Escalations & Sales Pulse (Draft 2025-10-09)\n\n## Scope\n- CX Escalations modal flows: open → approve → escalate → resolve.\n- Sales Pulse modal (pending implementation) focus on chart + action buttons.\n\n## Test Matrix\n| Scenario | Data Setup | Assertions |\n|----------|------------|------------|\n| Approve templated reply | Seed conversation with `ship_update` suggestion | Button enabled, decision log request emitted, toast confirms send |\n| Escalate to manager | SLA breach + missing template | Escalation tag applied, audit log action `chatwoot.escalate` present |\n| Missing suggestion fallback | Conversation without heuristics keywords | Approve disabled, guidance text visible |\n| Sales Pulse anomaly | Mock data toggles anomaly flag | Modal copy matches English-only deck, telemetry event fired |\n\n## Fixtures Needed\n- Staging Chatwoot conversation seeds (shipping + refund).\n- Decision log Supabase access for assertion step.\n- Mock Sales Pulse dataset with anomaly toggle.\n\n## Next Steps\n1. Convert matrix to Playwright specs once staging data arrives.\n2. Coordinate with engineering on telemetry hook to assert network payload.\n3. Archive run artifacts under `test-results/playwright/2025-10-xx/` for QA evidence.","textTemplate":"","endCharIdx":1254,"metadataSeparator":"\n","type":"TEXT","hash":"WwSGWNg51tcNbqNWXY8bHFYHFVbRiHw8xDEZccaizR4="},"0ea73779-72c6-4ff5-8125-0810819a724f":{"id_":"0ea73779-72c6-4ff5-8125-0810819a724f","metadata":{"source":"docs/runbooks/restart_cycle_checklist.md","lastModified":"2025-10-11T00:18:41.331Z"},"excludedEmbedMetadataKeys":[],"excludedLlmMetadataKeys":[],"relationships":{"SOURCE":{"nodeId":"docs/runbooks/restart_cycle_checklist.md","metadata":{"source":"docs/runbooks/restart_cycle_checklist.md","lastModified":"2025-10-11T00:18:41.331Z"},"hash":"YhlcbMLHPGjuUca90g20/hoks4EvSaRDx3JcXEgBY4E="}},"text":"---\nepoch: 2025.10.E1\ndoc: docs/runbooks/restart_cycle_checklist.md\nowner: product\nlast_reviewed: 2025-10-10\ndoc_hash: TBD\nexpires: 2025-10-18\n---\n# Restart Cycle Checklist — Operator Control Center\n\n## Purpose\nEnsure every service restart or environment recycle follows a repeatable sequence that preserves operator telemetry, protects in-flight work, and records evidence for audit trails. This checklist aligns with direction governance (`docs/directions/product.md`) and the deployment protocol (`docs/git_protocol.md`).\n\n## Preconditions\n- You have an assigned restart window and communication plan approved in `feedback/manager.md`.\n- Local workspace is on the correct branch (`agent/<role>/<task>` or `main`) with latest changes pulled.\n- Required credentials (`SUPABASE_URL`, `SUPABASE_SERVICE_KEY`, Shopify Admin API demo shop, etc.) are present locally and in CI.\n- Alerting partners (reliability, enablement, support) acknowledged the restart window in # `#occ-launch`.\n\n## Checklist\n| Step | Action | Evidence / Notes |\n| --- | --- | --- |\n| 1 | Run `git status -sb` and capture screenshot or text snippet for the restart record. | Attach output to `feedback/<role>.md` if any unexpected changes appear. |\n| 2 | Execute `git stash push --include-untracked --message \"restart-cycle-YYYY-MM-DD\"` to snapshot local work. | Record resulting stash ID (e.g., `stash@{0}`) in `feedback/product.md` under **Restart Cycle** section. |\n| 3 | Verify `git stash list` includes the new entry; confirm no other uncommitted work remains. | If stash fails (clean tree), explicitly note the clean state in the feedback log. |\n| 4 | Capture current monitoring artifacts prior to restart: `artifacts/monitoring/supabase-sync-summary-latest.json`, synthetic check logs, and any feature flag overrides. | Link artifacts in the feedback log so telemetry deltas can be compared post-restart. |\n| 5 | Coordinate go/no-go with reliability and deployment; confirm Supabase decision sync and staging secrets remain intact after restart. | Update `feedback/product.md` and ping reliability if anomalies surface. |\n| 6 | Execute restart script/runbook steps (see `docs/deployment/production_go_live_checklist.md` or environment-specific guide). | Note the exact command(s) and timestamps in the feedback log. |\n| 7 | Post-restart validation: run smoke tests (`npm run test:smoke` or agreed subset), confirm dashboards render, and check Supabase telemetry ingestion. | Log results and any regressions, including links to updated artifacts. |\n| 8 | If blockers remain, create follow-up task in Linear (OCC-###) with evidence links; tag owning teams. | Reference backlog updates in `feedback/product.md` to maintain audit trail. |\n| 9 | Once validation passes, notify stakeholders in `#occ-launch` and close the restart cycle entry in the feedback log with final status. | Include stash pop instructions if remaining work must resume (`git stash pop stash@{n}`). |\n\n## Reminders\n- Do **not** delete stashes created for restart cycles until all teams confirm work completed or rescheduled.\n- Update this runbook only via manager-approved change requests (direction governance).\n- Archive restart evidence bundles older than 30 days under `artifacts/archive/restart-cycles/`.","textTemplate":"","endCharIdx":3253,"metadataSeparator":"\n","type":"TEXT","hash":"MuMTSohsFutIenSb6XI5U3EZ80YRZg6FWbZ3D7d2wv4="},"0e3ab44e-80cb-44c4-b3ad-a16820ba992e":{"id_":"0e3ab44e-80cb-44c4-b3ad-a16820ba992e","metadata":{"source":"docs/runbooks/shopify_dry_run_checklist.md","lastModified":"2025-10-11T00:18:41.331Z"},"excludedEmbedMetadataKeys":[],"excludedLlmMetadataKeys":[],"relationships":{"SOURCE":{"nodeId":"docs/runbooks/shopify_dry_run_checklist.md","metadata":{"source":"docs/runbooks/shopify_dry_run_checklist.md","lastModified":"2025-10-11T00:18:41.331Z"},"hash":"jgRHqcNpXjPC2y/LXAmD8ajan2JXpgyQB6DLyekcD9I="},"NEXT":{"nodeId":"0d6fcfb9-b6bd-447e-bb42-d76cc136f6dd","metadata":{},"hash":"yB5ciXGCnQzeiHdF9PdHNwsrwVQsJHZbRiqlJ6XrdUc="}},"text":"---\nepoch: 2025.10.E1\ndoc: docs/runbooks/shopify_dry_run_checklist.md\nowner: support\nlast_reviewed: 2025-10-10\ndoc_hash: TBD\nexpires: 2025-10-17\n---\n# Shopify Dry Run Checklist — Support Lead\n\n## Purpose\nEnsure support delivers a disciplined rehearsal of the HotDash Shopify Admin app on 2025-10-16. This checklist captures the prep, live-run, and follow-up steps required to keep operators, enablement, and product aligned while gathering evidence for launch readiness.\n\n**Support Inbox:** customer.support@hotrodan.com — route all operator comms and evidence handoffs through this address.\n\n## Canonical References\n- `docs/directions/support.md` — sprint focus and governance\n- `docs/enablement/dry_run_training_materials.md` — facilitator packet + dependencies\n- `docs/runbooks/operator_training_agenda.md` — session flow + timings\n- `docs/strategy/operator_dry_run_pre_read_draft.md` — success metrics + attendee roster\n- `docs/marketing/support_training_script_2025-10-16.md` — instructor script\n- `docs/integrations/shopify_readiness.md` — integration posture + credential status\n- `docs/runbooks/restart_cycle_checklist.md` — integrations restart procedure (cross-functional trigger)\n- `docs/runbooks/shopify_rate_limit_recovery.md` — rate-limit response playbook for support\n\n> Log all progress and blockers in `feedback/support.md` (new dated section at top) and mirror dependencies in partner feedback logs as needed.\n\n## QA Evidence Hold — 2025-10-10\n- ⛔ **Status:** Staging rehearsals remain paused until QA posts the green `?mock=0` curl + synthetic evidence set.\n- 🔄 **Coordination:** Continue prepping materials but do not run live walk-throughs; brief enablement + marketing via customer.support@hotrodan.com that invites/comms stay in draft.\n- 🛠 **Prep Work:** Maintain mock-mode rehearsals only, keep evidence folders staged, and line up notification copy so we can relaunch within 2h of QA’s green signal.\n- 🗂 **Operator Q&A:** Collect questions/answers asynchronously (#, email) and log them in `docs/runbooks/operator_training_qa_template.md` so facilitators have fresh context once the hold lifts.\n- 📝 **Logging:** Capture all updates/blockers in `feedback/support.md`; mirror dependencies in partner feedback logs so stakeholders know the hold rationale.\n- 📡 **Chatwoot Fly cut-over:** Track reliability’s Fly migration updates (`docs/deployment/chatwoot_fly_runbook.md`), stage cut-over comms drafts, and keep `scripts/ops/chatwoot-fly-smoke.sh` refreshed with the announced host/token so the smoke can run the moment reliability signals go-live.\n\n## Timeline Tasks\n\n### T-72 Hours (2025-10-13)\n| # | Task | Owner | Evidence / Artifact | Status |\n|---|------|-------|---------------------|--------|\n| 1 | Re-confirm sprint focus + dry run objectives with product/enablement (`docs/directions/support.md`) | Support | Note in `feedback/support.md` | Pending — schedule sync by 2025-10-13 |\n| 2 | Verify restart cycle outcomes with integrations (`docs/runbooks/restart_cycle_checklist.md`) to ensure Shopify readiness tracker is current | Support ↔ Integrations | Updated row in `docs/integrations/integration_readiness_dashboard.md` | Pending — awaiting integrations owner |\n| 3 | Collect open questions from support trainers/operators and seed `docs/runbooks/operator_training_qa_template.md` | Support | Q&A template updated with draft prompts | Pending — gather trainer inputs 2025-10-12 |\n| 4 | Confirm attendee list + facilitator assignments with product (`docs/strategy/operator_dry_run_pre_read_draft.md`) | Product ↔ Support | Acknowledgment in `feedback/product.md` + `feedback/support.md` | Pending — product confirmation required |\n\n### T-48 Hours (2025-10-14)\n| # | Task | Owner | Evidence / Artifact | Status |\n|---|------|-------|---------------------|--------|\n| 1 | Validate staging access package: Shopify Admin demo shops, Chatwoot sandbox token, Supabase decision log key, Shopify CLI auth token | Product / Deployment | Credentials logged in `feedback/support.","textTemplate":"","endCharIdx":4008,"metadataSeparator":"\n","type":"TEXT","hash":"Al7p8BHEfTNa38A3e2GpJHe62jh57d3Xeqn6YblIfnM="},"0d6fcfb9-b6bd-447e-bb42-d76cc136f6dd":{"id_":"0d6fcfb9-b6bd-447e-bb42-d76cc136f6dd","metadata":{"source":"docs/runbooks/shopify_dry_run_checklist.md","lastModified":"2025-10-11T00:18:41.331Z"},"excludedEmbedMetadataKeys":[],"excludedLlmMetadataKeys":[],"relationships":{"SOURCE":{"nodeId":"docs/runbooks/shopify_dry_run_checklist.md","metadata":{"source":"docs/runbooks/shopify_dry_run_checklist.md","lastModified":"2025-10-11T00:18:41.331Z"},"hash":"jgRHqcNpXjPC2y/LXAmD8ajan2JXpgyQB6DLyekcD9I="},"PREVIOUS":{"nodeId":"0e3ab44e-80cb-44c4-b3ad-a16820ba992e","metadata":{"source":"docs/runbooks/shopify_dry_run_checklist.md","lastModified":"2025-10-11T00:18:41.331Z"},"hash":"Ed3DEjjbNn/dkpxZt1A/qxSZRqQgy5OgqqbV+/ll2Zk="},"NEXT":{"nodeId":"81340641-b55f-4530-a90c-18e7ac50d2e3","metadata":{},"hash":"59of0FfBOEcl5gXY9LSTh/7jiYx6mb576QsHmn2CRoM="}},"text":"md` | Pending — awaiting integrations owner |\n| 3 | Collect open questions from support trainers/operators and seed `docs/runbooks/operator_training_qa_template.md` | Support | Q&A template updated with draft prompts | Pending — gather trainer inputs 2025-10-12 |\n| 4 | Confirm attendee list + facilitator assignments with product (`docs/strategy/operator_dry_run_pre_read_draft.md`) | Product ↔ Support | Acknowledgment in `feedback/product.md` + `feedback/support.md` | Pending — product confirmation required |\n\n### T-48 Hours (2025-10-14)\n| # | Task | Owner | Evidence / Artifact | Status |\n|---|------|-------|---------------------|--------|\n| 1 | Validate staging access package: Shopify Admin demo shops, Chatwoot sandbox token, Supabase decision log key, Shopify CLI auth token | Product / Deployment | Credentials logged in `feedback/support.md` + vault entry screenshots | Pending — blocked on staging bundle |\n| 2 | Confirm feature flags + mock params for rehearsal (`FEATURE_MODAL_APPROVALS`, `FEATURE_AI_ESCALATIONS`, `?mock=1`) | Engineering ↔ Support | Screenshot or flag checklist stored in `artifacts/ops/dry_run_2025-10-16/` | Pending — to verify once staging access delivered |\n| 3 | Review job aids + AI samples for accuracy (`docs/enablement/job_aids/*`, `docs/enablement/job_aids/ai_samples/*`) | Support ↔ Enablement | Sign-off note in `feedback/enablement.md` | Pending — awaiting design overlays |\n| 4 | Sync with integrations on Shopify deploy readiness (`docs/integrations/shopify_readiness.md`) and capture any credential gaps | Support ↔ Integrations | Updated checklist status + note in `feedback/support.md` | Pending — monitoring `DEPLOY-147` |\n| 5 | Rehearse Shopify validation queue via `https://hotdash-stag{{ABBREV_0}}fly.dev/app` using mock + live smoke paths; log curl/screenshot evidence and comms updates | Support | Entry in `feedback/support.md` referencing `docs/integrations/shopify_readiness.md` | In progress — waiting on sustained green synthetic check |\n| 6 | Run English-only spot checks on updated marketing/support collateral (`docs/marketing/support_training_script_2025-10-16.md`, `docs/enablement/dry_run_training_materials.md`, related comms) | Support ↔ Marketing/Enablement | Evidence logged in `feedback/localization.md` | Pending — rerun after collateral updates land |\n| 7 | Prep Chatwoot Fly cut-over checklist (confirm host, token, smoke script, and comms draft) | Support ↔ Reliability | Update logged in `feedback/support.md` referencing `scripts/ops/chatwoot-fly-smoke.sh` | Pending — waiting for reliability go-live window |\n\n### T-24 Hours (2025-10-15)\n| # | Task | Owner | Evidence / Artifact | Status |\n|---|------|-------|---------------------|--------|\n| 1 | Send calendar invite + facilitator packet links (`docs/enablement/dry_run_training_materials.md`, Q&A template, agenda) | Support | Calendar invite + # post archived | Pending — share after access package lands |\n| 2 | Publish finalized pre-read in `#occ-product` and tag attendees (`docs/strategy/operator_dry_run_pre_read_draft.md`) | Product ↔ Support | # permalink captured in `feedback/support.md` | Pending — waiting for attendee confirmation |\n| 3 | Stage evidence folder (`artifacts/ops/dry_run_2025-10-16/`) with subfolders for scenarios + metrics | Support | Folder structure created (see repository) | Prep started — scaffolding created 2025-10-10 |\n| 4 | Confirm recording + note-taking assignments (scribe, backup) | Support ↔ Enablement | Owner list appended to agenda + logged in feedback | Pending — assign once facilitators set |\n| 5 | Brief facilitators on rate-limit recovery scripts (`docs/runbooks/shopify_rate_limit_recovery.md`) | Support ↔ Enablement | Acknowledgment in `feedback/enablement.md` + Q&A template | Pending — include in T-24 facilitator sync |\n| 6 | Confirm participants can install/open OCC in staging (Shopify Admin → Apps → HotDash) | Support ↔ Product | Checklist note in `docs/runbooks/operator_training_agenda.md` + `feedback/support.","textTemplate":"","metadataSeparator":"\n","type":"TEXT","hash":"twkN9qK2hEz7O88nTR33Q8DySDm6+gukBCxkqYzsCLU="},"81340641-b55f-4530-a90c-18e7ac50d2e3":{"id_":"81340641-b55f-4530-a90c-18e7ac50d2e3","metadata":{"source":"docs/runbooks/shopify_dry_run_checklist.md","lastModified":"2025-10-11T00:18:41.331Z"},"excludedEmbedMetadataKeys":[],"excludedLlmMetadataKeys":[],"relationships":{"SOURCE":{"nodeId":"docs/runbooks/shopify_dry_run_checklist.md","metadata":{"source":"docs/runbooks/shopify_dry_run_checklist.md","lastModified":"2025-10-11T00:18:41.331Z"},"hash":"jgRHqcNpXjPC2y/LXAmD8ajan2JXpgyQB6DLyekcD9I="},"PREVIOUS":{"nodeId":"0d6fcfb9-b6bd-447e-bb42-d76cc136f6dd","metadata":{"source":"docs/runbooks/shopify_dry_run_checklist.md","lastModified":"2025-10-11T00:18:41.331Z"},"hash":"yB5ciXGCnQzeiHdF9PdHNwsrwVQsJHZbRiqlJ6XrdUc="},"NEXT":{"nodeId":"7ab8d75b-4bba-47fc-866c-b4882b3868f6","metadata":{},"hash":"NMiZVdWH/Rve2t5yDxVKUkvFQrHUz4mvQvUROfPfI+8="}},"text":"md`) | Support ↔ Enablement | Acknowledgment in `feedback/enablement.md` + Q&A template | Pending — include in T-24 facilitator sync |\n| 6 | Confirm participants can install/open OCC in staging (Shopify Admin → Apps → HotDash) | Support ↔ Product | Checklist note in `docs/runbooks/operator_training_agenda.md` + `feedback/support.md` | Pending — contingent on staging bundle |\n\n### T-12 Hours (2025-10-16 01:00 ET)\n| # | Task | Owner | Evidence / Artifact | Status |\n|---|------|-------|---------------------|--------|\n| 1 | Run `npm run ops:nightly-metrics` (data) and confirm Ops Pulse tile reflects latest seed | Data ↔ Support | Metrics output archived in `artifacts/ops/dry_run_2025-10-16/metrics/` | ☐ |\n| 2 | Spot-check CX Escalations modal with feature flags toggled (AI on/off) | Support | Screenshots saved to evidence folder | ☐ |\n| 3 | Verify Chatwoot sandbox conversations match scenario scripts | Support ↔ Enablement | Conversation IDs noted in `feedback/support.md` | ☐ |\n\n### Day-of Run (2025-10-16)\n#### Pre-Session (T-1h)\n- Launch staging OCC and verify login + tile load.\n- Confirm Zoom/recording setup + backup recorder.\n- Post quick reminder in `#occ-ops` with access tips and parking lot expectations.\n\n#### Live Session Duties\n- Facilitate per agenda (`docs/runbooks/operator_training_agenda.md`), watching timing.\n- Capture questions + blockers in `docs/runbooks/operator_training_qa_template.md` (tag owner + due date).\n- Log decision IDs, telemetry observations, and attendee quotes during each scenario.\n- Monitor feature flags + data freshness; flag anomalies immediately in chat.\n- Reference the rate-limit playbook if Shopify throttling occurs mid-session; capture evidence per checklist above.\n\n#### Immediate Post-Session (within 2h)\n1. Upload recordings, chat logs, screenshots, and decision log excerpts to `artifacts/ops/dry_run_2025-10-16/`.\n2. Publish Memory summary (`scope=\"ops\"`, `topic=\"dry_run_2025-10-16\"`) with success metrics + follow-ups.\n3. Update `feedback/support.md` (new dated section) summarizing outcomes, blockers, next steps.\n4. Notify product, enablement, and manager in # with Memory + artifact links.\n\n### Day +1 Follow-Through (2025-10-17)\n- Ensure action owners have tickets or tasks logged (Linear, internal channel threads, Feedback docs).\n- Update job aids/runbooks with confirmed changes from session feedback; request reviews as needed.\n- Coordinate with integrations on any Shopify credential or deploy adjustments identified.\n- Prep for production go-live checklist (`docs/deployment/production_go_live_checklist.md`) incorporating dry run learnings.\n\n### Evidence Staging Table\n| Evidence Item | Path (repo or artifact) | Prepared By | Status | Notes |\n| --- | --- | --- | --- | --- |\n| Supabase parity snapshot | `artifacts/monitoring/supabase-parity_2025-10-10T01-25-10Z.json` | Product | ✅ Ready | Attach to Linear/Memory when backlog lifts |\n| Synthetic smoke (`?mock=0`) response header | `artifacts/ops/dry_run_2025-10-16/mock0-smoke.png` (placeholder) | Reliability | ⏳ Awaiting green response | Replace placeholder once redeploy succeeds |\n| Curl transcript (`?mock=0`) | `artifacts/integrations/shopify/<date>/curl_mock0_<timestamp>.log` | Support | ⏳ Pending | Template staged; run immediately after DEPLOY-147 bundle |\n| Mock-mode modal screenshots | `artifacts/ops/dry_run_2025-10-16/screenshots/mock/` | QA | ✅ Ready | Swap with live-mode gallery post-QA sign-off |\n| Credential receipt log | `artifacts/integrations/shopify/2025-10-10/store-access.md` | Deployment | ⏳ Pending | Populate with invite recipients + timestamps |\n| Operator comms broadcast | `docs/marketing/launch_comms_packet.","textTemplate":"","startCharIdx":6826,"endCharIdx":10501,"metadataSeparator":"\n","type":"TEXT","hash":"6cnJ08ZzwwHovV34cavhDG8lkV8U9DITmCvToMoP+ZQ="},"7ab8d75b-4bba-47fc-866c-b4882b3868f6":{"id_":"7ab8d75b-4bba-47fc-866c-b4882b3868f6","metadata":{"source":"docs/runbooks/shopify_dry_run_checklist.md","lastModified":"2025-10-11T00:18:41.331Z"},"excludedEmbedMetadataKeys":[],"excludedLlmMetadataKeys":[],"relationships":{"SOURCE":{"nodeId":"docs/runbooks/shopify_dry_run_checklist.md","metadata":{"source":"docs/runbooks/shopify_dry_run_checklist.md","lastModified":"2025-10-11T00:18:41.331Z"},"hash":"jgRHqcNpXjPC2y/LXAmD8ajan2JXpgyQB6DLyekcD9I="},"PREVIOUS":{"nodeId":"81340641-b55f-4530-a90c-18e7ac50d2e3","metadata":{"source":"docs/runbooks/shopify_dry_run_checklist.md","lastModified":"2025-10-11T00:18:41.331Z"},"hash":"59of0FfBOEcl5gXY9LSTh/7jiYx6mb576QsHmn2CRoM="}},"text":"mock=0`) response header | `artifacts/ops/dry_run_2025-10-16/mock0-smoke.png` (placeholder) | Reliability | ⏳ Awaiting green response | Replace placeholder once redeploy succeeds |\n| Curl transcript (`?mock=0`) | `artifacts/integrations/shopify/<date>/curl_mock0_<timestamp>.log` | Support | ⏳ Pending | Template staged; run immediately after DEPLOY-147 bundle |\n| Mock-mode modal screenshots | `artifacts/ops/dry_run_2025-10-16/screenshots/mock/` | QA | ✅ Ready | Swap with live-mode gallery post-QA sign-off |\n| Credential receipt log | `artifacts/integrations/shopify/2025-10-10/store-access.md` | Deployment | ⏳ Pending | Populate with invite recipients + timestamps |\n| Operator comms broadcast | `docs/marketing/launch_comms_packet.md` §2B | Support ↔ Marketing | ✅ Template staged | Send once evidence table shows all ✅ |\n\n## Evidence & Logging Requirements\n- Store all media + logs under `artifacts/ops/dry_run_2025-10-16/` (screenshots, recordings, metrics, decision IDs).\n- Maintain chronological entries in `feedback/support.md`; mirror cross-team dependencies in `feedback/enablement.md`, `feedback/product.md`, `feedback/integrations.md`, and `feedback/reliability.md` as applicable.\n- Reference this checklist in post-run communications to demonstrate completion and highlight outstanding items.\n\n## Risk & Escalation Triggers\n- **Credentials:** Any missing Shopify/Chatwoot/Supabase credential ≤24h before session → escalate to deployment + manager.\n- **Data parity:** Nightly metrics or seeded conversations unavailable by T-12h → notify data/reliability; prepare mocked walkthrough fallback.\n- **Feature drift:** UI deviations from runbooks/job aids → capture screenshots, alert product, and document in Q&A + feedback logs.\n\n## Change Log\n| Date | Author | Change |\n|------|--------|--------|\n| 2025-10-10 | support | Added support inbox contact and QA evidence refresh trigger section |\n| 2025-10-12 | support | Documented Chatwoot Fly cut-over prep and T-48 task alignment with reliability |\n| 2025-10-10 | support | Drafted initial checklist to resume dry run prep work per manager direction |\n| 2025-10-10 | support | Added rate-limit playbook references and facilitator briefing task |\n| 2025-10-10 | support | Added evidence staging table to align artifacts ahead of staging access rollout |","textTemplate":"","startCharIdx":9763,"endCharIdx":12078,"metadataSeparator":"\n","type":"TEXT","hash":"ef5vcyujnKOoNvWwvhmmzt66byexu/ahwdVCNsZL0E0="},"c6e2724d-108d-4535-8940-97f4e3843d7f":{"id_":"c6e2724d-108d-4535-8940-97f4e3843d7f","metadata":{"source":"docs/runbooks/shopify_embed_capture.md","lastModified":"2025-10-11T02:09:15.911Z"},"excludedEmbedMetadataKeys":[],"excludedLlmMetadataKeys":[],"relationships":{"SOURCE":{"nodeId":"docs/runbooks/shopify_embed_capture.md","metadata":{"source":"docs/runbooks/shopify_embed_capture.md","lastModified":"2025-10-11T02:09:15.911Z"},"hash":"WfYhFwL96x8ca9arZBxciToInujGsEv9jVswqJpM7po="},"NEXT":{"nodeId":"3d72170d-2170-4960-808b-3bccc972a5a7","metadata":{},"hash":"B67KdqbIhMen7ss3uAL0snS5DidrII2JdwSADQFpOgE="}},"text":"# Shopify Embed Token Capture (Staging) [Deprecated]\n\nNote: Under the current React Router 7 + Shopify CLI v3 development flow, manual embed/session token capture is not required. Prefer `shopify app dev` and the helper docs in docs/dev/appreact.md, docs/dev/authshop.md, and docs/dev/session-storage.md. Retain this document only for historical reference or emergency workflows.\n\nNote: Under the current React Router 7 + Shopify CLI v3 development flow, manual embed/session token capture is not required. Prefer `shopify app dev` and the helper docs in docs/dev/appreact.md, docs/dev/authshop.md, and docs/dev/session-storage.md. Retain this document only for historical reference or emergency workflows.\n\n**Last updated:** 2025-10-12T18:30Z  \n**Owner:** Reliability (escrow with Deployment)  \n**Scope:** Enables localization/design to capture staging modal screenshots by providing an approved path for Shopify embed tokens.\n\n---\n\n## Preconditions\n- Shopify CLI 3.x installed and authenticated (`shopify login --store hotroddash.myshopify.com`).\n- Dev store configured in `shopify.app.toml` (`[build].dev_store_url = \"hotroddash.myshopify.com\"`).\n- App deployed or running locally via `shopify app dev`; confirm the embedded app loads inside the staging store Admin.\n- Fly staging host is warm: `https://hotdash-stag{{ABBREV_0}}fly.dev/app`.\n\n## Host Parameter\nShopify embedded apps require the `host` query parameter (base64-encoded admin path):\n\n- Plaintext: `admin.shopify.com/store/hotrodddash/apps/4f72376ea61be956c860dd020552124d`\n- Encoded (no padding, already URL-safe):\n\n```\nYWRtaW4uc2hvcGlmeS5jb20vc3RvcmUvaG90ZGFzaC1zdGFnaW5nL2FwcHMvNGY3MjM3NmVhNjFiZTk1NmM4NjBkZDAyMDU1MjEyNGQ=\n```\n\nReference this value in any manual launches:\n\n```\nHOST_PARAM=YWRtaW4uc2hvcGlmeS5jb20vc3RvcmUvaG90cm9kZGFzaC9hcHBzLzRmNzIzNzZlYTYxYmU5NTZjODYwZGQwMjA1NTIxMjRk\nhttps://hotdash-stag{{ABBREV_1}}fly.dev/app?embedded=1&mock=1&host=${HOST_PARAM}\n```\n\n## Capturing a Session (Embed) Token\n1. Authenticate with Shopify CLI if needed:\n   ```bash\n   shopify login --store hotroddash.myshopify.com\n   ```\n2. Run or tunnel the app so it is accessible inside Admin (for local development):\n   ```bash\n   shopify app dev --store hotroddash.myshopify.com\n   ```\n   Keep this command running; it updates the app URLs and opens the embedded app in Admin automatically.\n3. In the Shopify Admin tab that opens (or visit `https://admin.shopify.com/store/hotrodddash/apps/hotdash`), wait for the embedded app to load.\n4. In the left navigation, open **Session token tool** (`/app/tools/session-token`).\n5. Click **Refresh now** if a token isn’t already displayed, then use **Copy token**. The tool auto-refreshes tokens before they expire and surfaces decoded claims so you can confirm the token is valid.\n6. Store the token temporarily in a secure editor (never commit to Git). Tokens expire quickly—capture screenshots or run tests within 60 seconds.\n\n## Using the Token Outside Admin\nYou can render the embedded app (for screenshots or automated runs) by including both the `host` parameter and the bearer token:\n\n```\ncurl --silent \\\n  -H \"Authorization: Bearer ${SESSION_TOKEN}\" \\\n  \"https://hotdash-stag{{ABBREV_2}}fly.dev/app?embedded=1&mock=1&host=${HOST_PARAM}\"\n```\n\n- Swap `mock=1` with `mock=0` for live data once staging returns 200.\n- For browser sessions (e.g., Playwright), inject the token as a `Authorization: Bearer` header or use Playwright’s `extraHTTPHeaders`.","textTemplate":"","metadataSeparator":"\n","type":"TEXT","hash":"og6UNk8CHS0l3ZQo30BIZrPgkreG57uOj0fvPYwSHLU="},"3d72170d-2170-4960-808b-3bccc972a5a7":{"id_":"3d72170d-2170-4960-808b-3bccc972a5a7","metadata":{"source":"docs/runbooks/shopify_embed_capture.md","lastModified":"2025-10-11T02:09:15.911Z"},"excludedEmbedMetadataKeys":[],"excludedLlmMetadataKeys":[],"relationships":{"SOURCE":{"nodeId":"docs/runbooks/shopify_embed_capture.md","metadata":{"source":"docs/runbooks/shopify_embed_capture.md","lastModified":"2025-10-11T02:09:15.911Z"},"hash":"WfYhFwL96x8ca9arZBxciToInujGsEv9jVswqJpM7po="},"PREVIOUS":{"nodeId":"c6e2724d-108d-4535-8940-97f4e3843d7f","metadata":{"source":"docs/runbooks/shopify_embed_capture.md","lastModified":"2025-10-11T02:09:15.911Z"},"hash":"og6UNk8CHS0l3ZQo30BIZrPgkreG57uOj0fvPYwSHLU="}},"text":"The tool auto-refreshes tokens before they expire and surfaces decoded claims so you can confirm the token is valid.\n6. Store the token temporarily in a secure editor (never commit to Git). Tokens expire quickly—capture screenshots or run tests within 60 seconds.\n\n## Using the Token Outside Admin\nYou can render the embedded app (for screenshots or automated runs) by including both the `host` parameter and the bearer token:\n\n```\ncurl --silent \\\n  -H \"Authorization: Bearer ${SESSION_TOKEN}\" \\\n  \"https://hotdash-stag{{ABBREV_2}}fly.dev/app?embedded=1&mock=1&host=${HOST_PARAM}\"\n```\n\n- Swap `mock=1` with `mock=0` for live data once staging returns 200.\n- For browser sessions (e.g., Playwright), inject the token as a `Authorization: Bearer` header or use Playwright’s `extraHTTPHeaders`.\n\n## Playwright Pipeline Injection Plan\n- **Storage:** Reliability will escrow the latest token in `vault/occ/shopify/embed_token_staging.env` and mirror to GitHub secret `SHOPIFY_EMBED_TOKEN_STAGING` (staging environment). Deployment owns refresh + distribution once reliability posts the updated token.\n- **Environment wiring:** CI and local Playwright runs should export `PLAYWRIGHT_SHOPIFY_EMBED_TOKEN=${SHOPIFY_EMBED_TOKEN_STAGING}` alongside `PLAYWRIGHT_BASE_URL=https://hotdash-stag{{ABBREV_4}}fly.dev/app`. When running locally, source the vault file instead of the GitHub secret.\n- **Header injection:** Update Playwright configuration or fixtures to append `Authorization: Bearer ${PLAYWRIGHT_SHOPIFY_EMBED_TOKEN}` and the `host=${HOST_PARAM}` query parameter for every request under `https://hotdash-stag{{ABBREV_5}}fly.dev/app`.\n- **Utilities:** Leverage `tests/fixtures/shopify-admin` to centralize embedded navigation (`shopifyAdmin.goto`) so headers and host parameters propagate automatically when `PLAYWRIGHT_SHOPIFY_EMBED_TOKEN` / `PLAYWRIGHT_SHOPIFY_HOST_PARAM` are present.\n- **Rotation cadence:** Treat the embed token as ephemeral—refresh before every localization capture batch and document completion (timestamp + operator) in `feedback/localization.md`. Discard exported tokens immediately after use.\n- **Fallback shim:** If Shopify denies automated token issuance, coordinate with reliability to swap to an approved host proxy; update this runbook and Playwright fixtures accordingly.\n\n## Evidence Logging\n- Record the capture event (timestamp, who, purpose) in `feedback/localization.md` or `feedback/design.md`.\n- Tokens must not be shared in plain text—use password-protected storage or discard after run.\n\n## Incident Handling\n- If the session token tool fails to load, re-run `scripts/deploy/shopify-dev-mcp-staging-auth.sh` to refresh credentials, then reload Admin.\n- If `host` mismatches, ensure the encoded value exactly matches the string above (no whitespace).\n- Report persistent failures in `feedback/reliability.md` and ping deployment for scope changes.\n\n---\n\n**Revision Log**\n- 2025-10-10: Initial guidance published by Reliability to unblock localization screenshot workflow.*** End Patch","textTemplate":"","metadataSeparator":"\n","type":"TEXT","hash":"wbmWPqy0w/MrTR7GcJn4gFNZgPh0Jv3+ZQigKLhH8Us="},"8d33625f-2558-4b6b-8e44-aa4b372c96cb":{"id_":"8d33625f-2558-4b6b-8e44-aa4b372c96cb","metadata":{"source":"docs/runbooks/shopify_rate_limit_recovery.md","lastModified":"2025-10-11T00:18:41.331Z"},"excludedEmbedMetadataKeys":[],"excludedLlmMetadataKeys":[],"relationships":{"SOURCE":{"nodeId":"docs/runbooks/shopify_rate_limit_recovery.md","metadata":{"source":"docs/runbooks/shopify_rate_limit_recovery.md","lastModified":"2025-10-11T00:18:41.331Z"},"hash":"LnWhGNjM+AUQT0mxs6MZ798874QWSXoqTBXS3mj7FTI="},"NEXT":{"nodeId":"0abf89f0-6a67-4272-b013-5b753a0a19a1","metadata":{},"hash":"Hq5GsYdJ9a++RzDYzvIJG1BWT8EoA7Jc/WboK4ke0I8="}},"text":"---\nepoch: 2025.10.E1\ndoc: docs/runbooks/shopify_rate_limit_recovery.md\nowner: support\nlast_reviewed: 2025-10-10\ndoc_hash: TBD\nexpires: 2025-10-17\n---\n# Shopify Rate-Limit Recovery Playbook — Support\n\n## Purpose\nGive support a rapid response plan when the Operator Control Center hits Shopify's GraphQL rate limits. Pair this playbook with the enablement coaching snippets (`docs/enablement/job_aids/shopify_sync_rate_limit_coaching.md`) so operators receive calm, consistent guidance while we capture evidence and escalate appropriately.\n\n## Trigger\n- Dashboard surfaces the `API rate limit exceeded.` banner or tiles show stale `Last updated` timestamps during an operator interaction.\n- Support receives a report that metrics are not refreshing and retries have already begun.\n\n## Escalation Contacts\n| Purpose | Contact | Notes |\n|---------|---------|-------|\n| Reliability handoff | # `#occ-reliability` | Include request ID, throttle JSON, first banner timestamp |\n| Operator comms alignment | Support lead on duty | Confirm operator messaging + incident tracking |\n\n## Immediate Response (First Banner)\n1. **Acknowledge:** Reassure the operator using the coaching script. Remind them that retries occur automatically (15s, 30s, 60s backoff).\n2. **Verify Shopify status:** Check `https://status.shopify.com` for active incidents.\n3. **Capture headers:** Open the OCC debug drawer (`Cmd/Ctrl` + `.`) and note:\n   - `X-Request-ID`\n   - GraphQL cost header (`X-GraphQL-Cost.requestedCost`, `.actualCost`, `.throttleStatus.currentlyAvailable`, `.throttleStatus.maximumAvailable`)\n4. **Record context:** Document tile(s) affected and the current `Last updated` timestamp.\n5. **Wait for automatic retry:** Allow up to 60 seconds. If the banner clears and timestamps advance, log the recovery and close the loop.\n\n## Escalation Path (Banner Persists After 2 Retries)\n1. Inform the operator using the escalation snippet and advise against manual refresh spam.\n2. Log an entry in `feedback/support.md` (timestamp, tiles, request ID, throttle values).\n3. Ping `#occ-reliability` with:\n   - Request ID and throttle JSON\n   - When the banner first appeared\n   - Whether retries advanced the `Last updated` timestamp\n4. Capture a screenshot of the banner + timestamp for evidence (store in `artifacts/support/incidents/<date>/`).\n5. Track follow-up in the operator Q&A template if the incident happened during a live session (`docs/runbooks/operator_training_qa_template.md`).\n\n## Reliability / Product Coordination\n- Reliability may rerun `npm run ops:retry-shopify-sync -- --scope all` after reviewing throttling.\n- Product/support should note duration of stale data and update decision logs or operator comms accordingly.\n- AI agent to log recommendation impact in `feedback/ai.md` if CX suggestions were skipped due to stale data.\n\n## Evidence Checklist\n- [ ] Shopify status page screenshot or confirmation (if incident present)\n- [ ] Debug drawer capture with request/throttle headers\n- [ ] Dashboard banner screenshot with timestamp\n- [ ] `feedback/support.md` entry + # permalink to `#occ-reliability`\n- [ ] Post-recovery note (time banner cleared, actions taken)\n\n## Reference Materials\n- Operator coaching snippets: `docs/enablement/job_aids/shopify_sync_rate_limit_coaching.md`\n- Operator training agenda staging steps: `docs/runbooks/operator_training_agenda.md`\n- Dry run prep checklist: `docs/runbooks/shopify_dry_run_checklist.md`\n- Integration readiness: `docs/integrations/shopify_readiness.md`\n- Restart cycle checklist: `docs/runbooks/restart_cycle_checklist.md`\n\n## Change Log\n| Date | Author | Change |\n|------|--------|--------|\n| 2025-10-10 | support | Initial playbook drafted to align with rate-limit coaching direction |\n| 2025-10-10 | support | Added Shopify staging install checklist for dry run prep |\n## Shopify Staging Install Checklist\n- [ ] Shopify Admin demo store credentials received (DEPLOY-147) with vault path + GitHub secret timestamp noted\n- [ ] Confirm OCC app install in staging store (Shopify Admin → Apps → HotDash) with `?","textTemplate":"","endCharIdx":4060,"metadataSeparator":"\n","type":"TEXT","hash":"fctG+KcJcWnXiCswjCg9knWqaZrlV3KJYPPTm2+A9Uk="},"0abf89f0-6a67-4272-b013-5b753a0a19a1":{"id_":"0abf89f0-6a67-4272-b013-5b753a0a19a1","metadata":{"source":"docs/runbooks/shopify_rate_limit_recovery.md","lastModified":"2025-10-11T00:18:41.331Z"},"excludedEmbedMetadataKeys":[],"excludedLlmMetadataKeys":[],"relationships":{"SOURCE":{"nodeId":"docs/runbooks/shopify_rate_limit_recovery.md","metadata":{"source":"docs/runbooks/shopify_rate_limit_recovery.md","lastModified":"2025-10-11T00:18:41.331Z"},"hash":"LnWhGNjM+AUQT0mxs6MZ798874QWSXoqTBXS3mj7FTI="},"PREVIOUS":{"nodeId":"8d33625f-2558-4b6b-8e44-aa4b372c96cb","metadata":{"source":"docs/runbooks/shopify_rate_limit_recovery.md","lastModified":"2025-10-11T00:18:41.331Z"},"hash":"w3Ne9Di0pOS2KUZjXawlI1maca/a1XeTuLOq8lgl4B8="}},"text":"md`\n- Dry run prep checklist: `docs/runbooks/shopify_dry_run_checklist.md`\n- Integration readiness: `docs/integrations/shopify_readiness.md`\n- Restart cycle checklist: `docs/runbooks/restart_cycle_checklist.md`\n\n## Change Log\n| Date | Author | Change |\n|------|--------|--------|\n| 2025-10-10 | support | Initial playbook drafted to align with rate-limit coaching direction |\n| 2025-10-10 | support | Added Shopify staging install checklist for dry run prep |\n## Shopify Staging Install Checklist\n- [ ] Shopify Admin demo store credentials received (DEPLOY-147) with vault path + GitHub secret timestamp noted\n- [ ] Confirm OCC app install in staging store (Shopify Admin → Apps → HotDash) with `?mock=1` param validated\n- [ ] Verify feature flags (`FEATURE_MODAL_APPROVALS`, `FEATURE_AI_ESCALATIONS`) enabled per dry run scenario plan\n- [ ] Supabase decision log access confirmed (service key/test query run)\n- [ ] Evidence stored in artifacts/ops/dry_run_2025-10-16/logs/","textTemplate":"","startCharIdx":3363,"endCharIdx":4336,"metadataSeparator":"\n","type":"TEXT","hash":"6OvEA03w0Iaaui7luE7dt8FMFbasIQs7Tw05XfudT3Q="},"6fa2ad13-da70-4f72-897e-ef56303734e2":{"id_":"6fa2ad13-da70-4f72-897e-ef56303734e2","metadata":{"source":"docs/runbooks/supabase_local.md","lastModified":"2025-10-11T00:18:41.387Z"},"excludedEmbedMetadataKeys":[],"excludedLlmMetadataKeys":[],"relationships":{"SOURCE":{"nodeId":"docs/runbooks/supabase_local.md","metadata":{"source":"docs/runbooks/supabase_local.md","lastModified":"2025-10-11T00:18:41.387Z"},"hash":"fYsgV+UxbT/hYAffGscF8RfNOyOmQiD5daRnzA694A0="}},"text":"---\nrunbook: Supabase Local Development\nowner: reliability\nlast_exercised: TBD\nnext_window: TBD\n---\n\n# Supabase Local Development Runbook\n\n## Overview\nWe run Supabase locally (Postgres, REST, Auth, Storage) via the Supabase CLI. This runbook covers bringing the stack up, exporting environment variables, tailing logs, and deploying the `occ-log` edge function used for observability.\n\n## Prerequisites\n- Supabase CLI (`npm install -g supabase`)\n- Docker running locally\n- Repository cloned and `.env.local` created from `.env.local.example`\n\n## Startup\n```bash\nsupabase start\n```\nOutputs include connection strings and the path to the generated service keys. Services listen on:\n- Postgres: `postgresql://postgres:postgres@127.0.0.1:54322/postgres`\n- REST API: `http://127.0.0.1:54321`\n- Studio: `http://127.0.0.1:54323`\n\n## Environment\n1. Copy `.env.local.example` to `.env.local` and populate Shopify + OpenAI placeholders.\n2. Export the file before running commands:\n   ```bash\n   export $(grep -v '^#' .env.local | xargs)\n   ```\n3. Verify Prisma can connect:\n   ```bash\n   npm run setup\n   ```\n\n## Logs\nUse the helper script to stream local events:\n```bash\nscripts/ops/tail-supabase-logs.sh\n```\nPass a remote project ref to target a hosted project:\n```bash\nscripts/ops/tail-supabase-logs.sh abcd1234\n```\n\n## Observability Edge Function\nThe `occ-log` edge function centralises structured logs.\n\n1. Create the backing table:\n   ```bash\n   psql \"$DATABASE_URL\" -f supabase/sql/observability_logs.sql\n   ```\n2. Serve locally:\n   ```bash\n   supabase functions serve occ-log --env-file .env.local\n   ```\n3. Deploy remotely:\n   ```bash\n   supabase functions deploy occ-log --project-ref <project-ref>\n   supabase secrets set --project-ref <project-ref> SUPABASE_SERVICE_ROLE_KEY=<service-role-key>\n   ```\n4. Smoke test:\n   ```bash\n   curl -X POST \"https://<project>.functions.supabase.co/occ-log\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{\"level\":\"INFO\",\"message\":\"local smoke\",\"metadata\":{\"source\":\"runbook\"}}'\n   ```\n\n## Shutdown\n```bash\nsupabase stop\n```\nThis halts the containers but keeps your data volumes. Use `supabase db reset` only for clean-room scenarios.\n\n## Evidence\n- Capture CLI output, screenshots (Studio, logs), and curl responses in `feedback/reliability.md` or `feedback/data.md` depending on the task.\n- Reference this runbook ID when noting playback in stand-ups or direction updates.","textTemplate":"","endCharIdx":2418,"metadataSeparator":"\n","type":"TEXT","hash":"vPzLKV/SWO27X4JXX4j++I8JWfWyY4V0woZGjqqG+M8="},"2781a6c3-1779-4156-a112-fff9daf2c865":{"id_":"2781a6c3-1779-4156-a112-fff9daf2c865","metadata":{"source":"docs/runbooks/supabase_staging_secret_handoff.md","lastModified":"2025-10-11T00:18:41.331Z"},"excludedEmbedMetadataKeys":[],"excludedLlmMetadataKeys":[],"relationships":{"SOURCE":{"nodeId":"docs/runbooks/supabase_staging_secret_handoff.md","metadata":{"source":"docs/runbooks/supabase_staging_secret_handoff.md","lastModified":"2025-10-11T00:18:41.331Z"},"hash":"UXYbOlkD9pZlxYMPwDoLXKfumJsvLx/9DtVwo9pOM7o="}},"text":"---\nepoch: 2025.10.E1\ndoc: docs/runbooks/supabase_staging_secret_handoff.md\nowner: ai\nlast_reviewed: 2025-10-10\ndoc_hash: TBD\nexpires: 2025-10-17\n---\n# Supabase Staging Secret Handoff Checklist\n\n## Purpose\n- Document the exact credentials reliability must provide so AI decision logging can move off the in-memory fallback ahead of the Shopify staging push.\n- Give deployment a single reference for loading GitHub environment secrets and engineers a template for populating local `.env` files without guesswork.\n\n## Required Secrets\n| Variable | Environment | Owner | Notes |\n| --- | --- | --- | --- |\n| `SUPABASE_URL` | Local development / CI | Reliability → AI | Staging project URL (e.g., `https://<project>.supabase.co`) with Row Level Security enabled. |\n| `SUPABASE_SERVICE_KEY` | Local development / CI | Reliability → AI | Service role key scoped to `decision_log` and `facts` tables. Store in `vault/occ/supabase/service_key_staging.env` and mirror into local `.env`. |\n| `SUPABASE_URL_STAGING` | GitHub `staging` environment | Reliability → Deployment | Optional alias if staging differs from dev; reuse `SUPABASE_URL` if identical. |\n| `SUPABASE_SERVICE_KEY_STAGING` | GitHub `staging` environment | Reliability → Deployment | Service role key for staging deploys; follow 90-day rotation cadence per `docs/runbooks/secret_rotation.md`. |\n\n## Delivery Steps\n1. Reliability exports the staging Supabase URL + service key and attaches them to the secure vault item (`AI/OCC Staging — Supabase`).\n2. Deployment loads the values into the GitHub `staging` environment and runs `node scripts/ci/check-supabase.mjs`, attaching output to `feedback/deployment.md`.\n3. AI agent updates local `.env` and reruns `npm run ai:regression` plus Supabase parity checks to confirm persistence.\n4. Reliability logs completion (timestamp + owner) in `feedback/reliability.md`; AI mirrors status in `feedback/ai.md` and `feedback/manager.md`.\n\n## Verification Notes\n- After secrets land, run `npx vitest run tests/unit/supabase.config.spec.ts` to confirm config resolution.\n- Trigger `npm run ai:regression` and ensure future artifacts note Supabase storage once telemetry wiring completes.\n- Capture a sample decision log entry via the CX Escalations modal and confirm persistence in the Supabase console.\n\n## Open Questions\n- Should QA receive a distinct service role key for automated regression versus operator dry run usage?\n- Do we want a dedicated schema (e.g., `ai_memory`) before production to simplify rotation and access control?\n- Who owns the rotation calendar entry once secrets are delivered (reliability vs manager)?","textTemplate":"","endCharIdx":2621,"metadataSeparator":"\n","type":"TEXT","hash":"1Rbrzy9s29xnGe+fjbqVBH3my9BXZHl6UEkx2zurEZU="},"ee1c9c02-4571-47bd-8281-064c5e14a0cc":{"id_":"ee1c9c02-4571-47bd-8281-064c5e14a0cc","metadata":{"source":"docs/runbooks/support_gold_replies.md","lastModified":"2025-10-11T01:17:04.343Z"},"excludedEmbedMetadataKeys":[],"excludedLlmMetadataKeys":[],"relationships":{"SOURCE":{"nodeId":"docs/runbooks/support_gold_replies.md","metadata":{"source":"docs/runbooks/support_gold_replies.md","lastModified":"2025-10-11T01:17:04.343Z"},"hash":"kKxLa7dNYU5OgQhwZrpCMZUJ8UorvhKuEOMISxSpSHQ="},"NEXT":{"nodeId":"460ef287-a8ef-439f-b67a-e2b805489ae5","metadata":{},"hash":"mVzqAXn4Hkxm3PWoEHEP8ovW6Uz0SZZnyC1MeX67vJg="}},"text":"---\nepoch: 2025.10.E1\ndoc: docs/runbooks/support_gold_replies.md\nowner: support\nlast_reviewed: 2025-10-11\ndoc_hash: TBD\nexpires: 2025-10-25\n---\n# Support Gold Replies — Approval & Storage Runbook\n\n## Purpose\nDefine the approval workflow and storage schema for curating high-quality support reply templates based on successful operator responses in Chatwoot. Gold replies serve as training data for AI suggestions and template library expansion.\n\n**Support Inbox:** customer.support@hotrodan.com — route approval requests and quality reviews through this address.\n\n## Canonical References\n- `docs/directions/support.md` — current sprint focus and gold reply workflow requirements\n- `docs/data/data_contracts.md` — Supabase schema definitions and JSON structures\n- `app/routes/actions/chatwoot.escalate.ts` — current approval workflow implementation\n- `app/services/chatwoot/escalations.ts` — template selection and rendering logic\n- `docs/runbooks/cx_escalations.md` — operator workflow for reply approval\n\n---\n\n## Gold Reply Schema Definition\n\n### Supabase Table: `gold_replies`\n\n**Proposed Schema** (to be coordinated with Data team):\n```sql\nCREATE TABLE gold_replies (\n  id SERIAL PRIMARY KEY,\n  shop_domain VARCHAR(255) NOT NULL,\n  conversation_id INTEGER NOT NULL,\n  original_reply TEXT NOT NULL,\n  sanitized_reply TEXT NOT NULL,\n  category VARCHAR(50) NOT NULL,\n  tags TEXT[] DEFAULT '{}',\n  customer_issue_summary TEXT,\n  approval_status VARCHAR(20) DEFAULT 'pending',\n  approved_by VARCHAR(255),\n  approved_at TIMESTAMP,\n  quality_score INTEGER CHECK (quality_score >= 1 AND quality_score <= 5),\n  usage_count INTEGER DEFAULT 0,\n  metadata JSONB DEFAULT '{}',\n  evidence_url VARCHAR(500),\n  created_at TIMESTAMP DEFAULT now(),\n  updated_at TIMESTAMP DEFAULT now(),\n  \n  INDEX idx_gold_replies_shop_domain (shop_domain),\n  INDEX idx_gold_replies_category (category),\n  INDEX idx_gold_replies_status (approval_status),\n  INDEX idx_gold_replies_created_at (created_at)\n);\n```\n\n### JSON Metadata Structure\n\n**Standard metadata payload**:\n```json\n{\n  \"sourceTemplate\": \"ack_delay\",\n  \"customerContext\": {\n    \"issueType\": \"shipping_delay\",\n    \"orderValue\": 125.50,\n    \"customerTier\": \"regular\"\n  },\n  \"replyMetrics\": {\n    \"responseTimeMinutes\": 12,\n    \"customerSatisfactionScore\": 5,\n    \"followUpRequired\": false\n  },\n  \"sanitizationChanges\": [\n    {\n      \"field\": \"customerName\",\n      \"original\": \"John Doe\",\n      \"sanitized\": \"{{customerName}}\"\n    },\n    {\n      \"field\": \"orderNumber\",\n      \"original\": \"PWA-4092\",\n      \"sanitized\": \"{{orderNumber}}\"\n    }\n  ],\n  \"reviewedAt\": \"2025-10-11T12:00:00Z\",\n  \"reviewedBy\": \"support@hotrodan.com\"\n}\n```\n\n---\n\n## Approval Workflow Process\n\n### 1. Identification Phase\n\n**Trigger Events:**\n- Operator approves reply via CX Escalations modal (`chatwoot.approve_send` action)\n- Customer responds positively within 24 hours of reply\n- Quality metrics exceed threshold (response time < 30 min, no follow-up escalation)\n\n**Auto-flagging Criteria:**\n```typescript\ninterface GoldReplyCandidate {\n  conversationId: number;\n  replyBody: string;\n  customerResponseTime: number; // minutes until customer reply\n  customerSentiment: \"positive\" | \"neutral\" | \"negative\";\n  noEscalationWithin24h: boolean;\n  operatorNote?: string;\n}\n```\n\n### 2. Content Sanitization\n\n**Required Sanitization Steps:**\n1. **PII Removal**: Replace customer names, emails, phone numbers with template variables\n2. **Order Data**: Replace order numbers, SKUs, amounts with generic placeholders\n3. **Company Data**: Replace internal references, agent names, system IDs\n4. **Standardization**: Normalize greeting/closing patterns, fix typos\n\n**Sanitization Examples:**\n```markdown\n**Original**: \"Hi John, I see your order PWA-4092 for $125.50 is delayed. Let me check with our UPS contact immediately.\"\n\n**Sanitized**: \"Hi {{customerName}}, I see your order {{orderNumber}} for {{orderAmount}} is delayed. Let me check with our carrier contact immediately.\"\n```\n\n### 3.","textTemplate":"","endCharIdx":3989,"metadataSeparator":"\n","type":"TEXT","hash":"BGYjgnOsau/5SQtydg/HOqtfqMnydS9l/LoRpfGtrp4="},"460ef287-a8ef-439f-b67a-e2b805489ae5":{"id_":"460ef287-a8ef-439f-b67a-e2b805489ae5","metadata":{"source":"docs/runbooks/support_gold_replies.md","lastModified":"2025-10-11T01:17:04.343Z"},"excludedEmbedMetadataKeys":[],"excludedLlmMetadataKeys":[],"relationships":{"SOURCE":{"nodeId":"docs/runbooks/support_gold_replies.md","metadata":{"source":"docs/runbooks/support_gold_replies.md","lastModified":"2025-10-11T01:17:04.343Z"},"hash":"kKxLa7dNYU5OgQhwZrpCMZUJ8UorvhKuEOMISxSpSHQ="},"PREVIOUS":{"nodeId":"ee1c9c02-4571-47bd-8281-064c5e14a0cc","metadata":{"source":"docs/runbooks/support_gold_replies.md","lastModified":"2025-10-11T01:17:04.343Z"},"hash":"9LRni+SbyGWef3BFdt5nX4dZMaP3WZ4QQjM0wdJGIX8="},"NEXT":{"nodeId":"65415104-3147-4fc0-9c15-25a1289d91af","metadata":{},"hash":"rBKg5vys6CJ3GwEItqzFdWAewTHt6cbDA1z/1WbNPfw="}},"text":": string;\n}\n```\n\n### 2. Content Sanitization\n\n**Required Sanitization Steps:**\n1. **PII Removal**: Replace customer names, emails, phone numbers with template variables\n2. **Order Data**: Replace order numbers, SKUs, amounts with generic placeholders\n3. **Company Data**: Replace internal references, agent names, system IDs\n4. **Standardization**: Normalize greeting/closing patterns, fix typos\n\n**Sanitization Examples:**\n```markdown\n**Original**: \"Hi John, I see your order PWA-4092 for $125.50 is delayed. Let me check with our UPS contact immediately.\"\n\n**Sanitized**: \"Hi {{customerName}}, I see your order {{orderNumber}} for {{orderAmount}} is delayed. Let me check with our carrier contact immediately.\"\n```\n\n### 3. Quality Review Checklist\n\n**Approval Criteria** (all must be met):\n- [ ] **Tone**: Professional, empathetic, solution-oriented\n- [ ] **Clarity**: Easy to understand, no jargon or ambiguous language\n- [ ] **Actionability**: Clear next steps or timeline provided to customer\n- [ ] **Completeness**: Addresses customer's specific concern fully\n- [ ] **Template-ready**: Variables properly substituted, reusable structure\n\n**Quality Scoring** (1-5 scale):\n- **5 (Excellent)**: Perfect template, immediate reuse recommended\n- **4 (Good)**: Minor tweaks needed, approved with notes\n- **3 (Fair)**: Moderate revision required before approval\n- **2 (Poor)**: Significant issues, reject with feedback\n- **1 (Unacceptable)**: Does not meet quality standards\n\n### 4. Category Classification\n\n**Standard Categories:**\n- `shipping_delay` — Delivery timeline issues, tracking problems\n- `product_inquiry` — Size, specifications, availability questions\n- `return_refund` — Return process, refund requests, exchanges\n- `order_modification` — Address changes, order updates, cancellations  \n- `technical_support` — Website issues, account problems, app troubleshooting\n- `general_inquiry` — Miscellaneous questions, company policies\n\n**Tagging System:**\n- Primary tag: Category (required)\n- Secondary tags: `urgent`, `high_value_customer`, `complex_issue`, `ai_ready`, `requires_followup`\n\n---\n\n## Webhook Integration\n\n### Submission Endpoint\n\n**Webhook URL**: `POST /api/webhooks/gold-replies`\n**Authentication**: Bearer token (shared with Integrations-Chatwoot team)\n\n**Request Payload**:\n```json\n{\n  \"conversationId\": 12345,\n  \"shopDomain\": \"example.myshopify.com\",\n  \"originalReply\": \"Hi John, I see your order PWA-4092...\",\n  \"category\": \"shipping_delay\",\n  \"customerContext\": {\n    \"issueType\": \"shipping_delay\",\n    \"orderValue\": 125.50\n  },\n  \"qualityMetrics\": {\n    \"responseTimeMinutes\": 12,\n    \"customerSatisfactionScore\": 5\n  },\n  \"submittedBy\": \"operator@hotrodan.com\",\n  \"evidenceUrl\": \"https://chatwoot.com/conversations/12345\"\n}\n```\n\n**Response Format**:\n```json\n{\n  \"success\": true,\n  \"goldReplyId\": 789,\n  \"status\": \"pending_review\",\n  \"message\": \"Gold reply submitted for review\",\n  \"reviewUrl\": \"https://hotdash-stag{{ABBREV_0}}fly.dev/admin/gold-replies/789\"\n}\n```\n\n### Error Handling\n\n**Common Error Responses:**\n- `400 Bad Request`: Missing required fields or invalid payload\n- `401 Unauthorized`: Invalid or missing bearer token  \n- `409 Conflict`: Gold reply already exists for this conversation\n- `500 Internal Server Error`: Database or processing error\n\n**Retry Logic**: \n- 3 retry attempts with exponential backoff\n- Log failures to `feedback/integrations.md`\n- Escalate persistent failures to manager within 2 hours\n\n---\n\n## Sample Approved Gold Reply\n\n### Example Entry\n\n**Category**: `shipping_delay`\n**Quality Score**: 5\n**Original Reply**: \"Hi Sarah, thanks for reaching out about your order PWA-4098. I can see it's been sitting with our carrier for 2 days. I've just escalated this with UPS and they've promised an update within 3 hours. I'll email you directly once I hear back with a concrete delivery timeline. Thanks for your patience!\"\n\n**Sanitized Reply**: \"Hi {{customerName}}, thanks for reaching out about your order {{orderNumber}}. I can see it's been sitting with our carrier for {{delayDays}} days.","textTemplate":"","metadataSeparator":"\n","type":"TEXT","hash":"ABtJMkdp5nKiXDBvoSOP0D8318A6mM/5DLtbZl1jkfM="},"65415104-3147-4fc0-9c15-25a1289d91af":{"id_":"65415104-3147-4fc0-9c15-25a1289d91af","metadata":{"source":"docs/runbooks/support_gold_replies.md","lastModified":"2025-10-11T01:17:04.343Z"},"excludedEmbedMetadataKeys":[],"excludedLlmMetadataKeys":[],"relationships":{"SOURCE":{"nodeId":"docs/runbooks/support_gold_replies.md","metadata":{"source":"docs/runbooks/support_gold_replies.md","lastModified":"2025-10-11T01:17:04.343Z"},"hash":"kKxLa7dNYU5OgQhwZrpCMZUJ8UorvhKuEOMISxSpSHQ="},"PREVIOUS":{"nodeId":"460ef287-a8ef-439f-b67a-e2b805489ae5","metadata":{"source":"docs/runbooks/support_gold_replies.md","lastModified":"2025-10-11T01:17:04.343Z"},"hash":"mVzqAXn4Hkxm3PWoEHEP8ovW6Uz0SZZnyC1MeX67vJg="},"NEXT":{"nodeId":"37cf40ad-03c3-471d-84a3-6a01801b40f4","metadata":{},"hash":"KVjQw/9P0bKtwuT7WpmORKkvSkHRLnKuzZZJ/K1OgaQ="}},"text":"md`\n- Escalate persistent failures to manager within 2 hours\n\n---\n\n## Sample Approved Gold Reply\n\n### Example Entry\n\n**Category**: `shipping_delay`\n**Quality Score**: 5\n**Original Reply**: \"Hi Sarah, thanks for reaching out about your order PWA-4098. I can see it's been sitting with our carrier for 2 days. I've just escalated this with UPS and they've promised an update within 3 hours. I'll email you directly once I hear back with a concrete delivery timeline. Thanks for your patience!\"\n\n**Sanitized Reply**: \"Hi {{customerName}}, thanks for reaching out about your order {{orderNumber}}. I can see it's been sitting with our carrier for {{delayDays}} days. I've just escalated this with {{carrierName}} and they've promised an update within {{followUpHours}} hours. I'll email you directly once I hear back with a concrete delivery timeline. Thanks for your patience!\"\n\n**Template Variables**:\n- `{{customerName}}` — Customer's first name or \"there\"\n- `{{orderNumber}}` — Order reference number\n- `{{delayDays}}` — Number of days delayed\n- `{{carrierName}}` — Shipping carrier name\n- `{{followUpHours}}` — Response timeline commitment\n\n**Usage Notes**: \n- Best for shipping delays > 48 hours\n- Use when carrier relationship allows direct escalation\n- Follow up required within promised timeframe\n- Customer satisfaction: 95% positive response rate\n\n---\n\n## Administration & Maintenance\n\n### Weekly Review Process\n\n**Every Monday at 10:00 AM ET:**\n1. Review pending gold replies in Supabase admin dashboard\n2. Process quality scores and approval decisions\n3. Update template library with newly approved replies\n4. Archive low-usage gold replies (< 5 uses in 90 days)\n5. Log review statistics in `feedback/support.md`\n\n### Quality Metrics Tracking\n\n**Monthly KPIs:**\n- Gold reply submission rate (target: 5-10 per week)\n- Approval rate (target: 70-80% approved)\n- Template adoption rate (target: 80% of gold replies used in production)\n- Customer satisfaction correlation (track before/after metrics)\n\n### Feedback Loop Integration\n\n**Data Sources:**\n- Chatwoot conversation analytics (response times, customer ratings)\n- DecisionLog analysis (`chatwoot.approve_send` patterns)\n- Operator feedback surveys and training session Q&A\n- Customer satisfaction scores from follow-up emails\n\n**Continuous Improvement:**\n- Monthly template effectiveness review with AI team\n- Quarterly sanitization process audit\n- Semi-annual category taxonomy refresh based on support trends\n\n---\n\n## Integration Dependencies\n\n**Data Team Coordination:**\n- [ ] Create `gold_replies` table in Supabase staging\n- [ ] Implement webhook endpoint with authentication\n- [ ] Set up admin dashboard for review workflow\n- [ ] Create analytics queries for quality tracking\n\n**Integrations-Chatwoot Team:**\n- [ ] Expose webhook endpoint for submission\n- [ ] Configure bearer token authentication\n- [ ] Implement retry logic for failed submissions\n- [ ] Test end-to-end gold reply submission flow\n\n**AI Team Integration:**\n- [ ] Connect gold replies to LlamaIndex training pipeline\n- [ ] Update suggestion algorithm to incorporate approved templates\n- [ ] Create feedback loop for AI suggestion quality scoring\n\n---\n\n## Troubleshooting\n\n### Common Issues\n\n**Gold reply not appearing in webhook:**\n1. Check DecisionLog for corresponding `chatwoot.approve_send` entry\n2. Verify conversation meets auto-flagging criteria\n3. Confirm webhook endpoint is reachable and authenticated\n4. Review Chatwoot integration logs for submission errors\n\n**Quality review bottleneck:**\n1. Check pending queue in Supabase admin dashboard\n2. Ensure weekly review process is being followed\n3. Consider expanding reviewer pool if volume exceeds capacity\n4. Escalate resource needs to manager if SLA breached\n\n**Template adoption issues:**\n1. Review gold reply category distribution vs actual support volume\n2. Validate template variables are properly substituting\n3. Survey operators on template usability and clarity\n4. Update sanitization process if templates lack flexibility\n\n---\n\n## Related Documentation\n\n- Template library: `app/services/chatwoot/templates.ts`\n- Decision logging: `app/services/decisions.server.ts`\n- Webhook implementation: `app/routes/api/webhooks/gold-replies.ts` (to be created)\n- Admin dashboard: `app/routes/admin/gold-replies.tsx` (to be created)\n- Analytics queries: `docs/data/gold_reply_analytics.","textTemplate":"","startCharIdx":6651,"endCharIdx":11028,"metadataSeparator":"\n","type":"TEXT","hash":"O6GHRMBgpyzGpYrkOpq5+7LIWdQLJpgFJGftwmMaEYk="},"37cf40ad-03c3-471d-84a3-6a01801b40f4":{"id_":"37cf40ad-03c3-471d-84a3-6a01801b40f4","metadata":{"source":"docs/runbooks/support_gold_replies.md","lastModified":"2025-10-11T01:17:04.343Z"},"excludedEmbedMetadataKeys":[],"excludedLlmMetadataKeys":[],"relationships":{"SOURCE":{"nodeId":"docs/runbooks/support_gold_replies.md","metadata":{"source":"docs/runbooks/support_gold_replies.md","lastModified":"2025-10-11T01:17:04.343Z"},"hash":"kKxLa7dNYU5OgQhwZrpCMZUJ8UorvhKuEOMISxSpSHQ="},"PREVIOUS":{"nodeId":"65415104-3147-4fc0-9c15-25a1289d91af","metadata":{"source":"docs/runbooks/support_gold_replies.md","lastModified":"2025-10-11T01:17:04.343Z"},"hash":"rBKg5vys6CJ3GwEItqzFdWAewTHt6cbDA1z/1WbNPfw="}},"text":"Check pending queue in Supabase admin dashboard\n2. Ensure weekly review process is being followed\n3. Consider expanding reviewer pool if volume exceeds capacity\n4. Escalate resource needs to manager if SLA breached\n\n**Template adoption issues:**\n1. Review gold reply category distribution vs actual support volume\n2. Validate template variables are properly substituting\n3. Survey operators on template usability and clarity\n4. Update sanitization process if templates lack flexibility\n\n---\n\n## Related Documentation\n\n- Template library: `app/services/chatwoot/templates.ts`\n- Decision logging: `app/services/decisions.server.ts`\n- Webhook implementation: `app/routes/api/webhooks/gold-replies.ts` (to be created)\n- Admin dashboard: `app/routes/admin/gold-replies.tsx` (to be created)\n- Analytics queries: `docs/data/gold_reply_analytics.sql` (to be created)\n\n---\n\n## Change Log\n\n| Date | Author | Change |\n|------|--------|--------|\n| 2025-10-11 | support | Initial runbook created per sprint task requirements |\n\n---\n\n## Next Steps\n\n- [ ] Coordinate with Data team on Supabase schema implementation\n- [ ] Partner with Integrations-Chatwoot on webhook endpoint development\n- [ ] Create sample webhook payload for testing\n- [ ] Draft operator training materials for gold reply submission workflow\n- [ ] Set up weekly review process and assign reviewers\n\n## Validation Dependencies\n\n- [ ] Schema approved by Data team and deployed to staging\n- [ ] Webhook endpoint tested with sample payloads\n- [ ] Admin dashboard available for review workflow\n- [ ] Integration testing completed with Chatwoot submission flow\n- [ ] Operator training completed and feedback incorporated","textTemplate":"","startCharIdx":10190,"endCharIdx":11859,"metadataSeparator":"\n","type":"TEXT","hash":"ZIyg0qLIGJTPUcl0FDTS0wW2qReWFEktNwVakD+GSQ0="},"9aa5049a-b233-4df3-8e1e-2a9bfcfc0f00":{"id_":"9aa5049a-b233-4df3-8e1e-2a9bfcfc0f00","metadata":{"source":"docs/runbooks/support_marketing_localization_sync.md","lastModified":"2025-10-09T01:10:45.017Z"},"excludedEmbedMetadataKeys":[],"excludedLlmMetadataKeys":[],"relationships":{"SOURCE":{"nodeId":"docs/runbooks/support_marketing_localization_sync.md","metadata":{"source":"docs/runbooks/support_marketing_localization_sync.md","lastModified":"2025-10-09T01:10:45.017Z"},"hash":"v/0RU1fXoEe0t5uYJEXV1GuWlooIHXpYCWlSsPnDl5E="},"NEXT":{"nodeId":"ba4c0d6f-0261-4b47-bc75-7ceb63ba24b1","metadata":{},"hash":"5elgGQNU8fGjZPlj09Spy/AU8D7UUeEbdbk+zuNqOg0="}},"text":"---\nepoch: 2025.10.E1\ndoc: docs/runbooks/support_marketing_localization_sync.md\nowner: support\nlast_reviewed: 2025-10-08\ndoc_hash: TBD\nexpires: 2025-10-21\n---\n# Support–Marketing Copy Alignment Playbook\n\n## Purpose\nKeep support coaching, enablement runbooks, and operator trainings aligned with the approved English copy deck. Ensure every customer-facing touchpoint (dashboard UI, Chatwoot replies, runbooks, job aids) uses the same terminology, tone, and guardrails.\n\n---\n\n## Canonical References\n- `docs/design/copy_deck.md` — Source of truth for Operator Control Center UI strings (English only)\n- `docs/design/visual_hierarchy_review.md` — Modal and tile layout references for enablement callouts\n- `docs/marketing/brand_tone_deck.md` — Tone and voice guidelines for operator communications\n- `app/services/chatwoot/templates.ts` — Production-ready Chatwoot macros used by support\n\n> Always reconcile runbook updates against the copy deck before shipping changes.\n\n---\n\n## English-Only Alignment Principles\n- **Single language:** All enablement materials, runbooks, and macros are delivered in English. Remove legacy French/localization references when encountered.\n- **Exact terminology:** Use the precise wording from the copy deck (e.g., \"Approve & Send Reply\", \"Decision logged to audit trail\"). Avoid ad-hoc synonyms.\n- **Tone consistency:** Mirror the action-oriented, empathetic tone captured in the brand tone deck and Chatwoot templates.\n- **Change traceability:** Capture deviations or copy requests in `feedback/enablement.md` with links to the impacted material.\n\n---\n\n## Audit Checklist (Runbooks & Trainings)\nRun this checklist whenever operator enablement content is updated:\n1. `docs/runbooks/*` — Remove bilingual strings, glossary tables, or translation queues. Replace with English terminology pulled from the copy deck.\n2. `docs/runbooks/operator_training_agenda.md` — Confirm references to dependencies mention English-only job aids and copy sources.\n3. `docs/runbooks/cx_escalations.md` and other tile guides — Verify button labels, toast text, and modal headings match the copy deck exactly.\n4. `docs/marketing/*` references — If pointing to retired localization requests, swap with current English artifacts or remove.\n5. Job aids and quick-start guides — Ensure image callouts and captions use approved English text.\n\nDocument any edits or questions in `feedback/enablement.md` so marketing/support can trace the audit.\n\n---\n\n## Chatwoot Template Alignment (English)\n1. Review each template in `app/services/chatwoot/templates.ts` against the copy deck language.\n2. Confirm tone matches the brand tone deck (professional, empathetic, action-oriented).\n3. Highlight mismatches in `feedback/enablement.md` with the template key and proposed revision.\n4. Once marketing approves, coordinate with engineering to ship updated macros and notify support trainers.\n\n**Callouts:**\n- `ack_delay`, `ship_update`, and `refund_offer` already align with the current tone. Use them as exemplars for new templates.\n- If operators suggest alternative phrasing, capture rationale and route through marketing before updating source material.\n\n---\n\n## Support ⇄ Marketing Coordination\n**Cadence:**\n- **Weekly (Wed):** 15-minute huddle to review copy deck diffs and upcoming launches.\n- **Ad-hoc:** Spin up when product ships new modals, tiles, or toasts that require enablement collateral.\n\n**Agenda Template:**\n1. Review copy deck changes since last sync.\n2. Surface enablement doc updates and confirm terminology.\n3. Share operator feedback gathered from trainings or pilots.\n4. Align on messaging for upcoming Sales Pulse/CX Escalations walkthroughs.\n5. Decide owners and due dates for copy revisions.\n\n**Evidence:** Log outcomes in Memory (`scope: ops`, `decision_type: support.copy_alignment`) and attach edited docs/job aids.\n\n---\n\n## Copy Change Workflow\n1. Draft proposed English copy update (context + desired change).\n2. File note in `feedback/enablement.md` with link to the source doc and copy snippet.\n3. Tag marketing owner for approval; include screenshots if UI text is involved.\n4. Once approved, update the relevant runbook/job aid and notify support trainers.\n5. Record the change in the artifact revision history (table at bottom of doc or commit message).","textTemplate":"","endCharIdx":4286,"metadataSeparator":"\n","type":"TEXT","hash":"UUzOpbbHPyPdIJr1Uhd28Nn70+YTaawKkoQXjmc7Dew="},"ba4c0d6f-0261-4b47-bc75-7ceb63ba24b1":{"id_":"ba4c0d6f-0261-4b47-bc75-7ceb63ba24b1","metadata":{"source":"docs/runbooks/support_marketing_localization_sync.md","lastModified":"2025-10-09T01:10:45.017Z"},"excludedEmbedMetadataKeys":[],"excludedLlmMetadataKeys":[],"relationships":{"SOURCE":{"nodeId":"docs/runbooks/support_marketing_localization_sync.md","metadata":{"source":"docs/runbooks/support_marketing_localization_sync.md","lastModified":"2025-10-09T01:10:45.017Z"},"hash":"v/0RU1fXoEe0t5uYJEXV1GuWlooIHXpYCWlSsPnDl5E="},"PREVIOUS":{"nodeId":"9aa5049a-b233-4df3-8e1e-2a9bfcfc0f00","metadata":{"source":"docs/runbooks/support_marketing_localization_sync.md","lastModified":"2025-10-09T01:10:45.017Z"},"hash":"6RLUPrNivGDGoD3nYF+xKJdb5nsv3QuxVQ++wmocqMk="}},"text":"Review copy deck changes since last sync.\n2. Surface enablement doc updates and confirm terminology.\n3. Share operator feedback gathered from trainings or pilots.\n4. Align on messaging for upcoming Sales Pulse/CX Escalations walkthroughs.\n5. Decide owners and due dates for copy revisions.\n\n**Evidence:** Log outcomes in Memory (`scope: ops`, `decision_type: support.copy_alignment`) and attach edited docs/job aids.\n\n---\n\n## Copy Change Workflow\n1. Draft proposed English copy update (context + desired change).\n2. File note in `feedback/enablement.md` with link to the source doc and copy snippet.\n3. Tag marketing owner for approval; include screenshots if UI text is involved.\n4. Once approved, update the relevant runbook/job aid and notify support trainers.\n5. Record the change in the artifact revision history (table at bottom of doc or commit message).\n\n---\n\n## Training Terminology Quick Reference (English)\n| UI Element | Approved Label | Usage in Training |\n|------------|----------------|-------------------|\n| CX Escalations tile CTA | View & Reply | Start operator walkthroughs here |\n| Modal approval button | Approve & Send Reply | Reinforce decision logging behavior |\n| Toast success | Reply sent to {customer} | Highlight confirmation of outbound message |\n| Audit trail entry | Decision logged to audit trail | Emphasize compliance recording |\n| Error toast | Action failed — please try again | Coach on retry + escalation path |\n\nUse these phrases exactly in live trainings, job aids, and knowledge base entries.\n\n---\n\n## Revision History\n| Date | Author | Change |\n|------|--------|--------|\n| 2025-10-08 | enablement | Converted runbook to English-only copy alignment playbook and removed localization workflows |\n| 2025-10-07 | support | Initial localization glossary and marketing sync protocol per manager sprint focus |","textTemplate":"","startCharIdx":3425,"endCharIdx":5272,"metadataSeparator":"\n","type":"TEXT","hash":"ruEMWruNGvRWr13ENqO6LoJ815f/JU4A8UwecvgtAow="}},"type":"simple_dict"}}}