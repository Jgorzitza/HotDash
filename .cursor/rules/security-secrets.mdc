---
alwaysApply: true
---

# Security & Secret Management

**Primary Reference**: [docs/ops/credential_index.md](mdc:docs/ops/credential_index.md)

## üîí SECRET HANDLING RULES

### NEVER Commit
- ‚ùå API keys
- ‚ùå Passwords
- ‚ùå Tokens (auth, API, access)
- ‚ùå Private keys
- ‚ùå Database credentials
- ‚ùå Service account keys

### ALWAYS Use
- ‚úÖ Environment variables: `process.env.SECRET_NAME`
- ‚úÖ Vault references: `vault/occ/{service}/{credential}.env`
- ‚úÖ GitHub Secrets: For CI/CD workflows
- ‚úÖ Placeholder values: `[REDACTED]` in documentation

## Secret Locations

**Vault Structure**: `vault/occ/{service}/{credential}.env`

Examples:
- `vault/occ/supabase/database_url_staging.env`
- `vault/occ/shopify/embed_token_staging.env`
- `vault/occ/openai/api_key_staging.env`
- `vault/occ/fly/api_token.env`

**File Permissions**: All vault files MUST be 600 (owner read/write only)

## Pre-Commit Secret Scan

**REQUIRED before every commit**:
```bash
git grep -i "api_key|secret|password|token|private_key" HEAD | grep -v "vault/"
```

**Automated**: Git hook runs gitleaks on every commit

**Expected**: No results (or only .env.example, vault/, docs with [REDACTED])

## Environment Variables

### .env.example (Template)
- ‚úÖ Commit to git (template only)
- ‚úÖ Use placeholder values: `SHOPIFY_API_KEY=`
- ‚úÖ Document all required variables

### .env.local (Actual Secrets)
- ‚ùå NEVER commit to git
- ‚úÖ Add to .gitignore
- ‚úÖ Source from vault when needed

## Secret Usage in Code

**CORRECT**:
```typescript
const apiKey = process.env.SHOPIFY_API_KEY;
if (!apiKey) throw new Error('SHOPIFY_API_KEY not set');
```

**WRONG**:
```typescript
const apiKey = '[REDACTED]'; // ‚ùå NEVER DO THIS
```

## Documentation

When documenting secrets:
- ‚úÖ Use `[REDACTED]` for actual values
- ‚úÖ Show structure: `eyJhbGc...` ‚Üí `[REDACTED]`
- ‚úÖ Reference vault path: "See vault/occ/shopify/api_key.env"

## CI/CD Secrets

GitHub Actions secrets:
- Managed via GitHub UI or API
- Referenced as: `${{ secrets.SECRET_NAME }}`
- Mirrored from vault by deployment agent
- Logged in credential_index.md

## If Secret Exposed

1. **STOP immediately**
2. Remove secret from code
3. Rotate the credential (generate new one)
4. Update vault with new credential
5. Update GitHub secrets if needed
6. Log incident in feedback file
7. Notify manager
