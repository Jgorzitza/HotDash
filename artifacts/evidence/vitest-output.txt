npm warn Unknown project config "auto-install-peers". This will stop working in the next major version of npm.
npm warn Unknown project config "shamefully-hoist". This will stop working in the next major version of npm.
npm warn Unknown project config "enable-pre-post-scripts". This will stop working in the next major version of npm.
<?xml version="1.0" encoding="UTF-8" ?>
{"numTotalTestSuites":25,"numPassedTestSuites":25,"numFailedTestSuites":0,"numPendingTestSuites":0,"numTotalTests":31,"numPassedTests":30,"numFailedTests":0,"numPendingTests":1,"numTodoTests":0,"snapshot":{"added":0,"failure":false,"filesAdded":0,"filesRemoved":0,"filesRemovedList":[],"filesUnmatched":0,"filesUpdated":0,"matched":0,"total":0,"unchecked":0,"uncheckedKeysByFile":[],"unmatched":0,"updated":0,"didUpdate":false},"startTime":1760147112340,"success":true,"testResults":[{"assertionResults":[{"ancestorTitles":["chatwoot escalate action"],"fullName":"chatwoot escalate action sends reply using template","status":"passed","title":"sends reply using template","duration":10.339537999999948,"failureMessages":[],"meta":{}}],"startTime":1760147114162,"endTime":1760147114172.3396,"status":"passed","message":"","name":"/home/justin/HotDash/hot-dash/tests/unit/chatwoot.action.spec.ts"},{"assertionResults":[{"ancestorTitles":["getEscalations"],"fullName":"getEscalations returns escalations when SLA breached","status":"passed","title":"returns escalations when SLA breached","duration":6.183193999999958,"failureMessages":[],"meta":{}},{"ancestorTitles":["getEscalations"],"fullName":"getEscalations selects ship_update template when shipping keywords detected","status":"passed","title":"selects ship_update template when shipping keywords detected","duration":0.9690519999999196,"failureMessages":[],"meta":{}},{"ancestorTitles":["getEscalations"],"fullName":"getEscalations selects refund_offer template when refund keywords detected","status":"passed","title":"selects refund_offer template when refund keywords detected","duration":0.9619979999999941,"failureMessages":[],"meta":{}},{"ancestorTitles":["getEscalations"],"fullName":"getEscalations selects ship_update template using expanded heuristics for delivery delays","status":"passed","title":"selects ship_update template using expanded heuristics for delivery delays","duration":0.7886780000001181,"failureMessages":[],"meta":{}},{"ancestorTitles":["getEscalations"],"fullName":"getEscalations falls back to ack_delay when no keywords match but text exists","status":"passed","title":"falls back to ack_delay when no keywords match but text exists","duration":1.8970509999999194,"failureMessages":[],"meta":{}},{"ancestorTitles":["getEscalations"],"fullName":"getEscalations uses tags when customer message is agent-only","status":"passed","title":"uses tags when customer message is agent-only","duration":0.9485299999998915,"failureMessages":[],"meta":{}}],"startTime":1760147114154,"endTime":1760147114165.9485,"status":"passed","message":"","name":"/home/justin/HotDash/hot-dash/tests/unit/chatwoot.escalations.spec.ts"},{"assertionResults":[{"ancestorTitles":["feature flag resolution"],"fullName":"feature flag resolution falls back to default when flag is not defined","status":"passed","title":"falls back to default when flag is not defined","duration":1.2613010000000031,"failureMessages":[],"meta":{}},{"ancestorTitles":["feature flag resolution"],"fullName":"feature flag resolution supports FEATURE_ prefix","status":"passed","title":"supports FEATURE_ prefix","duration":0.3247149999999692,"failureMessages":[],"meta":{}},{"ancestorTitles":["feature flag resolution"],"fullName":"feature flag resolution supports FEATURE_FLAG_ legacy prefix","status":"passed","title":"supports FEATURE_FLAG_ legacy prefix","duration":0.2165899999999965,"failureMessages":[],"meta":{}},{"ancestorTitles":["feature flag resolution"],"fullName":"feature flag resolution lists all known flags regardless of prefix","status":"passed","title":"lists all known flags regardless of prefix","duration":1.0112710000000789,"failureMessages":[],"meta":{}}],"startTime":1760147115285,"endTime":1760147115288.0112,"status":"passed","message":"","name":"/home/justin/HotDash/hot-dash/tests/unit/featureFlags.spec.ts"},{"assertionResults":[{"ancestorTitles":["GA ingest"],"fullName":"GA ingest produces anomalies with mock client","status":"passed","title":"produces anomalies with mock client","duration":2.4723260000000664,"failureMessages":[],"meta":{}}],"startTime":1760147115287,"endTime":1760147115289.4724,"status":"passed","message":"","name":"/home/justin/HotDash/hot-dash/tests/unit/ga.ingest.spec.ts"},{"assertionResults":[{"ancestorTitles":["placeholder vitest"],"fullName":"placeholder vitest exposes order fulfillments query string","status":"passed","title":"exposes order fulfillments query string","duration":1.055501999999933,"failureMessages":[],"meta":{}}],"startTime":1760147115344,"endTime":1760147115345.0554,"status":"passed","message":"","name":"/home/justin/HotDash/hot-dash/tests/unit/sample.spec.ts"},{"assertionResults":[{"ancestorTitles":["embeddedUrl"],"fullName":"embeddedUrl includes host, embedded, and mock parameters","status":"passed","title":"includes host, embedded, and mock parameters","duration":3.636257000000114,"failureMessages":[],"meta":{}}],"startTime":1760147117154,"endTime":1760147117157.6362,"status":"passed","message":"","name":"/home/justin/HotDash/hot-dash/tests/unit/shopify.admin.fixture.spec.ts"},{"assertionResults":[{"ancestorTitles":["getShopifyServiceContext"],"fullName":"getShopifyServiceContext returns context with wrapped admin client","status":"passed","title":"returns context with wrapped admin client","duration":6.941004000000021,"failureMessages":[],"meta":{}},{"ancestorTitles":["getShopifyServiceContext"],"fullName":"getShopifyServiceContext retries on retryable responses using exponential backoff with jitter","status":"passed","title":"retries on retryable responses using exponential backoff with jitter","duration":1.7004020000001674,"failureMessages":[],"meta":{}},{"ancestorTitles":["getShopifyServiceContext"],"fullName":"getShopifyServiceContext returns final response when retries exhausted","status":"passed","title":"returns final response when retries exhausted","duration":1.5726489999999558,"failureMessages":[],"meta":{}}],"startTime":1760147114089,"endTime":1760147114099.5728,"status":"passed","message":"","name":"/home/justin/HotDash/hot-dash/tests/unit/shopify.client.spec.ts"},{"assertionResults":[{"ancestorTitles":["getInventoryAlerts"],"fullName":"getInventoryAlerts returns inventory alerts below threshold","status":"passed","title":"returns inventory alerts below threshold","duration":7.677903000000015,"failureMessages":[],"meta":{}}],"startTime":1760147114162,"endTime":1760147114169.678,"status":"passed","message":"","name":"/home/justin/HotDash/hot-dash/tests/unit/shopify.inventory.spec.ts"},{"assertionResults":[{"ancestorTitles":["getSalesPulseSummary"],"fullName":"getSalesPulseSummary aggregates revenue and top SKUs","status":"passed","title":"aggregates revenue and top SKUs","duration":12.461815000000115,"failureMessages":[],"meta":{}}],"startTime":1760147114162,"endTime":1760147114174.462,"status":"passed","message":"","name":"/home/justin/HotDash/hot-dash/tests/unit/shopify.orders.spec.ts"},{"assertionResults":[{"ancestorTitles":["supabase config"],"fullName":"supabase config creates supabase-backed memory when credentials exist","status":"passed","title":"creates supabase-backed memory when credentials exist","duration":67.58234399999992,"failureMessages":[],"meta":{}},{"ancestorTitles":["supabase config"],"fullName":"supabase config falls back to in-memory implementation when credentials missing","status":"passed","title":"falls back to in-memory implementation when credentials missing","duration":16.149676,"failureMessages":[],"meta":{}}],"startTime":1760147114047,"endTime":1760147114131.1497,"status":"passed","message":"","name":"/home/justin/HotDash/hot-dash/tests/unit/supabase.config.spec.ts"},{"assertionResults":[{"ancestorTitles":["supabaseMemory putDecision"],"fullName":"supabaseMemory putDecision retries when Supabase insert returns retryable error and eventually succeeds","status":"passed","title":"retries when Supabase insert returns retryable error and eventually succeeds","duration":3.5393209999999726,"failureMessages":[],"meta":{}},{"ancestorTitles":["supabaseMemory putDecision"],"fullName":"supabaseMemory putDecision maps decision fields to Supabase column names","status":"passed","title":"maps decision fields to Supabase column names","duration":3.0025570000000243,"failureMessages":[],"meta":{}},{"ancestorTitles":["supabaseMemory putDecision"],"fullName":"supabaseMemory putDecision falls back to legacy schema when actor columns are missing","status":"passed","title":"falls back to legacy schema when actor columns are missing","duration":1.2221789999998691,"failureMessages":[],"meta":{}},{"ancestorTitles":["supabaseMemory putDecision"],"fullName":"supabaseMemory putDecision throws when Supabase insert keeps failing with retryable error beyond max attempts","status":"passed","title":"throws when Supabase insert keeps failing with retryable error beyond max attempts","duration":1.15218300000015,"failureMessages":[],"meta":{}},{"ancestorTitles":["supabaseMemory putDecision"],"fullName":"supabaseMemory putDecision throws immediately on non-retryable error","status":"passed","title":"throws immediately on non-retryable error","duration":0.5302309999999579,"failureMessages":[],"meta":{}},{"ancestorTitles":["supabaseMemory putDecision"],"fullName":"supabaseMemory putDecision retries when Supabase insert rejects with network error","status":"passed","title":"retries when Supabase insert rejects with network error","duration":0.6727280000000064,"failureMessages":[],"meta":{}},{"ancestorTitles":["supabaseMemory listDecisions"],"fullName":"supabaseMemory listDecisions returns mapped decision logs","status":"passed","title":"returns mapped decision logs","duration":2.640613999999914,"failureMessages":[],"meta":{}},{"ancestorTitles":["supabaseMemory listDecisions"],"fullName":"supabaseMemory listDecisions filters by scope when provided","status":"passed","title":"filters by scope when provided","duration":0.8639640000001236,"failureMessages":[],"meta":{}},{"ancestorTitles":["supabaseMemory listDecisions"],"fullName":"supabaseMemory listDecisions falls back to legacy table when DecisionLog is unavailable","status":"passed","title":"falls back to legacy table when DecisionLog is unavailable","duration":1.4664960000000065,"failureMessages":[],"meta":{}}],"startTime":1760147114096,"endTime":1760147114111.4666,"status":"passed","message":"","name":"/home/justin/HotDash/hot-dash/tests/unit/supabase.memory.spec.ts"},{"assertionResults":[{"ancestorTitles":["GA MCP contract — staging parity"],"fullName":"GA MCP contract — staging parity aligns GA facts between Supabase mirror and MCP live host","status":"skipped","title":"aligns GA facts between Supabase mirror and MCP live host","failureMessages":[],"meta":{}}],"startTime":1760147112340,"endTime":1760147112340,"status":"passed","message":"","name":"/home/justin/HotDash/hot-dash/tests/unit/contracts/ga_mcp.spec.ts"}]}
<testsuites name="vitest tests" tests="31" failures="0" errors="0" time="4.862">
    <testsuite name="tests/unit/chatwoot.action.spec.ts" timestamp="2025-10-11T01:45:17.263Z" hostname="Jdesktop" tests="1" failures="0" errors="0" skipped="0" time="0.011593803">
        <testcase classname="tests/unit/chatwoot.action.spec.ts" name="chatwoot escalate action &gt; sends reply using template" time="0.010339538">
        </testcase>
    </testsuite>
    <testsuite name="tests/unit/chatwoot.escalations.spec.ts" timestamp="2025-10-11T01:45:17.264Z" hostname="Jdesktop" tests="6" failures="0" errors="0" skipped="0" time="0.013017308">
        <testcase classname="tests/unit/chatwoot.escalations.spec.ts" name="getEscalations &gt; returns escalations when SLA breached" time="0.006183194">
        </testcase>
        <testcase classname="tests/unit/chatwoot.escalations.spec.ts" name="getEscalations &gt; selects ship_update template when shipping keywords detected" time="0.000969052">
        </testcase>
        <testcase classname="tests/unit/chatwoot.escalations.spec.ts" name="getEscalations &gt; selects refund_offer template when refund keywords detected" time="0.000961998">
        </testcase>
        <testcase classname="tests/unit/chatwoot.escalations.spec.ts" name="getEscalations &gt; selects ship_update template using expanded heuristics for delivery delays" time="0.000788678">
        </testcase>
        <testcase classname="tests/unit/chatwoot.escalations.spec.ts" name="getEscalations &gt; falls back to ack_delay when no keywords match but text exists" time="0.001897051">
        </testcase>
        <testcase classname="tests/unit/chatwoot.escalations.spec.ts" name="getEscalations &gt; uses tags when customer message is agent-only" time="0.00094853">
        </testcase>
    </testsuite>
    <testsuite name="tests/unit/featureFlags.spec.ts" timestamp="2025-10-11T01:45:17.265Z" hostname="Jdesktop" tests="4" failures="0" errors="0" skipped="0" time="0.003821751">
        <testcase classname="tests/unit/featureFlags.spec.ts" name="feature flag resolution &gt; falls back to default when flag is not defined" time="0.001261301">
        </testcase>
        <testcase classname="tests/unit/featureFlags.spec.ts" name="feature flag resolution &gt; supports FEATURE_ prefix" time="0.000324715">
        </testcase>
        <testcase classname="tests/unit/featureFlags.spec.ts" name="feature flag resolution &gt; supports FEATURE_FLAG_ legacy prefix" time="0.00021659">
        </testcase>
        <testcase classname="tests/unit/featureFlags.spec.ts" name="feature flag resolution &gt; lists all known flags regardless of prefix" time="0.001011271">
        </testcase>
    </testsuite>
    <testsuite name="tests/unit/ga.ingest.spec.ts" timestamp="2025-10-11T01:45:17.266Z" hostname="Jdesktop" tests="1" failures="0" errors="0" skipped="0" time="0.003356984">
        <testcase classname="tests/unit/ga.ingest.spec.ts" name="GA ingest &gt; produces anomalies with mock client" time="0.002472326">
        </testcase>
    </testsuite>
    <testsuite name="tests/unit/sample.spec.ts" timestamp="2025-10-11T01:45:17.266Z" hostname="Jdesktop" tests="1" failures="0" errors="0" skipped="0" time="0.001998903">
        <testcase classname="tests/unit/sample.spec.ts" name="placeholder vitest &gt; exposes order fulfillments query string" time="0.001055502">
        </testcase>
    </testsuite>
    <testsuite name="tests/unit/shopify.admin.fixture.spec.ts" timestamp="2025-10-11T01:45:17.266Z" hostname="Jdesktop" tests="1" failures="0" errors="0" skipped="0" time="0.004632908">
        <testcase classname="tests/unit/shopify.admin.fixture.spec.ts" name="embeddedUrl &gt; includes host, embedded, and mock parameters" time="0.003636257">
        </testcase>
    </testsuite>
    <testsuite name="tests/unit/shopify.client.spec.ts" timestamp="2025-10-11T01:45:17.267Z" hostname="Jdesktop" tests="3" failures="0" errors="0" skipped="0" time="0.011539088">
        <testcase classname="tests/unit/shopify.client.spec.ts" name="getShopifyServiceContext &gt; returns context with wrapped admin client" time="0.006941004">
        </testcase>
        <testcase classname="tests/unit/shopify.client.spec.ts" name="getShopifyServiceContext &gt; retries on retryable responses using exponential backoff with jitter" time="0.001700402">
        </testcase>
        <testcase classname="tests/unit/shopify.client.spec.ts" name="getShopifyServiceContext &gt; returns final response when retries exhausted" time="0.001572649">
        </testcase>
    </testsuite>
    <testsuite name="tests/unit/shopify.inventory.spec.ts" timestamp="2025-10-11T01:45:17.267Z" hostname="Jdesktop" tests="1" failures="0" errors="0" skipped="0" time="0.008626965">
        <testcase classname="tests/unit/shopify.inventory.spec.ts" name="getInventoryAlerts &gt; returns inventory alerts below threshold" time="0.007677903">
        </testcase>
    </testsuite>
    <testsuite name="tests/unit/shopify.orders.spec.ts" timestamp="2025-10-11T01:45:17.268Z" hostname="Jdesktop" tests="1" failures="0" errors="0" skipped="0" time="0.013822632">
        <testcase classname="tests/unit/shopify.orders.spec.ts" name="getSalesPulseSummary &gt; aggregates revenue and top SKUs" time="0.012461815">
        </testcase>
    </testsuite>
    <testsuite name="tests/unit/supabase.config.spec.ts" timestamp="2025-10-11T01:45:17.268Z" hostname="Jdesktop" tests="2" failures="0" errors="0" skipped="0" time="0.084986355">
        <testcase classname="tests/unit/supabase.config.spec.ts" name="supabase config &gt; creates supabase-backed memory when credentials exist" time="0.067582344">
        </testcase>
        <testcase classname="tests/unit/supabase.config.spec.ts" name="supabase config &gt; falls back to in-memory implementation when credentials missing" time="0.016149676">
        </testcase>
    </testsuite>
    <testsuite name="tests/unit/supabase.memory.spec.ts" timestamp="2025-10-11T01:45:17.269Z" hostname="Jdesktop" tests="9" failures="0" errors="0" skipped="0" time="0.0172446">
        <testcase classname="tests/unit/supabase.memory.spec.ts" name="supabaseMemory putDecision &gt; retries when Supabase insert returns retryable error and eventually succeeds" time="0.003539321">
        </testcase>
        <testcase classname="tests/unit/supabase.memory.spec.ts" name="supabaseMemory putDecision &gt; maps decision fields to Supabase column names" time="0.003002557">
        </testcase>
        <testcase classname="tests/unit/supabase.memory.spec.ts" name="supabaseMemory putDecision &gt; falls back to legacy schema when actor columns are missing" time="0.001222179">
        </testcase>
        <testcase classname="tests/unit/supabase.memory.spec.ts" name="supabaseMemory putDecision &gt; throws when Supabase insert keeps failing with retryable error beyond max attempts" time="0.001152183">
        </testcase>
        <testcase classname="tests/unit/supabase.memory.spec.ts" name="supabaseMemory putDecision &gt; throws immediately on non-retryable error" time="0.000530231">
        </testcase>
        <testcase classname="tests/unit/supabase.memory.spec.ts" name="supabaseMemory putDecision &gt; retries when Supabase insert rejects with network error" time="0.000672728">
        </testcase>
        <testcase classname="tests/unit/supabase.memory.spec.ts" name="supabaseMemory listDecisions &gt; returns mapped decision logs" time="0.002640614">
        </testcase>
        <testcase classname="tests/unit/supabase.memory.spec.ts" name="supabaseMemory listDecisions &gt; filters by scope when provided" time="0.000863964">
        </testcase>
        <testcase classname="tests/unit/supabase.memory.spec.ts" name="supabaseMemory listDecisions &gt; falls back to legacy table when DecisionLog is unavailable" time="0.001466496">
        </testcase>
    </testsuite>
    <testsuite name="tests/unit/contracts/ga_mcp.spec.ts" timestamp="2025-10-11T01:45:17.270Z" hostname="Jdesktop" tests="1" failures="0" errors="0" skipped="1" time="0">
        <testcase classname="tests/unit/contracts/ga_mcp.spec.ts" name="GA MCP contract — staging parity &gt; aligns GA facts between Supabase mirror and MCP live host" time="0">
            <skipped/>
        </testcase>
    </testsuite>
</testsuites>
