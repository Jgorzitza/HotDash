// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
  schemas  = ["public", "auth"]
}

model Session {
  id            String    @id
  shop          String
  state         String
  isOnline      Boolean   @default(false)
  scope         String?
  expires       DateTime?
  accessToken   String
  userId        BigInt?
  firstName     String?
  lastName      String?
  email         String?
  accountOwner  Boolean   @default(false)
  locale        String?
  collaborator  Boolean?  @default(false)
  emailVerified Boolean?  @default(false)

  @@schema("public")
}

model DashboardFact {
  id          Int      @id @default(autoincrement())
  shopDomain  String
  factType    String
  scope       String?
  value       Json
  metadata    Json?
  evidenceUrl String?
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  @@index([shopDomain, factType])
  @@index([createdAt])
  @@schema("public")
}

model DecisionLog {
  id          Int      @id @default(autoincrement())
  scope       String
  actor       String
  action      String
  rationale   String?
  evidenceUrl String?
  shopDomain  String?
  externalRef String?
  payload     Json?
  createdAt   DateTime @default(now())

  @@index([scope, createdAt])
  @@schema("public")
}

model SalesPulseAction {
  id              String   @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  createdAt       DateTime @default(now()) @map("created_at") @db.Timestamptz(6)
  actionType      String   @map("action_type")
  revenueVariance Decimal? @map("revenue_variance") @db.Decimal(12, 2)
  selectedAction  String?  @map("selected_action")
  notes           String?
  operatorName    String   @map("operator_name")
  metadata        Json     @default("{}")
  project         String   @default("occ")

  @@index([createdAt(sort: Desc)], map: "idx_sales_pulse_actions_created")
  @@index([actionType], map: "idx_sales_pulse_actions_type")
  @@index([project], map: "idx_sales_pulse_actions_project")
  @@map("sales_pulse_actions")
  @@schema("public")
}

model InventoryAction {
  id               String   @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  createdAt        DateTime @default(now()) @map("created_at") @db.Timestamptz(6)
  actionType       String   @map("action_type")
  variantId        String?  @map("variant_id")
  sku              String?
  reorderQuantity  Int?     @map("reorder_quantity")
  vendorId         String?  @map("vendor_id") @db.Uuid
  velocityAnalysis String?  @map("velocity_analysis")
  operatorName     String   @map("operator_name")
  notes            String?
  metadata         Json     @default("{}")
  project          String   @default("occ")

  @@index([createdAt(sort: Desc)], map: "idx_inventory_actions_created")
  @@index([actionType], map: "idx_inventory_actions_type")
  @@index([variantId], map: "idx_inventory_actions_variant")
  @@index([project], map: "idx_inventory_actions_project")
  @@map("inventory_actions")
  @@schema("public")
}

model Notification {
  id          String    @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  userId      String    @map("user_id") @db.Uuid
  priority    String
  title       String
  message     String
  actionLabel String?   @map("action_label")
  actionUrl   String?   @map("action_url")
  readAt      DateTime? @map("read_at") @db.Timestamptz(6)
  createdAt   DateTime  @default(now()) @map("created_at") @db.Timestamptz(6)
  project     String    @default("occ")

  @@index([userId], map: "idx_notifications_user")
  @@index([project], map: "idx_notifications_project")
  @@index([createdAt(sort: Desc)], map: "idx_notifications_created")
  @@map("notifications")
  @@schema("public")
}

model NotificationPreference {
  id                   String   @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  userId               String   @map("user_id") @db.Uuid
  browserNotifications Boolean  @default(false) @map("browser_notifications")
  soundEnabled         Boolean  @default(false) @map("sound_enabled")
  frequency            String   @default("realtime")
  queueWarnings        Boolean  @default(true) @map("queue_warnings")
  perfAlerts           Boolean  @default(true) @map("perf_alerts")
  createdAt            DateTime @default(now()) @map("created_at") @db.Timestamptz(6)
  updatedAt            DateTime @default(now()) @updatedAt @map("updated_at") @db.Timestamptz(6)
  project              String   @default("occ")

  @@unique([userId, project])
  @@index([userId], map: "idx_notification_prefs_user")
  @@index([project], map: "idx_notification_prefs_project")
  @@map("notification_preferences")
  @@schema("public")
}

model UserPreference {
  id           String   @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  userId       String   @map("user_id") @db.Uuid
  tileOrder    String[] @default([]) @map("tile_order")
  visibleTiles String[] @default([]) @map("visible_tiles")
  defaultView  String   @default("grid") @map("default_view")
  theme        String   @default("auto")
  createdAt    DateTime @default(now()) @map("created_at") @db.Timestamptz(6)
  updatedAt    DateTime @default(now()) @updatedAt @map("updated_at") @db.Timestamptz(6)
  project      String   @default("occ")

  @@unique([userId, project])
  @@index([userId], map: "idx_user_preferences_user")
  @@index([project], map: "idx_user_preferences_project")
  @@map("user_preferences")
  @@schema("public")
}

model SocialPost {
  id           String            @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  shopDomain   String            @map("shop_domain")
  platform     String
  status       String
  content      String
  mediaUrls    String[]          @default([]) @map("media_urls")
  scheduledAt  DateTime?         @map("scheduled_at") @db.Timestamptz(6)
  publishedAt  DateTime?         @map("published_at") @db.Timestamptz(6)
  publerPostId String?           @map("publer_post_id")
  createdBy    String            @map("created_by")
  createdAt    DateTime          @default(now()) @map("created_at") @db.Timestamptz(6)
  updatedAt    DateTime          @default(now()) @updatedAt @map("updated_at") @db.Timestamptz(6)
  metadata     Json              @default("{}")
  project      String            @default("occ")
  analytics    SocialAnalytics[]

  @@index([shopDomain, status, createdAt(sort: Desc)], map: "idx_social_posts_shop_status")
  @@index([platform], map: "idx_social_posts_platform")
  @@index([scheduledAt], map: "idx_social_posts_scheduled")
  @@index([project], map: "idx_social_posts_project")
  @@map("social_posts")
  @@schema("public")
}

// ============================================================================
// PHASE 7-8: GROWTH TABLES (Created 2025-10-21)
// ============================================================================

model SeoAudit {
  id         String   @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  shopDomain String   @map("shop_domain")
  crawledAt  DateTime @map("crawled_at") @db.Timestamptz(6)

  pagesCrawled    Int @map("pages_crawled")
  pagesWithIssues Int @map("pages_with_issues")
  totalIssues     Int @map("total_issues")

  avgLcp Decimal? @map("avg_lcp") @db.Decimal(8, 2)
  avgFid Decimal? @map("avg_fid") @db.Decimal(8, 2)
  avgCls Decimal? @map("avg_cls") @db.Decimal(5, 3)

  technicalScore   Int? @map("technical_score")
  contentScore     Int? @map("content_score")
  performanceScore Int? @map("performance_score")
  mobileScore      Int? @map("mobile_score")

  criticalIssues       Int @default(0) @map("critical_issues")
  highPriorityIssues   Int @default(0) @map("high_priority_issues")
  mediumPriorityIssues Int @default(0) @map("medium_priority_issues")
  lowPriorityIssues    Int @default(0) @map("low_priority_issues")

  auditProvider String? @map("audit_provider")
  auditUrl      String? @map("audit_url")
  metadata      Json    @default("{}")

  createdAt DateTime @default(now()) @map("created_at") @db.Timestamptz(6)
  project   String   @default("occ")

  @@index([shopDomain, crawledAt(sort: Desc)], map: "idx_seo_audits_shop_crawled")
  @@index([project], map: "idx_seo_audits_project")
  @@map("seo_audits")
  @@schema("public")
}

model SeoRanking {
  id         String @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  shopDomain String @map("shop_domain")
  keyword    String

  position         Int?
  previousPosition Int? @map("previous_position")
  positionChange   Int? @map("position_change")

  searchVolume Int?    @map("search_volume")
  searchEngine String  @default("google") @map("search_engine")
  location     String?
  device       String?

  rankingUrl      String? @map("ranking_url")
  featuredSnippet Boolean @default(false) @map("featured_snippet")

  trackedAt DateTime @map("tracked_at") @db.Timestamptz(6)
  metadata  Json     @default("{}")
  project   String   @default("occ")

  @@index([shopDomain, keyword, trackedAt(sort: Desc)], map: "idx_seo_rankings_shop_keyword_tracked")
  @@index([keyword], map: "idx_seo_rankings_keyword")
  @@index([position], map: "idx_seo_rankings_position")
  @@index([project], map: "idx_seo_rankings_project")
  @@map("seo_rankings")
  @@schema("public")
}

model AdCampaign {
  id         String @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  shopDomain String @map("shop_domain")

  platformCampaignId String @map("platform_campaign_id")
  platform           String @default("google_ads")
  campaignName       String @map("campaign_name")
  campaignStatus     String @map("campaign_status")

  dailyBudget Decimal? @map("daily_budget") @db.Decimal(12, 2)
  totalBudget Decimal? @map("total_budget") @db.Decimal(12, 2)
  bidStrategy String?  @map("bid_strategy")

  startDate DateTime  @map("start_date") @db.Date
  endDate   DateTime? @map("end_date") @db.Date

  targetLocations String[] @default([]) @map("target_locations")
  targetKeywords  String[] @default([]) @map("target_keywords")

  createdBy String   @map("created_by")
  createdAt DateTime @default(now()) @map("created_at") @db.Timestamptz(6)
  updatedAt DateTime @default(now()) @updatedAt @map("updated_at") @db.Timestamptz(6)

  metadata Json   @default("{}")
  project  String @default("occ")

  performance AdPerformance[]

  @@index([shopDomain, campaignStatus], map: "idx_ad_campaigns_shop_status")
  @@index([platformCampaignId], map: "idx_ad_campaigns_platform_id")
  @@index([startDate, endDate], map: "idx_ad_campaigns_dates")
  @@index([project], map: "idx_ad_campaigns_project")
  @@map("ad_campaigns")
  @@schema("public")
}

model AdPerformance {
  id         String     @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  campaignId String     @map("campaign_id") @db.Uuid
  campaign   AdCampaign @relation(fields: [campaignId], references: [id], onDelete: Cascade)
  shopDomain String     @map("shop_domain")
  date       DateTime   @db.Date

  impressions Int @default(0)
  clicks      Int @default(0)
  conversions Int @default(0)

  cost    Decimal @default(0) @db.Decimal(12, 2)
  revenue Decimal @default(0) @db.Decimal(12, 2)

  ctr  Decimal? @db.Decimal(5, 2)
  cpc  Decimal? @db.Decimal(10, 2)
  cpa  Decimal? @db.Decimal(10, 2)
  roas Decimal? @db.Decimal(8, 2)

  avgPosition  Decimal? @map("avg_position") @db.Decimal(4, 2)
  qualityScore Decimal? @map("quality_score") @db.Decimal(3, 1)

  createdAt DateTime @default(now()) @map("created_at") @db.Timestamptz(6)
  project   String   @default("occ")

  @@index([campaignId, date(sort: Desc)], map: "idx_ad_performance_campaign_date")
  @@index([shopDomain, date(sort: Desc)], map: "idx_ad_performance_shop_date")
  @@index([roas(sort: Desc)], map: "idx_ad_performance_roas")
  @@index([project], map: "idx_ad_performance_project")
  @@map("ad_performance")
  @@schema("public")
}

model SocialAnalytics {
  id           String     @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  socialPostId String     @map("social_post_id") @db.Uuid
  socialPost   SocialPost @relation(fields: [socialPostId], references: [id], onDelete: Cascade)
  shopDomain   String     @map("shop_domain")
  platform     String

  views    Int @default(0)
  likes    Int @default(0)
  comments Int @default(0)
  shares   Int @default(0)
  saves    Int @default(0)

  reach       Int @default(0)
  impressions Int @default(0)

  linkClicks    Int @default(0) @map("link_clicks")
  profileVisits Int @default(0) @map("profile_visits")

  engagementRate Decimal? @map("engagement_rate") @db.Decimal(5, 2)

  videoViews   Int      @default(0) @map("video_views")
  avgWatchTime Decimal? @map("avg_watch_time") @db.Decimal(8, 2)

  measuredAt DateTime @map("measured_at") @db.Timestamptz(6)
  createdAt  DateTime @default(now()) @map("created_at") @db.Timestamptz(6)

  metadata Json   @default("{}")
  project  String @default("occ")

  @@index([socialPostId, measuredAt(sort: Desc)], map: "idx_social_analytics_post")
  @@index([shopDomain, platform, measuredAt(sort: Desc)], map: "idx_social_analytics_shop_platform")
  @@index([engagementRate(sort: Desc)], map: "idx_social_analytics_engagement")
  @@index([project], map: "idx_social_analytics_project")
  @@map("social_analytics")
  @@schema("public")
}

// ============================================================================
// PHASE 9: ONBOARDING TABLES (Created 2025-10-21)
// ============================================================================

model OnboardingProgress {
  id                String    @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  userId            String    @map("user_id") @db.Uuid
  shopDomain        String    @map("shop_domain")
  
  stepKey           String    @map("step_key")
  stepCategory      String    @map("step_category")
  stepOrder         Int       @map("step_order")
  
  status            String    @default("not_started")
  completedAt       DateTime? @map("completed_at") @db.Timestamptz(6)
  skippedAt         DateTime? @map("skipped_at") @db.Timestamptz(6)
  
  attempts          Int       @default(0)
  timeSpentSeconds  Int       @default(0) @map("time_spent_seconds")
  
  createdAt         DateTime  @default(now()) @map("created_at") @db.Timestamptz(6)
  updatedAt         DateTime  @default(now()) @updatedAt @map("updated_at") @db.Timestamptz(6)
  
  metadata          Json      @default("{}")
  project           String    @default("occ")
  
  @@unique([userId, shopDomain, stepKey])
  @@index([userId, shopDomain, stepOrder], map: "idx_onboarding_user_shop")
  @@index([status], map: "idx_onboarding_status")
  @@index([completedAt(sort: Desc)], map: "idx_onboarding_completed")
  @@index([project], map: "idx_onboarding_project")
  @@map("onboarding_progress")
  @@schema("public")
}

model FeatureTour {
  id                String    @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  userId            String    @map("user_id") @db.Uuid
  
  tourKey           String    @map("tour_key")
  tourName          String    @map("tour_name")
  tourDescription   String?   @map("tour_description")
  
  steps             Json
  triggerCondition  String?   @map("trigger_condition")
  
  status            String    @default("pending")
  startedAt         DateTime? @map("started_at") @db.Timestamptz(6)
  completedAt       DateTime? @map("completed_at") @db.Timestamptz(6)
  dismissedAt       DateTime? @map("dismissed_at") @db.Timestamptz(6)
  currentStep       Int       @default(0) @map("current_step")
  
  timesShown        Int       @default(0) @map("times_shown")
  interactions      Int       @default(0)
  
  createdAt         DateTime  @default(now()) @map("created_at") @db.Timestamptz(6)
  updatedAt         DateTime  @default(now()) @updatedAt @map("updated_at") @db.Timestamptz(6)
  
  metadata          Json      @default("{}")
  project           String    @default("occ")
  
  @@unique([userId, tourKey])
  @@index([userId, status], map: "idx_feature_tours_user_status")
  @@index([tourKey], map: "idx_feature_tours_key")
  @@index([completedAt(sort: Desc)], map: "idx_feature_tours_completed")
  @@index([project], map: "idx_feature_tours_project")
  @@map("feature_tours")
  @@schema("public")
}
