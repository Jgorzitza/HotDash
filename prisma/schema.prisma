// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
  schemas  = ["public", "auth"]
}

model Session {
  id            String    @id
  shop          String
  state         String
  isOnline      Boolean   @default(false)
  scope         String?
  expires       DateTime?
  accessToken   String
  userId        BigInt?
  firstName     String?
  lastName      String?
  email         String?
  accountOwner  Boolean   @default(false)
  locale        String?
  collaborator  Boolean?  @default(false)
  emailVerified Boolean?  @default(false)
  
  @@schema("public")
}

model DashboardFact {
  id          Int      @id @default(autoincrement())
  shopDomain  String
  factType    String
  scope       String?
  value       Json
  metadata    Json?
  evidenceUrl String?
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  @@index([shopDomain, factType])
  @@index([createdAt])
  @@schema("public")
}

model DecisionLog {
  id          Int      @id @default(autoincrement())
  scope       String
  actor       String
  action      String
  rationale   String?
  evidenceUrl String?
  shopDomain  String?
  externalRef String?
  payload     Json?
  createdAt   DateTime @default(now())

  @@index([scope, createdAt])
  @@schema("public")
}

model Action {
  id              Int      @id @default(autoincrement())
  // Core identification
  toolName        String   // e.g. "chatwoot_send_public_reply", "shopify_cancel_order"
  agent           String   // Which agent requested this action
  
  // Action details
  parameters      Json     // Tool parameters (conversationId, orderId, etc.)
  rationale       String?  // Why the agent is suggesting this action
  
  // Approval workflow
  status          String   @default("pending") // pending | approved | rejected | executed | failed
  needsApproval   Boolean  @default(true)
  
  // Context
  conversationId  Int?     // Chatwoot conversation ID if applicable
  shopDomain      String?  // Shop this action relates to
  externalRef     String?  // Order ID, product ID, etc.
  
  // Audit trail
  requestedAt     DateTime @default(now())
  reviewedAt      DateTime?
  reviewedBy      String?  // CEO email or user ID
  executedAt      DateTime?
  
  // Execution results
  result          Json?    // Result of executing the action
  error           String?  // Error message if execution failed
  
  // Metadata
  priority        String   @default("normal") // urgent | high | normal | low
  tags            String[] // For filtering/categorization
  
  @@index([status, requestedAt])
  @@index([conversationId])
  @@index([shopDomain, status])
  @@index([agent, status])
  @@schema("public")
}
