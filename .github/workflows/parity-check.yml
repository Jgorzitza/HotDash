name: Staging/Production Parity Check

on:
  schedule:
    # Run daily at 10 AM UTC
    - cron: '0 10 * * *'
  workflow_dispatch:

permissions:
  contents: read
  issues: write

jobs:
  parity-check:
    name: Check Environment Parity
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Setup Fly.io CLI
        uses: superfly/flyctl-actions/setup-flyctl@master

      - name: Run parity check script
        id: parity
        run: |
          chmod +x scripts/ops/check-parity.sh
          ./scripts/ops/check-parity.sh > parity-report.txt 2>&1 || echo "issues_found=true" >> $GITHUB_OUTPUT
          
          cat parity-report.txt
        env:
          FLY_API_TOKEN: ${{ secrets.FLY_API_TOKEN }}

      - name: Upload parity report
        uses: actions/upload-artifact@v4
        with:
          name: parity-report-${{ github.run_number }}
          path: parity-report.txt
          retention-days: 30

      - name: Create issue if parity issues found
        if: steps.parity.outputs.issues_found == 'true'
        uses: actions/github-script@v7
        with:
          script: |
            const fs = require('fs');
            const report = fs.readFileSync('parity-report.txt', 'utf8');
            
            const body = `
            ## Staging/Production Parity Issues Detected
            
            The automated parity check found configuration differences between staging and production.
            
            ### Report
            
            \`\`\`
            ${report}
            \`\`\`
            
            ### Action Required
            - Review the differences above
            - Sync secrets if needed
            - Update resource configuration if needed
            - Verify deployment versions
            
            **Workflow Run:** ${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}
            `;
            
            // Check if issue already exists
            const issues = await github.rest.issues.listForRepo({
              owner: context.repo.owner,
              repo: context.repo.repo,
              state: 'open',
              labels: 'parity-issue'
            });
            
            if (issues.data.length === 0) {
              await github.rest.issues.create({
                owner: context.repo.owner,
                repo: context.repo.repo,
                title: '⚠️ Staging/Production Parity Issues',
                body: body,
                labels: ['parity-issue', 'P2', 'devops']
              });
            }

      - name: Summary
        run: |
          {
            echo "## Parity Check Summary";
            echo "";
            if [ "${{ steps.parity.outputs.issues_found }}" = "true" ]; then
              echo "⚠️ **Parity issues found** - Review required";
            else
              echo "✅ **No parity issues** - Environments in sync";
            fi
          } >> "$GITHUB_STEP_SUMMARY"

