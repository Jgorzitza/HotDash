name: Knowledge Base Daily Refresh

# AI-KB-REFRESH-001: Daily scheduled knowledge base refresh
# Runs at 02:00 UTC daily to refresh the knowledge base via LlamaIndex MCP

on:
  schedule:
    # Run daily at 02:00 UTC (9pm EST / 10pm EDT)
    - cron: '0 2 * * *'
  
  # Allow manual trigger
  workflow_dispatch:
    inputs:
      environment:
        description: 'Environment to refresh'
        required: true
        default: 'production'
        type: choice
        options:
          - production
          - staging

jobs:
  refresh-knowledge-base:
    name: Refresh Knowledge Base
    runs-on: ubuntu-latest
    
    steps:
      - name: Trigger Knowledge Base Refresh
        run: |
          echo "üîÑ Triggering knowledge base refresh..."
          
          # Determine API URL based on environment
          if [ "${{ github.event.inputs.environment }}" = "staging" ]; then
            API_URL="https://hotdash-staging.fly.dev/api/cron/knowledge-base-refresh"
          else
            API_URL="https://hotdash-production.fly.dev/api/cron/knowledge-base-refresh"
          fi
          
          # Call the cron endpoint
          RESPONSE=$(curl -s -w "\n%{http_code}" -X POST "$API_URL" \
            -H "Authorization: Bearer ${{ secrets.CRON_SECRET }}" \
            -H "Content-Type: application/json")
          
          # Extract HTTP status code (last line)
          HTTP_CODE=$(echo "$RESPONSE" | tail -n1)
          
          # Extract response body (all but last line)
          BODY=$(echo "$RESPONSE" | sed '$d')
          
          echo "Response: $BODY"
          echo "HTTP Status: $HTTP_CODE"
          
          # Check if successful
          if [ "$HTTP_CODE" -eq 200 ]; then
            echo "‚úÖ Knowledge base refresh completed successfully"
            
            # Extract duration if available
            DURATION=$(echo "$BODY" | jq -r '.durationMs // "N/A"')
            echo "Duration: ${DURATION}ms"
            
            exit 0
          else
            echo "‚ùå Knowledge base refresh failed"
            echo "Error: $(echo "$BODY" | jq -r '.error // "Unknown error"')"
            exit 1
          fi
      
      - name: Notify on Failure
        if: failure()
        run: |
          echo "::error::Knowledge base daily refresh failed"
          echo "Check the logs above for details"
          # In production, you might want to send a notification to Slack, Discord, etc.

