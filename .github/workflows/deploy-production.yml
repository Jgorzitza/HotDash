name: Deploy Production

on:
  workflow_dispatch:
    inputs:
      release_tag:
        description: 'Git tag to deploy (format vYYYY.MM.DDx)'
        required: true
        type: string
      checklist_url:
        description: 'Link to completed go-live checklist snapshot'
        required: true
        type: string
      reason:
        description: 'Operational context / change ticket'
        required: true
        type: string
      manager_approver:
        description: 'Manager reviewer approving this release'
        required: true
        type: string
      reliability_approver:
        description: 'Reliability reviewer approving this release'
        required: true
        type: string

concurrency:
  group: deploy-production
  cancel-in-progress: false

permissions:
  contents: read
  id-token: write

jobs:
  preflight:
    runs-on: ubuntu-latest
    env:
      SUPABASE_URL: ${{ secrets.SUPABASE_URL }}
      SUPABASE_SERVICE_KEY: ${{ secrets.SUPABASE_SERVICE_KEY }}
    steps:
      - uses: actions/checkout@v4
        with:
          ref: ${{ inputs.release_tag }}

      - name: Validate release tag format
        run: |
          RELEASE_TAG='${{ inputs.release_tag }}'
          if [[ ! $RELEASE_TAG =~ ^v[0-9]{4}\.[0-9]{2}\.[0-9]{2}[a-z]?$ ]]; then
            echo "::error::Release tag must match vYYYY.MM.DDx (e.g., v2025.10.07a)." >&2
            exit 1
          fi

      - name: Validate go-live checklist link
        run: |
          if [[ -z '${{ inputs.checklist_url }}' ]]; then
            echo "::error::Provide checklist_url pointing to completed go-live checklist." >&2
            exit 1
          fi

      - name: Validate approvals
        run: |
          if [[ -z '${{ inputs.manager_approver }}' ]]; then
            echo "::error::manager_approver input required (manager sign-off)." >&2
            exit 1
          fi
          if [[ -z '${{ inputs.reliability_approver }}' ]]; then
            echo "::error::reliability_approver input required (reliability sign-off)." >&2
            exit 1
          fi

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: npm

      - name: Install dependencies
        run: npm ci

      - name: Install Playwright browsers
        run: npx playwright install --with-deps

      - name: Typecheck
        run: npm run typecheck

      - name: Lint
        run: npm run lint

      - name: Run unit tests
        run: npm run test:unit

      - name: Run Playwright tests
        run: npm run test:e2e

      - name: Upload Playwright report
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: playwright-report-prod-${{ github.run_number }}
          path: coverage/playwright
          retention-days: 30

  deploy:
    runs-on: ubuntu-latest
    needs: preflight
    environment:
      name: production
      url: ${{ steps.envmeta.outputs.app_url }}
    steps:
      - uses: actions/checkout@v4
        with:
          ref: ${{ inputs.release_tag }}

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: npm

      - name: Install dependencies
        run: npm ci

      - name: Build application bundle
        run: npm run build

      - name: Capture environment metadata
        id: envmeta
        run: echo "app_url=$PRODUCTION_APP_URL" >> "$GITHUB_OUTPUT"
        env:
          PRODUCTION_APP_URL: ${{ secrets.PRODUCTION_APP_URL }}

      - name: Record release metadata
        run: |
          mkdir -p artifacts/deploy
          cat <<MD > artifacts/deploy/production-release-${{ github.run_number }}.md
          # Production Release Metadata
          - Release tag: ${{ inputs.release_tag }}
          - Checklist: ${{ inputs.checklist_url }}
          - Reason: ${{ inputs.reason }}
          - Manager approver: ${{ inputs.manager_approver }}
          - Reliability approver: ${{ inputs.reliability_approver }}
          - Workflow run: ${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}
          MD

      - name: Deploy to Shopify production
        run: bash scripts/deploy/production-deploy.sh
        env:
          SHOPIFY_CLI_AUTH_TOKEN_PROD: ${{ secrets.SHOPIFY_CLI_AUTH_TOKEN_PROD }}
          SHOPIFY_API_KEY_PROD: ${{ secrets.SHOPIFY_API_KEY_PROD }}
          SHOPIFY_API_SECRET_PROD: ${{ secrets.SHOPIFY_API_SECRET_PROD }}
          PRODUCTION_SHOP_DOMAIN: ${{ secrets.PRODUCTION_SHOP_DOMAIN }}
          PRODUCTION_APP_URL: ${{ secrets.PRODUCTION_APP_URL }}
          PRODUCTION_SMOKE_TEST_URL: ${{ secrets.PRODUCTION_SMOKE_TEST_URL }}

      - name: Run Lighthouse audit (production)
        env:
          LIGHTHOUSE_TARGET: ${{ secrets.PRODUCTION_SMOKE_TEST_URL }}
        run: npm run test:lighthouse

      - name: Upload deployment artifacts
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: production-deploy-${{ github.run_number }}
          path: |
            artifacts/deploy
            coverage/lighthouse
          retention-days: 30

      - name: Publish deployment summary
        if: always()
        run: |
          {
            echo "## Production Deployment Summary";
            echo "- Release tag: ${{ inputs.release_tag }}";
            echo "- Checklist: ${{ inputs.checklist_url }}";
            echo "- Reason: ${{ inputs.reason }}";
            echo "- Manager approver: ${{ inputs.manager_approver }}";
            echo "- Reliability approver: ${{ inputs.reliability_approver }}";
            echo "- App URL: ${{ secrets.PRODUCTION_APP_URL }}";
          } >> "$GITHUB_STEP_SUMMARY"
