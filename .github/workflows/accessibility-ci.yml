name: Accessibility CI
on:
  pull_request:
    branches: [main, develop]
  push:
    branches: [main]

jobs:
  a11y-tests:
    name: Accessibility Tests (WCAG 2.1 AA)
    runs-on: ubuntu-latest
    timeout-minutes: 15

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Install Playwright browsers
        run: npx playwright install --with-deps chromium

      - name: Build application
        run: npm run build
        env:
          SCOPES: write_products
          SHOPIFY_API_KEY: test-key
          SHOPIFY_API_SECRET: test-secret
          SHOPIFY_APP_URL: http://localhost:3000
          DATABASE_URL: postgresql://test:test@localhost:5432/test

      - name: Start application server
        run: |
          npm start &
          sleep 10
          curl -f http://localhost:3000/app || exit 1
        env:
          SCOPES: write_products
          DATABASE_URL: postgresql://test:test@localhost:5432/test

      - name: Run accessibility tests
        run: npm run test:a11y
        env:
          CI: true

      - name: Upload accessibility report
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: accessibility-report
          path: |
            coverage/playwright/accessibility-report.json
            coverage/playwright/accessibility-violations.html
          retention-days: 30

      - name: Comment on PR with violations
        if: failure() && github.event_name == 'pull_request'
        uses: actions/github-script@v7
        with:
          script: |
            const fs = require('fs');
            const report = JSON.parse(fs.readFileSync('coverage/playwright/accessibility-report.json', 'utf8'));
            
            const violations = report.violations || [];
            if (violations.length === 0) return;
            
            const comment = `## ❌ Accessibility Violations Found (${violations.length})
            
            This PR introduces accessibility issues that must be fixed before merging.
            
            ### Summary
            ${violations.map(v => `- **${v.id}** (${v.impact}): ${v.nodes.length} instance(s)`).join('\n')}
            
            ### Details
            ${violations.slice(0, 5).map(v => `
            #### ${v.id} (Impact: ${v.impact})
            **Description**: ${v.description}
            **Help**: ${v.helpUrl}
            **Affected elements**: ${v.nodes.length}
            \`\`\`html
            ${v.nodes[0].html}
            \`\`\`
            `).join('\n')}
            
            ${violations.length > 5 ? `\n_...and ${violations.length - 5} more violations. See full report in artifacts._` : ''}
            
            ### Required Actions
            1. Fix all CRITICAL and SERIOUS violations
            2. Address MODERATE violations where possible
            3. Document any intentional MINOR violations
            4. Re-run tests: \`npm run test:a11y\`
            
            **Target**: Zero WCAG 2.1 AA violations
            `;
            
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: comment
            });

  a11y-audit:
    name: Accessibility Audit Report
    runs-on: ubuntu-latest
    needs: a11y-tests
    if: always()

    steps:
      - name: Download accessibility artifacts
        uses: actions/download-artifact@v4
        with:
          name: accessibility-report

      - name: Generate accessibility summary
        run: |
          echo "# Accessibility Audit Summary" > $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "## WCAG 2.1 Level AA Compliance" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          
          if [ -f accessibility-report.json ]; then
            violations=$(jq '.violations | length' accessibility-report.json)
            echo "**Total Violations**: $violations" >> $GITHUB_STEP_SUMMARY
            
            if [ "$violations" -eq "0" ]; then
              echo "✅ **Status**: PASS - No accessibility violations" >> $GITHUB_STEP_SUMMARY
            else
              echo "❌ **Status**: FAIL - Accessibility violations detected" >> $GITHUB_STEP_SUMMARY
            fi
          else
            echo "⚠️ **Status**: No report generated" >> $GITHUB_STEP_SUMMARY
          fi

