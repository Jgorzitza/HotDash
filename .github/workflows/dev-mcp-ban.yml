name: Dev MCP Ban - Production Safety

on:
  pull_request:
    branches: [main, agent-launch-20251024]
  push:
    branches: [main, agent-launch-20251024]

jobs:
  dev-mcp-ban:
    name: Enforce Dev MCP Ban
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Determine changed source files
        id: diff
        env:
          BASE_REF: ${{ github.event.pull_request.base.ref }}
        run: |
          git fetch origin $BASE_REF --depth=200
          BASE_SHA=$(git rev-parse origin/$BASE_REF)
          HEAD_SHA=$(git rev-parse HEAD)
          git diff --name-only $BASE_SHA $HEAD_SHA > changed.txt
          grep -E '\.(ts|tsx)$' changed.txt > changed-ts.txt || true
          count=$(wc -l < changed-ts.txt | tr -d ' ')
          echo "count=$count" >> $GITHUB_OUTPUT

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Check for Dev MCP imports in production code
        if: steps.diff.outputs.count != '0'
        run: |
          RAW=$(cat changed-ts.txt | grep -Ev '^(app/services/growth-engine-support\.server\.ts|app/services/__tests__/growth-engine-support\.test\.ts)$')
          EXISTING=()
          while IFS= read -r file; do
            [ -z "$file" ] && continue
            if [ -f "$file" ]; then
              EXISTING+=("$file")
            fi
          done <<< "$RAW"

          if [ ${#EXISTING[@]} -eq 0 ]; then
            echo "‚úÖ No enforceable TypeScript files changed; skipping Dev MCP scan"
            exit 0
          fi

          echo "üîç Checking for Dev MCP imports in production code..."
          echo "Files scanned:"
          printf '%s\n' "${EXISTING[@]}"

          MATCHES=$(grep -inE "mcp.*dev|dev.*mcp" "${EXISTING[@]}" 2>/dev/null || true)
          if [ -n "$MATCHES" ]; then
            echo "$MATCHES"
            echo "‚ùå Dev MCP imports detected in production code"
            echo "Dev MCP is for development/staging ONLY"
            echo "Production builds MUST FAIL if Dev MCP detected"
            echo ""
            echo "Allowed locations for Dev MCP:"
            echo "- scripts/ (non-runtime dev scripts)"
            echo "- tests/ (test utilities)"
            echo "- .cursor/ (Cursor IDE config)"
            echo "- docs/ (documentation)"
            echo ""
            echo "FORBIDDEN in production code:"
            echo "- app/ directory (runtime bundles)"
            echo ""
            echo "Please remove Dev MCP imports from app/ directory"
            exit 1
          fi
          
          echo "‚úÖ No Dev MCP imports found in production code"

      - name: Skip scan (no applicable files)
        if: steps.diff.outputs.count == '0'
        run: |
          echo "‚úÖ No TypeScript changes detected; skipping Dev MCP enforcement for this PR"

      - name: Check PR body for Dev MCP Check section
        env:
          PR_BODY: ${{ github.event.pull_request.body }}
        run: |
          python3 - <<'PY'
            import os
            import re
            import sys

            body = os.environ.get("PR_BODY", "")

            if not re.search(r"^## Dev MCP Check", body, re.MULTILINE):
                sys.stderr.write("‚ùå PR body missing '## Dev MCP Check' section\n")
                sys.stderr.write("Required block including verification checklist is missing.\n")
                sys.exit(1)

            if not re.search(r"Verified:\s*No[^\n]*(?:mcp.*dev|dev.*mcp)", body, re.IGNORECASE):
                sys.stderr.write("‚ùå Dev MCP Check section does not indicate verification\n")
                sys.stderr.write("Must include a line such as 'Verified: No mcp.*dev or dev.*mcp imports in app/ (searched with grep)'.\n")
                sys.exit(1)

            print("‚úÖ Dev MCP Check section validation passed")
          PY

      - name: Report results
        run: |
          echo "‚úÖ Dev MCP Ban validation completed successfully"
          echo "No Dev MCP imports found in production code"
          echo "Production safety maintained"
