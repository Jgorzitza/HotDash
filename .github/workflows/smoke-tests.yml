name: Production Smoke Tests

on:
  # Run on every push to main
  push:
    branches: [main]
  
  # Run on schedule (every 15 minutes)
  schedule:
    - cron: '*/15 * * * *'
  
  # Allow manual trigger
  workflow_dispatch:
    inputs:
      environment:
        description: 'Environment to test'
        required: true
        default: 'production'
        type: choice
        options:
          - production
          - staging
          - local

jobs:
  smoke-tests:
    name: Run Smoke Tests
    runs-on: ubuntu-latest
    timeout-minutes: 10
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
      
      - name: Install dependencies
        run: npm ci
      
      - name: Install Playwright browsers
        run: npx playwright install --with-deps chromium
      
      - name: Run smoke tests
        env:
          PRODUCTION_URL: ${{ secrets.PRODUCTION_URL }}
          STAGING_URL: ${{ secrets.STAGING_URL }}
          TEST_ENV: ${{ github.event.inputs.environment || 'production' }}
        run: npm run test:smoke:ci
        continue-on-error: true
      
      - name: Upload test results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: smoke-test-results
          path: |
            artifacts/smoke-tests/
            test-results/
          retention-days: 30
      
      - name: Upload Playwright report
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: playwright-report
          path: playwright-report/
          retention-days: 30
      
      - name: Comment on PR (if applicable)
        if: github.event_name == 'pull_request' && always()
        uses: actions/github-script@v7
        with:
          script: |
            const fs = require('fs');
            const resultsPath = 'artifacts/smoke-results.json';
            
            if (fs.existsSync(resultsPath)) {
              const results = JSON.parse(fs.readFileSync(resultsPath, 'utf8'));
              
              const body = `## üîç Smoke Test Results
              
              **Environment:** ${results.environment || 'production'}
              **Status:** ${results.failed > 0 ? '‚ùå Failed' : '‚úÖ Passed'}
              
              - ‚úÖ Passed: ${results.passed || 0}
              - ‚ùå Failed: ${results.failed || 0}
              - ‚è≠Ô∏è Skipped: ${results.skipped || 0}
              - ‚è±Ô∏è Duration: ${((results.duration || 0) / 1000).toFixed(2)}s
              
              [View full report](https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }})
              `;
              
              github.rest.issues.createComment({
                issue_number: context.issue.number,
                owner: context.repo.owner,
                repo: context.repo.repo,
                body: body
              });
            }
      
      - name: Notify on failure
        if: failure()
        uses: actions/github-script@v7
        with:
          script: |
            // Would integrate with Slack/PagerDuty here
            console.log('‚ùå Smoke tests failed - notification would be sent');
      
      - name: Fail job if tests failed
        if: failure()
        run: exit 1

  report-status:
    name: Report Status
    needs: smoke-tests
    runs-on: ubuntu-latest
    if: always()
    
    steps:
      - name: Report success
        if: needs.smoke-tests.result == 'success'
        run: echo "‚úÖ All smoke tests passed"
      
      - name: Report failure
        if: needs.smoke-tests.result == 'failure'
        run: |
          echo "‚ùå Smoke tests failed"
          exit 1

